!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("enigma-js",[],t):"object"==typeof exports?exports["enigma-js"]=t():e["enigma-js"]=t()}(global,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=14)}([function(e,t){e.exports=require("node-forge")},function(e,t){e.exports=require("eventemitter3")},function(e,t){e.exports=require("jsbi")},function(e,t){e.exports=require("web3-utils")},function(e,t){e.exports=require("buffer")},function(e,t){e.exports=require("zlib")},function(e,t){e.exports=require("eth-crypto")},function(e,t){e.exports=require("elliptic")},function(e){e.exports=JSON.parse('{"contractName":"Enigma","abi":[{"constant":true,"inputs":[],"name":"getAllSecretContractAddresses","outputs":[{"name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getTaskTimeoutSize","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getWorkersParams","outputs":[{"components":[{"name":"firstBlockNumber","type":"uint256"},{"name":"workers","type":"address[]"},{"name":"stakes","type":"uint256[]"},{"name":"seed","type":"uint256"}],"name":"","type":"tuple[5]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_scAddr","type":"bytes32"}],"name":"getSecretContract","outputs":[{"components":[{"name":"owner","type":"address"},{"name":"preCodeHash","type":"bytes32"},{"name":"codeHash","type":"bytes32"},{"name":"stateDeltaHashes","type":"bytes32[]"},{"name":"status","type":"uint8"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_taskId","type":"bytes32"}],"name":"getTaskRecord","outputs":[{"components":[{"name":"sender","type":"address"},{"name":"inputsHash","type":"bytes32"},{"name":"outputHash","type":"bytes32"},{"name":"gasLimit","type":"uint64"},{"name":"gasPx","type":"uint64"},{"name":"blockNumber","type":"uint256"},{"name":"status","type":"uint8"},{"name":"proof","type":"bytes"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_signer","type":"address"}],"name":"getWorkerFromSigningAddress","outputs":[{"name":"","type":"address"},{"components":[{"name":"signer","type":"address"},{"name":"status","type":"uint8"},{"name":"report","type":"bytes"},{"name":"balance","type":"uint256"},{"components":[{"name":"workerEventType","type":"uint8"},{"name":"blockNumber","type":"uint256"},{"name":"balance","type":"uint256"}],"name":"workerLogs","type":"tuple[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_worker","type":"address"}],"name":"getWorker","outputs":[{"components":[{"name":"signer","type":"address"},{"name":"status","type":"uint8"},{"name":"report","type":"bytes"},{"name":"balance","type":"uint256"},{"components":[{"name":"workerEventType","type":"uint8"},{"name":"blockNumber","type":"uint256"},{"name":"balance","type":"uint256"}],"name":"workerLogs","type":"tuple[]"}],"name":"","type":"tuple"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getSigningAddress","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getEpochSize","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_sender","type":"address"}],"name":"getUserTaskDeployments","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_tokenAddress","type":"address"},{"name":"_principal","type":"address"},{"name":"_epochSize","type":"uint256"},{"name":"_timeoutThreshold","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"custodian","type":"address"},{"indexed":false,"name":"signer","type":"address"}],"name":"Registered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"seed","type":"uint256"},{"indexed":false,"name":"firstBlockNumber","type":"uint256"},{"indexed":false,"name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"name":"workers","type":"address[]"},{"indexed":false,"name":"stakes","type":"uint256[]"},{"indexed":false,"name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint64"},{"indexed":false,"name":"gasPx","type":"uint64"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"workerAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"codeHash","type":"bytes32"},{"indexed":false,"name":"initStateDeltaHash","type":"bytes32"}],"name":"SecretContractDeployed","type":"event"},{"constant":false,"inputs":[{"name":"_signer","type":"address"},{"name":"_report","type":"bytes"},{"name":"_signature","type":"bytes"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_custodian","type":"address"},{"name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"login","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"logout","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"},{"name":"_codeHash","type":"bytes32"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"deploySecretContractFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"},{"name":"_preCodeHash","type":"bytes32"},{"name":"_codeHash","type":"bytes32"},{"name":"_initStateDeltaHash","type":"bytes32"},{"name":"_optionalEthereumData","type":"bytes"},{"name":"_optionalEthereumContractAddress","type":"address"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"deploySecretContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"countSecretContracts","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_start","type":"uint256"},{"name":"_stop","type":"uint256"}],"name":"getSecretContractAddresses","outputs":[{"name":"","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHash","type":"bytes32"},{"name":"_gasLimit","type":"uint64"},{"name":"_gasPx","type":"uint64"},{"name":"_firstBlockNumber","type":"uint256"},{"name":"_nonce","type":"uint256"}],"name":"createDeploymentTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_inputsHash","type":"bytes32"},{"name":"_gasLimit","type":"uint64"},{"name":"_gasPx","type":"uint64"},{"name":"_firstBlockNumber","type":"uint256"}],"name":"createTaskRecord","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_scAddr","type":"bytes32"},{"name":"_taskId","type":"bytes32"},{"name":"_stateDeltaHash","type":"bytes32"},{"name":"_outputHash","type":"bytes32"},{"name":"_optionalEthereumData","type":"bytes"},{"name":"_optionalEthereumContractAddress","type":"address"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"commitReceipt","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_scAddr","type":"bytes32"},{"name":"_taskId","type":"bytes32"},{"name":"_outputHash","type":"bytes32"},{"name":"_gasUsed","type":"uint64"},{"name":"_sig","type":"bytes"}],"name":"commitTaskFailure","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_taskId","type":"bytes32"}],"name":"returnFeesForTask","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_blockNumber","type":"uint256"},{"name":"_seed","type":"uint256"},{"name":"_sig","type":"bytes"}],"name":"setWorkersParams","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getActiveWorkers","outputs":[{"name":"","type":"address[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getFirstBlockNumber","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"}],"name":"getWorkerParams","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"address[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_blockNumber","type":"uint256"},{"name":"_scAddr","type":"bytes32"}],"name":"getWorkerGroup","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_custodian","type":"address"}],"name":"getReport","outputs":[{"name":"","type":"address"},{"name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_data","type":"bytes"},{"name":"_signature","type":"bytes"}],"name":"verifyReport","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.8+commit.23d335f2\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getActiveWorkers\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getWorkerGroup\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"logout\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"withdraw\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_stateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitReceipt\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"deposit\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_preCodeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_initStateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContract\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_seed\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"setWorkersParams\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getAllSecretContractAddresses\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getTaskTimeoutSize\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getWorkersParams\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple[5]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"countSecretContracts\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getSecretContract\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"name\\":\\"preCodeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"stateDeltaHashes\\",\\"type\\":\\"bytes32[]\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"register\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_start\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_stop\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getSecretContractAddresses\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bytes32[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"getTaskRecord\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"gasPx\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"proof\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getWorkerParams\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"\\",\\"type\\":\\"address[]\\"},{\\"name\\":\\"\\",\\"type\\":\\"uint256[]\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorkerFromSigningAddress\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"components\\":[{\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_codeHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"deploySecretContractFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_custodian\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getReport\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"name\\":\\"\\",\\"type\\":\\"bytes\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[],\\"name\\":\\"login\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_data\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"_signature\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"verifyReport\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_worker\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getWorker\\",\\"outputs\\":[{\\"components\\":[{\\"name\\":\\"signer\\",\\"type\\":\\"address\\"},{\\"name\\":\\"status\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"report\\",\\"type\\":\\"bytes\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"},{\\"components\\":[{\\"name\\":\\"workerEventType\\",\\"type\\":\\"uint8\\"},{\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"workerLogs\\",\\"type\\":\\"tuple[]\\"}],\\"name\\":\\"\\",\\"type\\":\\"tuple\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasLimit\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_gasPx\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"createDeploymentTaskRecord\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_scAddr\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_outputHash\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_gasUsed\\",\\"type\\":\\"uint64\\"},{\\"name\\":\\"_sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"commitTaskFailure\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"getFirstBlockNumber\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getSigningAddress\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"getEpochSize\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"returnFeesForTask\\",\\"outputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_sender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"getUserTaskDeployments\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"name\\":\\"_tokenAddress\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_principal\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_epochSize\\",\\"type\\":\\"uint256\\"},{\\"name\\":\\"_timeoutThreshold\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"custodian\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"signer\\",\\"type\\":\\"address\\"}],\\"name\\":\\"Registered\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"seed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"firstBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"inclusionBlockNumber\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"workers\\",\\"type\\":\\"address[]\\"},{\\"indexed\\":false,\\"name\\":\\"stakes\\",\\"type\\":\\"uint256[]\\"},{\\"indexed\\":false,\\"name\\":\\"nonce\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WorkersParameterized\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"inputsHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"gasLimit\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"name\\":\\"gasPx\\",\\"type\\":\\"uint64\\"},{\\"indexed\\":false,\\"name\\":\\"sender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"blockNumber\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"TaskRecordCreated\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"stateDeltaHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"outputHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"gasUsed\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"deltaHashIndex\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumData\\",\\"type\\":\\"bytes\\"},{\\"indexed\\":false,\\"name\\":\\"optionalEthereumContractAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"workerAddress\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptVerified\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailed\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"sig\\",\\"type\\":\\"bytes\\"}],\\"name\\":\\"ReceiptFailedETH\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"taskId\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"TaskFeeReturned\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"DepositSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"WithdrawSuccessful\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":false,\\"name\\":\\"scAddr\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"codeHash\\",\\"type\\":\\"bytes32\\"},{\\"indexed\\":false,\\"name\\":\\"initStateDeltaHash\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"SecretContractDeployed\\",\\"type\\":\\"event\\"}],\\"devdoc\\":{\\"methods\\":{\\"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_optionalEthereumContractAddress\\":\\"Output state hash\\",\\"_optionalEthereumData\\":\\"Output state hash\\",\\"_outputHash\\":\\"Output state hash\\",\\"_scAddr\\":\\"Secret contract address\\",\\"_sig\\":\\"Worker\'s signature\\",\\"_stateDeltaHash\\":\\"Input state delta hash\\",\\"_taskId\\":\\"Unique taskId\\"}},\\"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)\\":{\\"params\\":{\\"_gasUsed\\":\\"Gas used for task computation\\",\\"_outputHash\\":\\"Output state hash\\",\\"_scAddr\\":\\"Secret contract address\\",\\"_sig\\":\\"Worker\'s signature\\",\\"_taskId\\":\\"Unique taskId\\"}},\\"countSecretContracts()\\":{\\"return\\":\\"Number of deployed secret contracts\\"},\\"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\",\\"_nonce\\":\\"Locally-computed nonce value for this deployment\\"}},\\"createTaskRecord(bytes32,uint64,uint64,uint256)\\":{\\"params\\":{\\"_firstBlockNumber\\":\\"Locally-computed first block number of epoch\\",\\"_gasLimit\\":\\"ENG gas limit\\",\\"_gasPx\\":\\"ENG gas price in grains format (10 ** 8)\\",\\"_inputsHash\\":\\"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\"}},\\"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"params\\":{\\"_codeHash\\":\\"Deployed bytecode hash\\",\\"_gasUsed\\":\\"Gas used for task\\",\\"_initStateDeltaHash\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_optionalEthereumContractAddress\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_optionalEthereumData\\":\\"Initial state delta hash as a result of the contract\'s constructor\\",\\"_preCodeHash\\":\\"Predeployed bytecode hash\\",\\"_sig\\":\\"Worker\'s signature for deployment\\",\\"_taskId\\":\\"Task ID of corresponding deployment task (taskId == scAddr)\\"}},\\"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)\\":{\\"params\\":{\\"_codeHash\\":\\"Deployed bytecode hash\\",\\"_gasUsed\\":\\"Gas used for task\\",\\"_sig\\":\\"Worker\'s signature for deployment\\",\\"_taskId\\":\\"Task ID of corresponding deployment task (taskId == scAddr)\\"}},\\"deposit(address,uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\",\\"_custodian\\":\\"The worker\'s ETH address\\"}},\\"getActiveWorkers(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"}},\\"getAllSecretContractAddresses()\\":{\\"return\\":\\"Array of secret contract addresses\\"},\\"getEpochSize()\\":{\\"return\\":\\"Epoch size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Block number\\"},\\"getReport(address)\\":{\\"params\\":{\\"_custodian\\":\\"The worker\'s custodian address\\"}},\\"getSecretContract(bytes32)\\":{\\"params\\":{\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"SecretContract struct\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"params\\":{\\"_start\\":\\"Start of range\\",\\"_stop\\":\\"End of range\\"},\\"return\\":\\"Subset of deployed secret contract addresses\\"},\\"getSigningAddress()\\":{\\"return\\":\\"Signing address\\"},\\"getTaskRecord(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique identifier for a given task\\"},\\"return\\":\\"TaskRecord struct\\"},\\"getTaskTimeoutSize()\\":{\\"return\\":\\"task timeout\\"},\\"getUserTaskDeployments(address)\\":{\\"params\\":{\\"_sender\\":\\"Task sender\'s ethereum address\\"},\\"return\\":\\"Current number for task deployments for user\\"},\\"getWorker(address)\\":{\\"params\\":{\\"_worker\\":\\"Worker\'s ethereum address\\"},\\"return\\":\\"Worker struct\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"params\\":{\\"_signer\\":\\"Worker\'s signing address\\"},\\"return\\":\\"Ethereum addressWorker struct\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number the task record was mined\\",\\"_scAddr\\":\\"Secret contract address\\"},\\"return\\":\\"Selected workers\' addresses\\"},\\"getWorkerParams(uint256)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number\\"},\\"return\\":\\"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes\\"},\\"getWorkersParams()\\":{\\"return\\":\\"Array of WorkersParams structs\\"},\\"register(address,bytes,bytes)\\":{\\"params\\":{\\"_report\\":\\"The RLP encoded report returned by the IAS\\",\\"_signature\\":\\"Signature\\",\\"_signer\\":\\"The signer address, derived from the enclave public key\\"}},\\"returnFeesForTask(bytes32)\\":{\\"params\\":{\\"_taskId\\":\\"Unique taskId\\"}},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"params\\":{\\"_blockNumber\\":\\"Block number principal node is attempting to set worker params\\",\\"_seed\\":\\"The random integer generated by the enclave\\",\\"_sig\\":\\"Principal node\'s signature\\"}},\\"verifyReport(bytes,bytes)\\":{\\"params\\":{\\"_data\\":\\"The report itself\\",\\"_signature\\":\\"The signature of the report\\"}},\\"withdraw(uint256)\\":{\\"params\\":{\\"_amount\\":\\"The amount of ENG, in grains format (10 ** 8), to deposit\\"}}}},\\"userdoc\\":{\\"methods\\":{\\"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"notice\\":\\"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee.\\"},\\"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)\\":{\\"notice\\":\\"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure.\\"},\\"countSecretContracts()\\":{\\"notice\\":\\"Check if secret contract has been deployed\\"},\\"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)\\":{\\"notice\\":\\"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid.\\"},\\"createTaskRecord(bytes32,uint64,uint64,uint256)\\":{\\"notice\\":\\"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce.\\"},\\"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)\\":{\\"notice\\":\\"Deploy secret contract from user, called by the worker.\\"},\\"deposit(address,uint256)\\":{\\"notice\\":\\"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\"},\\"getActiveWorkers(uint256)\\":{\\"notice\\":\\"Get active workers before a certain block number\\"},\\"getAllSecretContractAddresses()\\":{\\"notice\\":\\"Get all secret contract addresses\\"},\\"getEpochSize()\\":{\\"notice\\":\\"Get the epoch block size\\"},\\"getFirstBlockNumber(uint256)\\":{\\"notice\\":\\"Get the first block number of an epoch that a given block number belongs to\\"},\\"getReport(address)\\":{\\"notice\\":\\"The RLP encoded report returned by the IAS server\\"},\\"getSecretContract(bytes32)\\":{\\"notice\\":\\"Get a SecretContract struct given a particular secret contract address\\"},\\"getSecretContractAddresses(uint256,uint256)\\":{\\"notice\\":\\"Get deployed secret contract addresses within a range\\"},\\"getSigningAddress()\\":{\\"notice\\":\\"Get signing address of calling worker\\"},\\"getTaskRecord(bytes32)\\":{\\"notice\\":\\"Get a TaskRecord struct given a particular task\'s ID\\"},\\"getTaskTimeoutSize()\\":{\\"notice\\":\\"Get the task timeout size\\"},\\"getUserTaskDeployments(address)\\":{\\"notice\\":\\"Get the current number/index (used as unique nonce value) of task deployments for a given user user\\"},\\"getWorker(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s ethereum address\\"},\\"getWorkerFromSigningAddress(address)\\":{\\"notice\\":\\"Get Worker struct from a given worker\'s signing address\\"},\\"getWorkerGroup(uint256,bytes32)\\":{\\"notice\\":\\"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address.\\"},\\"getWorkerParams(uint256)\\":{\\"notice\\":\\"Get worker params for an epoch given a particular block number\\"},\\"getWorkersParams()\\":{\\"notice\\":\\"Get epoch-based history of worker params information\\"},\\"login()\\":{\\"notice\\":\\"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process.\\"},\\"logout()\\":{\\"notice\\":\\"Logout worker. Worker must be logged in to do so.\\"},\\"register(address,bytes,bytes)\\":{\\"notice\\":\\"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks.\\"},\\"returnFeesForTask(bytes32)\\":{\\"notice\\":\\"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\"},\\"setWorkersParams(uint256,uint256,bytes)\\":{\\"notice\\":\\"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node\\"},\\"verifyReport(bytes,bytes)\\":{\\"notice\\":\\"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\"},\\"withdraw(uint256)\\":{\\"notice\\":\\"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\"}}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/Enigma.sol\\":\\"Enigma\\"},\\"evmVersion\\":\\"petersburg\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/Enigma.sol\\":{\\"keccak256\\":\\"0x4a7fddea84dccf270a96c04ecca445502ed1f703bd5570820897a6065e33575a\\",\\"urls\\":[\\"bzzr://d8867a51cd0a7d67f2983e447b0078b23e401b28776a2adcd31dbc21ad81fb8a\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaCommon.sol\\":{\\"keccak256\\":\\"0x5bd9c996532891c2234021e7a827a8b997352074a0b3dec322adc52d864f14b3\\",\\"urls\\":[\\"bzzr://0b7c3170039b962271adb4d1289e3bf2287853e48720c6dd50213ed8c4f56c96\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaEvents.sol\\":{\\"keccak256\\":\\"0x3561ef1b7d2b0d76592c63b022e6b5f6490b1898ca75e19e03bb4da04fc4e123\\",\\"urls\\":[\\"bzzr://08fe12fa6d68fa21867a417053674d8006b7d615c1af598c243b79bbbb30c42e\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaState.sol\\":{\\"keccak256\\":\\"0xa51a72e8404dbd12f291f205b02b0e9f5ecb505d78c38bc1b86bedb2257b7a28\\",\\"urls\\":[\\"bzzr://9f7f4cc58ebec18084bc7f0ce09692f6f132ab0e0c703fc09bdabec913736fda\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaStorage.sol\\":{\\"keccak256\\":\\"0xaba87ac6cd834c8a356a454c9eeca6373a159c772e70c2d444facb024907f087\\",\\"urls\\":[\\"bzzr://e8c6d14b96f76d84c547c841b61e0df7a87fdb3f099621cafbe70f45c79cbf05\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/Getters.sol\\":{\\"keccak256\\":\\"0x05847e2040df1bc5b4c22f192bd8e6a6d6f3c2dfa2a86ac73af6d89068aa641a\\",\\"urls\\":[\\"bzzr://76d5096584f8417b25d5f546e04303cea9a5b882403dbcb38a2f1a69c359f080\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/PrincipalImpl.sol\\":{\\"keccak256\\":\\"0xd2620fd3dd9691f88740477d06dd32b4ecb7f090f7c76fd1e99a3117f5072e4f\\",\\"urls\\":[\\"bzzr://1c4cc43db4ca854e6c8d25c09b139000545e942bc05722b95858d6761b425ee7\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/SecretContractImpl.sol\\":{\\"keccak256\\":\\"0x4e00d7b1cd34e5f91b51a6d6cff4af44221cda6b193ce91e76f71a838fa889f1\\",\\"urls\\":[\\"bzzr://215fe7b649e59d98e2bb8c94efe38336b3364ea428f69fb2871b5896f65432be\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/TaskImpl.sol\\":{\\"keccak256\\":\\"0x55cbea35e5d8ca0a49585021c0486f1baa77b90cff93929ce7bc826f0dfcadc6\\",\\"urls\\":[\\"bzzr://3a474e3bc0b8229dfc6cded9f5e13ad0dc925487e6650e9740df6d4c1bc296fe\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/WorkersImpl.sol\\":{\\"keccak256\\":\\"0xe918c3a32ffaa3be9a2ca32e0c156fa13f45df3a180b4afb966ed74beac68aee\\",\\"urls\\":[\\"bzzr://4cf87b0dd13996acd984d0964bef0de24f9f5b8a7f9c181ac6fcb2cdf04b2e38\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/interfaces/ERC20.sol\\":{\\"keccak256\\":\\"0xe21e3ce303a61dc1fe7e5ee8c77c94b0a96eaa9015f8abe6eb1fbce2d903b8ee\\",\\"urls\\":[\\"bzzr://ff90e3a82eb6fb10497c419d71bf240f43c544d0071b74b251204200dc08bba1\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/utils/Base64.sol\\":{\\"keccak256\\":\\"0x6b6fca483b4fd19ab6f282b45b24f02277ad2b0e2e65269c1f1f9b0672bf8ef3\\",\\"urls\\":[\\"bzzr://227cecb0afb5c808a338d0c757cedf9c085786a8f74fece5d9b14fac332f1301\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/utils/Bytes.sol\\":{\\"keccak256\\":\\"0xa9504cd72371444aaec522d40e02f930e9017fc59059c80b4d0b60afe6d3f151\\",\\"urls\\":[\\"bzzr://09e35d59d1fd6c478388e098f8f586d0eb3004af0e8402e5dc0c003b3d555e56\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/utils/Memory.sol\\":{\\"keccak256\\":\\"0xbb69933fc38ebf561a60fc4496c8d48f4aef12b5cef49bb9dd2957d8c6478ce0\\",\\"urls\\":[\\"bzzr://a4b1117bcf978aebba7df92a10df9e866cf854033bc2f4d8e426e360ba78d1fa\\"]},\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/utils/SolRsaVerify.sol\\":{\\"keccak256\\":\\"0x171f88dc2ce91d601aa659bf84a240a2e7565d26d1a3ef1a0f98ec8181573498\\",\\"urls\\":[\\"bzzr://3830487ad541d0a7df9b761dee0a835cf065e369c6f1b2ac5f8409413f1777b6\\"]},\\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\":{\\"keccak256\\":\\"0xb48974d92a87053dc1d6c5389f3d1b2ad522dec23afcb508eaa935d98dfdc0b6\\",\\"urls\\":[\\"bzzr://e665a84309432c27a26e622665dd97ff29d4d6ad7ad655d6e2c50226a5e99b56\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\\",\\"urls\\":[\\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\\"]}},\\"version\\":1}","bytecode":"0x60806040523480156200001157600080fd5b506040516080806200468e83398101806040526200003391908101906200009d565b600080546001600160a01b03199081166001600160a01b03968716179091556001838155919092026002556003805490921692909316919091179055601e819055601f5562000141565b80516200008a816200011c565b92915050565b80516200008a8162000136565b60008060008060808587031215620000b457600080fd5b6000620000c287876200007d565b9450506020620000d5878288016200007d565b9350506040620000e88782880162000090565b9250506060620000fb8782880162000090565b91505092959194509250565b60006001600160a01b0382166200008a565b90565b620001278162000107565b81146200013357600080fd5b50565b620001278162000119565b61453d80620001516000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80638ed057371161010f578063c011b1c3116100a2578063d855a57911610071578063d855a57914610449578063df4da4611461045e578063ee6dcef914610466578063f9a9b7ae14610479576101e5565b8063c011b1c3146103f0578063c652b91914610410578063ca2af5f214610423578063cbbc061d14610436576101e5565b8063a3bdae3e116100de578063a3bdae3e146103a1578063b34e97e8146103c2578063b5c14992146103ca578063ba252688146103dd576101e5565b80638ed057371461032a5780639836ca311461034a578063a0c399821461036d578063a153ec601461038e576101e5565b806350946a9f1161018757806375bbf75b1161015657806375bbf75b146102dc5780637624281e146102e4578063786cd4d7146103045780638e055b8b14610317576101e5565b806350946a9f1461028a578063550baa2f1461029d5780635f25f850146102b257806370266a47146102c7576101e5565b80632e1a7d4d116101c35780632e1a7d4d1461023e578063365a2cb31461025157806347e7ef241461026457806348cc376114610277576101e5565b806316f9a2a4146101ea5780631d40ff0b146102145780631f3c99c314610234575b600080fd5b6101fd6101f8366004613122565b61048c565b60405161020b929190613ebc565b60405180910390f35b610227610222366004613478565b610526565b60405161020b9190613eab565b61023c6105c5565b005b61023c61024c366004613122565b61081e565b61023c61025f366004613140565b610b65565b61023c61027236600461302d565b610e11565b61023c610285366004613140565b611032565b61023c61029836600461351a565b6112a0565b6102a56114fa565b60405161020b9190613ee1565b6102ba611555565b60405161020b9190614314565b6102cf61155b565b60405161020b9190613ef2565b6102ba611675565b6102f76102f2366004613122565b611707565b60405161020b9190613fd8565b61023c610312366004612fb2565b6117ce565b6102a5610325366004613478565b611892565b61033d610338366004613122565b611928565b60405161020b91906142d2565b61035d610358366004613122565b611a68565b60405161020b9493929190614322565b61038061037b366004612f3b565b611b0b565b60405161020b929190613e8b565b61023c61039c3660046132aa565b611d4e565b6103b46103af366004612f3b565b611fed565b60405161020b929190613e6b565b61023c61226f565b6102ba6103d83660046133df565b6124db565b61023c6103eb366004613322565b61256a565b6104036103fe366004612f3b565b6125ad565b60405161020b91906142e3565b61023c61041e366004613377565b61275e565b61023c61043136600461321e565b6127a3565b6102ba610444366004613122565b612a45565b610451612ad4565b60405161020b9190613e5d565b6102ba612af0565b61023c610474366004613122565b612af6565b6102ba610487366004612f3b565b612b77565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b81526004016104c992919061408c565b60006040518083038186803b1580156104e157600080fd5b505af41580156104f5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261051d9190810190613091565b91509150915091565b604051600160e11b635deadfbd02815260609073__WorkersImpl___________________________9063bbd5bf7a90610568906000908790879060040161427d565b60006040518083038186803b15801561058057600080fd5b505af4158015610594573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105bc919081019061305d565b90505b92915050565b336105ce612b92565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561061657fe5b600281111561062157fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106be5780601f10610693576101008083540402835291602001916106be565b820191906000526020600020905b8154815290600101906020018083116106a157829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561076957838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561073757fe5b600381111561074257fe5b815260200160018201548152602001600282015481525050815260200190600101906106f6565b505050915250909150600190508160200151600281111561078657fe5b146107af57604051600160e51b62461bcd0281526004016107a690613f98565b60405180910390fd5b604051600160e01b6349e44f4902815273__WorkersImpl___________________________906349e44f49906107ea90600090600401613fe9565b60006040518083038186803b15801561080257600080fd5b505af4158015610816573d6000803e3d6000fd5b505050505050565b33610827612b92565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561086f57fe5b600281111561087a57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109175780601f106108ec57610100808354040283529160200191610917565b820191906000526020600020905b8154815290600101906020018083116108fa57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156109c257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561099057fe5b600381111561099b57fe5b8152602001600182015481526020016002820154815250508152602001906001019061094f565b50505091525090915060029050816020015160028111156109df57fe5b146109ff57604051600160e51b62461bcd0281526004016107a690613fc8565b610a07612bc2565b604051600160e21b6328de336102815273__WorkersImpl___________________________9063a378cd8490610a4390859043906004016142f4565b60606040518083038186803b158015610a5b57600080fd5b505af4158015610a6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a93919081019061343c565b9050600281516003811115610aa457fe5b14610ac457604051600160e51b62461bcd0281526004016107a690613f48565b8060200151610ad243612a45565b11610af257604051600160e51b62461bcd0281526004016107a690613f88565b604051600160e21b632fdb7d1902815273__WorkersImpl___________________________9063bf6df46490610b2f90600090889060040161408c565b60006040518083038186803b158015610b4757600080fd5b505af4158015610b5b573d6000803e3d6000fd5b5050505050505050565b33610b6e612b92565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610bb657fe5b6002811115610bc157fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c5e5780601f10610c3357610100808354040283529160200191610c5e565b820191906000526020600020905b815481529060010190602001808311610c4157829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610d0957838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610cd757fe5b6003811115610ce257fe5b81526020016001820154815260200160028201548152505081526020019060010190610c96565b5050509152509091506001905081602001516002811115610d2657fe5b14610d4657604051600160e51b62461bcd0281526004016107a690613f98565b8960016000828152601c602052604090206004015460ff166001811115610d6957fe5b14610d8957604051600160e51b62461bcd0281526004016107a690613f58565b604051600160e01b632def3b6902815273__TaskImpl______________________________90632def3b6990610dd4906000908f908f908f908f908f908f908f908f906004016140a7565b60006040518083038186803b158015610dec57600080fd5b505af4158015610e00573d6000803e3d6000fd5b505050505050505050505050505050565b81610e1a612b92565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610e6257fe5b6002811115610e6d57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f0a5780601f10610edf57610100808354040283529160200191610f0a565b820191906000526020600020905b815481529060010190602001808311610eed57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610fb557838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610f8357fe5b6003811115610f8e57fe5b81526020016001820154815260200160028201548152505081526020019060010190610f42565b5050509152509091506000905081602001516002811115610fd257fe5b1415610ff357604051600160e51b62461bcd0281526004016107a690613fa8565b604051600160e21b630e80483102815273__WorkersImpl___________________________90633a0120c490610b2f9060009088908890600401614064565b3361103b612b92565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561108357fe5b600281111561108e57fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561112b5780601f106111005761010080835404028352916020019161112b565b820191906000526020600020905b81548152906001019060200180831161110e57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156111d657838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156111a457fe5b60038111156111af57fe5b81526020016001820154815260200160028201548152505081526020019060010190611163565b50505091525090915060019050816020015160028111156111f357fe5b1461121357604051600160e51b62461bcd0281526004016107a690613f98565b89600080828152601c602052604090206004015460ff16600181111561123557fe5b1461125557604051600160e51b62461bcd0281526004016107a690613fb8565b604051600160e01b63b36d042b02815273__TaskImpl______________________________9063b36d042b90610dd4906000908f908f908f908f908f908f908f908f906004016140a7565b336112a9612b92565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156112f157fe5b60028111156112fc57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113995780601f1061136e57610100808354040283529160200191611399565b820191906000526020600020905b81548152906001019060200180831161137c57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561144457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561141257fe5b600381111561141d57fe5b815260200160018201548152602001600282015481525050815260200190600101906113d1565b505050915250909150600090508160200151600281111561146157fe5b141561148257604051600160e51b62461bcd0281526004016107a690613fa8565b604051600160e31b63184e876302815273__PrincipalImpl_________________________9063c2743b18906114c390600090899089908990600401614298565b60006040518083038186803b1580156114db57600080fd5b505af41580156114ef573d6000803e3d6000fd5b505050505050505050565b6060600060190180548060200260200160405190810160405280929190818152602001828054801561154b57602002820191906000526020600020905b815481526020019060010190808311611537575b5050505050905090565b60025490565b611563612be4565b6040805160a08101909152600460056000835b8282101561166c5783826004020160405180608001604052908160008201548152602001600182018054806020026020016040519081016040528092919081815260200182805480156115f257602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116115d4575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561164a57602002820191906000526020600020905b815481526020019060010190808311611636575b5050505050815260200160038201548152505081526020019060010190611576565b50505050905090565b604051600160e11b6302b519c302815260009073__SecretContractImpl____________________9063056a3386906116b2908490600401613fe9565b60206040518083038186803b1580156116ca57600080fd5b505af41580156116de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611702919081019061345a565b905090565b61170f612c12565b6000828152601c6020908152604091829020825160a08101845281546001600160a01b03168152600182015481840152600282015481850152600382018054855181860281018601909652808652919492936060860193929083018282801561179757602002820191906000526020600020905b815481526020019060010190808311611783575b5050509183525050600482015460209091019060ff1660018111156117b857fe5b60018111156117c357fe5b90525090505b919050565b8260005b60185481101561185057816001600160a01b03166000601a0160008060180184815481106117fc57fe5b60009182526020808320909101546001600160a01b03908116845290830193909352604090910190205416141561184857604051600160e51b62461bcd0281526004016107a690613f38565b6001016117d2565b50604051600160e51b63063e88f102815273__WorkersImpl___________________________9063c7d11e2090610b2f90600090889088908890600401614019565b604051600160e01b63e5a2600902815260609073__SecretContractImpl____________________9063e5a26009906118d4906000908790879060040161427d565b60006040518083038186803b1580156118ec57600080fd5b505af4158015611900573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105bc91908101906130ee565b611930612c3d565b6000828152601b602090815260409182902082516101008101845281546001600160a01b0316815260018201549281019290925260028101549282019290925260038201546001600160401b03808216606084015268010000000000000000909104166080820152600482015460a082015260058083015491929160c084019160ff909116908111156119bf57fe5b60058111156119ca57fe5b815260068201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611a585780601f10611a2d57610100808354040283529160200191611a58565b820191906000526020600020905b815481529060010190602001808311611a3b57829003601f168201915b5050505050815250509050919050565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b8152600401611aa892919061408c565b60006040518083038186803b158015611ac057600080fd5b505af4158015611ad4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611afc9190810190613497565b93509350935093509193509193565b6000611b15612b92565b6000611b1f612b92565b60005b601854811015611d435760188054601a9160009184908110611b4057fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160a081019093528054938416835291929083019060ff600160a01b909104166002811115611b9657fe5b6002811115611ba157fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c3e5780601f10611c1357610100808354040283529160200191611c3e565b820191906000526020600020905b815481529060010190602001808311611c2157829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611ce957838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611cb757fe5b6003811115611cc257fe5b81526020016001820154815260200160028201548152505081526020019060010190611c76565b50505050815250509150856001600160a01b031682600001516001600160a01b03161415611d3b576018805482908110611d1f57fe5b6000918252602090912001546001600160a01b03169250611d43565b600101611b22565b509092509050915091565b33611d57612b92565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115611d9f57fe5b6002811115611daa57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e475780601f10611e1c57610100808354040283529160200191611e47565b820191906000526020600020905b815481529060010190602001808311611e2a57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611ef257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611ec057fe5b6003811115611ecb57fe5b81526020016001820154815260200160028201548152505081526020019060010190611e7f565b5050509152509091506001905081602001516002811115611f0f57fe5b14611f2f57604051600160e51b62461bcd0281526004016107a690613f98565b85600080828152601c602052604090206004015460ff166001811115611f5157fe5b14611f7157604051600160e51b62461bcd0281526004016107a690613fb8565b604051600160e21b6301c7aeeb02815273__TaskImpl______________________________9063071ebbac90611fb4906000908b908b908b908b9060040161419a565b60006040518083038186803b158015611fcc57600080fd5b505af4158015611fe0573d6000803e3d6000fd5b5050505050505050505050565b6000606082611ffa612b92565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561204257fe5b600281111561204d57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120ea5780601f106120bf576101008083540402835291602001916120ea565b820191906000526020600020905b8154815290600101906020018083116120cd57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561219557838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561216357fe5b600381111561216e57fe5b81526020016001820154815260200160028201548152505081526020019060010190612122565b50505091525090915060009050816020015160028111156121b257fe5b14156121d357604051600160e51b62461bcd0281526004016107a690613fa8565b604051600160e01b632f68f03102815273__WorkersImpl___________________________90632f68f03190612210906000908990600401613ff7565b60006040518083038186803b15801561222857600080fd5b505af415801561223c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526122649190810190612f61565b935093505050915091565b33612278612b92565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156122c057fe5b60028111156122cb57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123685780601f1061233d57610100808354040283529160200191612368565b820191906000526020600020905b81548152906001019060200180831161234b57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561241357838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156123e157fe5b60038111156123ec57fe5b815260200160018201548152602001600282015481525050815260200190600101906123a0565b5050505081525050905061242643612a45565b61244557604051600160e51b62461bcd0281526004016107a690613f78565b60028160200151600281111561245757fe5b1461247757604051600160e51b62461bcd0281526004016107a690613fc8565b601e54606082015110156124a057604051600160e51b62461bcd0281526004016107a690613f28565b604051600160e11b6318a8dc7102815273__WorkersImpl___________________________90633151b8e2906107ea90600090600401613fe9565b604051600160e31b6312c8c46d02815260009073__WorkersImpl___________________________9063964623689061251a9086908690600401613f03565b60206040518083038186803b15801561253257600080fd5b505af4158015612546573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105bc919081019061345a565b604051600160e01b638c91056d02815273__TaskImpl______________________________90638c91056d90610b2f9060009088908890889088906004016141ec565b6125b5612b92565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156125fd57fe5b600281111561260857fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126a55780601f1061267a576101008083540402835291602001916126a5565b820191906000526020600020905b81548152906001019060200180831161268857829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561275057838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561271e57fe5b600381111561272957fe5b815260200160018201548152602001600282015481525050815260200190600101906126dd565b505050915250909392505050565b604051600160e01b6366e13f4302815273__TaskImpl______________________________906366e13f43906114c3906000908990899089908990899060040161422e565b336127ac612b92565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156127f457fe5b60028111156127ff57fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561289c5780601f106128715761010080835404028352916020019161289c565b820191906000526020600020905b81548152906001019060200180831161287f57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561294757838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561291557fe5b600381111561292057fe5b815260200160018201548152602001600282015481525050815260200190600101906128d4565b505050915250909150600190508160200151600281111561296457fe5b1461298457604051600160e51b62461bcd0281526004016107a690613f98565b8660016000828152601c602052604090206004015460ff1660018111156129a757fe5b146129c757604051600160e51b62461bcd0281526004016107a690613f58565b604051600160e61b6289b28102815273__TaskImpl______________________________9063226ca04090612a0b906000908c908c908c908c908c9060040161413a565b60006040518083038186803b158015612a2357600080fd5b505af4158015612a37573d6000803e3d6000fd5b505050505050505050505050565b604051600160e31b6304d5c11302815260009073__WorkersImpl___________________________906326ae089890612a84908490869060040161408c565b60206040518083038186803b158015612a9c57600080fd5b505af4158015612ab0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105bf919081019061345a565b336000908152601a60205260409020546001600160a01b031690565b60015490565b8060016000828152601b6020526040902060059081015460ff1690811115612b1a57fe5b14612b3a57604051600160e51b62461bcd0281526004016107a690613f68565b604051600160e01b631c9a715b02815273__TaskImpl______________________________90631c9a715b906107ea90600090869060040161408c565b6001600160a01b03166000908152601d602052604090205490565b6040805160a081019091526000808252602082019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b6040518061028001604052806005905b612bfc612c82565b815260200190600190039081612bf45790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b80356105bf816144d0565b80516105bf816144d0565b600082601f830112612cd157600080fd5b8151612ce4612cdf82614389565b614363565b91508181835260208401935060208101905083856020840282011115612d0957600080fd5b60005b83811015612d355781612d1f8882612cb5565b8452506020928301929190910190600101612d0c565b5050505092915050565b600082601f830112612d5057600080fd5b8151612d5e612cdf82614389565b91508181835260208401935060208101905083856020840282011115612d8357600080fd5b60005b83811015612d355781612d998882612e2a565b8452506020928301929190910190600101612d86565b600082601f830112612dc057600080fd5b8151612dce612cdf82614389565b91508181835260208401935060208101905083856020840282011115612df357600080fd5b60005b83811015612d355781612e098882612e2a565b8452506020928301929190910190600101612df6565b80356105bf816144e4565b80516105bf816144e4565b600082601f830112612e4657600080fd5b8135612e54612cdf826143a9565b91508082526020830160208301858383011115612e7057600080fd5b612e7b838284614463565b50505092915050565b600082601f830112612e9557600080fd5b8151612ea3612cdf826143a9565b91508082526020830160208301858383011115612ebf57600080fd5b612e7b83828461446f565b80516105bf816144ed565b600060608284031215612ee757600080fd5b612ef16060614363565b90506000612eff8484612eca565b8252506020612f1084848301612e2a565b6020830152506040612f2484828501612e2a565b60408301525092915050565b80356105bf816144fa565b600060208284031215612f4d57600080fd5b6000612f598484612caa565b949350505050565b60008060408385031215612f7457600080fd5b6000612f808585612cb5565b92505060208301516001600160401b03811115612f9c57600080fd5b612fa885828601612e84565b9150509250929050565b600080600060608486031215612fc757600080fd5b6000612fd38686612caa565b93505060208401356001600160401b03811115612fef57600080fd5b612ffb86828701612e35565b92505060408401356001600160401b0381111561301757600080fd5b61302386828701612e35565b9150509250925092565b6000806040838503121561304057600080fd5b600061304c8585612caa565b9250506020612fa885828601612e1f565b60006020828403121561306f57600080fd5b81516001600160401b0381111561308557600080fd5b612f5984828501612cc0565b600080604083850312156130a457600080fd5b82516001600160401b038111156130ba57600080fd5b6130c685828601612cc0565b92505060208301516001600160401b038111156130e257600080fd5b612fa885828601612daf565b60006020828403121561310057600080fd5b81516001600160401b0381111561311657600080fd5b612f5984828501612d3f565b60006020828403121561313457600080fd5b6000612f598484612e1f565b600080600080600080600080610100898b03121561315d57600080fd5b60006131698b8b612e1f565b985050602061317a8b828c01612e1f565b975050604061318b8b828c01612e1f565b965050606061319c8b828c01612e1f565b95505060808901356001600160401b038111156131b857600080fd5b6131c48b828c01612e35565b94505060a06131d58b828c01612caa565b93505060c06131e68b828c01612f30565b92505060e08901356001600160401b0381111561320257600080fd5b61320e8b828c01612e35565b9150509295985092959890939650565b600080600080600060a0868803121561323657600080fd5b60006132428888612e1f565b955050602061325388828901612e1f565b945050604061326488828901612e1f565b935050606061327588828901612f30565b92505060808601356001600160401b0381111561329157600080fd5b61329d88828901612e35565b9150509295509295909350565b600080600080608085870312156132c057600080fd5b60006132cc8787612e1f565b94505060206132dd87828801612e1f565b93505060406132ee87828801612f30565b92505060608501356001600160401b0381111561330a57600080fd5b61331687828801612e35565b91505092959194509250565b6000806000806080858703121561333857600080fd5b60006133448787612e1f565b945050602061335587828801612f30565b935050604061336687828801612f30565b925050606061331687828801612e1f565b600080600080600060a0868803121561338f57600080fd5b600061339b8888612e1f565b95505060206133ac88828901612f30565b94505060406133bd88828901612f30565b93505060606133ce88828901612e1f565b925050608061329d88828901612e1f565b600080604083850312156133f257600080fd5b82356001600160401b0381111561340857600080fd5b61341485828601612e35565b92505060208301356001600160401b0381111561343057600080fd5b612fa885828601612e35565b60006060828403121561344e57600080fd5b6000612f598484612ed5565b60006020828403121561346c57600080fd5b6000612f598484612e2a565b6000806040838503121561348b57600080fd5b600061304c8585612e1f565b600080600080608085870312156134ad57600080fd5b60006134b98787612e2a565b94505060206134ca87828801612e2a565b93505060408501516001600160401b038111156134e657600080fd5b6134f287828801612cc0565b92505060608501516001600160401b0381111561350e57600080fd5b61331687828801612daf565b60008060006060848603121561352f57600080fd5b600061353b8686612e1f565b9350506020612ffb86828701612e1f565b6000613558838361358c565b505060200190565b60006135588383613884565b60006135788383613ce4565b505060600190565b60006105bc8383613df9565b613595816143ec565b82525050565b60006135a6826143d9565b6135b081856143e3565b93506135bb836143d0565b8060005b838110156135e95781516135d3888261354c565b97506135de836143d0565b9250506001016135bf565b509495945050505050565b60006135ff826143d9565b61360981856143e3565b9350613614836143d0565b8060005b838110156135e957815161362c888261354c565b9750613637836143d0565b925050600101613618565b600061364d826143d9565b61365781856143e3565b9350613662836143d0565b8060005b838110156135e957815161367a8882613560565b9750613685836143d0565b925050600101613666565b600061369b826143d9565b6136a581856143e3565b93506136b0836143d0565b8060005b838110156135e95781516136c88882613560565b97506136d3836143d0565b9250506001016136b4565b60006136e9826143d9565b6136f381856143e3565b93506136fe836143d0565b8060005b838110156135e9578151613716888261356c565b9750613721836143d0565b925050600101613702565b6000613737826143d9565b61374181856143e3565b935061374c836143d0565b8060005b838110156135e9578151613764888261356c565b975061376f836143d0565b925050600101613750565b6000613785826143dd565b61378f81856117c9565b9350836020820285016137a1856143d6565b8060005b858110156137db57848403895281516137be8582613580565b94506137c9836143d0565b60209a909a01999250506001016137a5565b5091979650505050505050565b60006137f3826143d9565b6137fd81856143e3565b9350613808836143d0565b8060005b838110156135e95781516138208882613560565b975061382b836143d0565b92505060010161380c565b6000613841826143d9565b61384b81856143e3565b9350613856836143d0565b8060005b838110156135e957815161386e8882613560565b9750613879836143d0565b92505060010161385a565b613595816143d6565b6000613898826143d9565b6138a281856143e3565b93506138b281856020860161446f565b6138bb8161449b565b9093019392505050565b61359581614437565b61359581614442565b6135958161444d565b61359581614458565b60006138f66022836143e3565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152600160f21b611b9d02602082015260400192915050565b600061393d6018836143e3565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b60006139766027836143e3565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152600160c81b667574207479706502602082015260400192915050565b60006139c2601c836143e3565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b60006139fb6013836143e3565b7f5461736b206973206e6f742077616974696e6700000000000000000000000000815260200192915050565b6000613a346027836143e3565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152600160ca1b661a585b1a5e995902602082015260400192915050565b6000613a80602e836143e3565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381527f206c6f67206f7574206576656e74000000000000000000000000000000000000602082015260400192915050565b6000613adf6014836143e3565b7f576f726b6572206e6f74206c6f6767656420696e000000000000000000000000815260200192915050565b6000613b186013836143e3565b7f556e7265676973746572656420776f726b657200000000000000000000000000815260200192915050565b6000613b516020836143e3565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b6000613b8a6027836143e3565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f678152600160ca1b6619d959081bdd5d02602082015260400192915050565b805160009060a0840190613bdd858261358c565b506020830151613bf06020860182613884565b506040830151613c036040860182613884565b5060608301518482036060860152613c1b8282613690565b9150506080830151613c3060808601826138c5565b509392505050565b9052565b8051600090610100840190613c51858261358c565b506020830151613c646020860182613884565b506040830151613c776040860182613884565b506060830151613c8a6060860182613e54565b506080830151613c9d6080860182613e54565b5060a0830151613cb060a0860182613884565b5060c0830151613cc360c08601826138ce565b5060e083015184820360e0860152613cdb828261388d565b95945050505050565b80516060830190613cf584826138d7565b506020820151613d086020850182613884565b506040820151613d1b6040850182613884565b50505050565b805160009060a0840190613d35858261358c565b506020830151613d4860208601826138e0565b5060408301518482036040860152613d60828261388d565b9150506060830151613d756060860182613884565b5060808301518482036080860152613cdb82826136de565b805160009060a0840190613da1858261358c565b506020830151613db460208601826138e0565b5060408301518482036040860152613dcc828261388d565b9150506060830151613de16060860182613884565b5060808301518482036080860152613cdb828261372c565b80516000906080840190613e0d8582613884565b5060208301518482036020860152613e2582826135f4565b91505060408301518482036040860152613e3f8282613836565b9150506060830151613c306060860182613884565b6135958161442b565b602081016105bf828461358c565b60408101613e79828561358c565b8181036020830152612f59818461388d565b60408101613e99828561358c565b8181036020830152612f598184613d21565b602080825281016105bc818461359b565b60408082528101613ecd818561359b565b90508181036020830152612f5981846137e8565b602080825281016105bc8184613642565b602080825281016105bc818461377a565b60408082528101613f14818561388d565b90508181036020830152612f59818461388d565b602080825281016105bf816138e9565b602080825281016105bf81613930565b602080825281016105bf81613969565b602080825281016105bf816139b5565b602080825281016105bf816139ee565b602080825281016105bf81613a27565b602080825281016105bf81613a73565b602080825281016105bf81613ad2565b602080825281016105bf81613b0b565b602080825281016105bf81613b44565b602080825281016105bf81613b7d565b602080825281016105bc8184613bc9565b602081016105bf8284613c38565b604081016140058285613c38565b614012602083018461358c565b9392505050565b608081016140278287613c38565b614034602083018661358c565b8181036040830152614046818561388d565b9050818103606083015261405a818461388d565b9695505050505050565b606081016140728286613c38565b61407f602083018561358c565b612f596040830184613884565b6040810161409a8285613c38565b6140126020830184613884565b61012081016140b6828c613c38565b6140c3602083018b613884565b6140d0604083018a613884565b6140dd6060830189613884565b6140ea6080830188613884565b81810360a08301526140fc818761388d565b905061410b60c083018661358c565b61411860e0830185613e54565b81810361010083015261412b818461388d565b9b9a5050505050505050505050565b60c081016141488289613c38565b6141556020830188613884565b6141626040830187613884565b61416f6060830186613884565b61417c6080830185613e54565b81810360a083015261418e818461388d565b98975050505050505050565b60a081016141a88288613c38565b6141b56020830187613884565b6141c26040830186613884565b6141cf6060830185613e54565b81810360808301526141e1818461388d565b979650505050505050565b60a081016141fa8288613c38565b6142076020830187613884565b6142146040830186613e54565b6142216060830185613e54565b61405a6080830184613884565b60c0810161423c8289613c38565b6142496020830188613884565b6142566040830187613e54565b6142636060830186613e54565b6142706080830185613884565b6141e160a0830184613884565b6060810161428b8286613c38565b61407f6020830185613884565b608081016142a68287613c38565b6142b36020830186613884565b6142c06040830185613884565b818103606083015261405a818461388d565b602080825281016105bc8184613c3c565b602080825281016105bc8184613d21565b604080825281016143058185613d8d565b90506140126020830184613884565b602081016105bf8284613884565b608081016143308287613884565b61433d6020830186613884565b818103604083015261434f818561359b565b9050818103606083015261405a81846137e8565b6040518181016001600160401b038111828210171561438157600080fd5b604052919050565b60006001600160401b0382111561439f57600080fd5b5060209081020190565b60006001600160401b038211156143bf57600080fd5b506020601f91909101601f19160190565b60200190565b90565b5190565b50600590565b90815260200190565b60006105bf8261441f565b806117c9816144a5565b806117c9816144b2565b806117c9816144bc565b806117c9816144c6565b6001600160a01b031690565b6001600160401b031690565b60006105bf826143f7565b60006105bf82614401565b60006105bf8261440b565b60006105bf82614415565b82818337506000910152565b60005b8381101561448a578181015183820152602001614472565b83811115613d1b5750506000910152565b601f01601f191690565b600281106144af57fe5b50565b600681106144af57fe5b600481106144af57fe5b600381106144af57fe5b6144d9816143ec565b81146144af57600080fd5b6144d9816143d6565b600481106144af57600080fd5b6144d98161442b56fea265627a7a72305820bdaec46644da1c57df25ca12e5ae453487a80d9ea4c06ef233431c2c85bb0beb6c6578706572696d656e74616cf50037","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106101e55760003560e01c80638ed057371161010f578063c011b1c3116100a2578063d855a57911610071578063d855a57914610449578063df4da4611461045e578063ee6dcef914610466578063f9a9b7ae14610479576101e5565b8063c011b1c3146103f0578063c652b91914610410578063ca2af5f214610423578063cbbc061d14610436576101e5565b8063a3bdae3e116100de578063a3bdae3e146103a1578063b34e97e8146103c2578063b5c14992146103ca578063ba252688146103dd576101e5565b80638ed057371461032a5780639836ca311461034a578063a0c399821461036d578063a153ec601461038e576101e5565b806350946a9f1161018757806375bbf75b1161015657806375bbf75b146102dc5780637624281e146102e4578063786cd4d7146103045780638e055b8b14610317576101e5565b806350946a9f1461028a578063550baa2f1461029d5780635f25f850146102b257806370266a47146102c7576101e5565b80632e1a7d4d116101c35780632e1a7d4d1461023e578063365a2cb31461025157806347e7ef241461026457806348cc376114610277576101e5565b806316f9a2a4146101ea5780631d40ff0b146102145780631f3c99c314610234575b600080fd5b6101fd6101f8366004613122565b61048c565b60405161020b929190613ebc565b60405180910390f35b610227610222366004613478565b610526565b60405161020b9190613eab565b61023c6105c5565b005b61023c61024c366004613122565b61081e565b61023c61025f366004613140565b610b65565b61023c61027236600461302d565b610e11565b61023c610285366004613140565b611032565b61023c61029836600461351a565b6112a0565b6102a56114fa565b60405161020b9190613ee1565b6102ba611555565b60405161020b9190614314565b6102cf61155b565b60405161020b9190613ef2565b6102ba611675565b6102f76102f2366004613122565b611707565b60405161020b9190613fd8565b61023c610312366004612fb2565b6117ce565b6102a5610325366004613478565b611892565b61033d610338366004613122565b611928565b60405161020b91906142d2565b61035d610358366004613122565b611a68565b60405161020b9493929190614322565b61038061037b366004612f3b565b611b0b565b60405161020b929190613e8b565b61023c61039c3660046132aa565b611d4e565b6103b46103af366004612f3b565b611fed565b60405161020b929190613e6b565b61023c61226f565b6102ba6103d83660046133df565b6124db565b61023c6103eb366004613322565b61256a565b6104036103fe366004612f3b565b6125ad565b60405161020b91906142e3565b61023c61041e366004613377565b61275e565b61023c61043136600461321e565b6127a3565b6102ba610444366004613122565b612a45565b610451612ad4565b60405161020b9190613e5d565b6102ba612af0565b61023c610474366004613122565b612af6565b6102ba610487366004612f3b565b612b77565b60608073__PrincipalImpl_________________________63eacba6536000856040518363ffffffff1660e01b81526004016104c992919061408c565b60006040518083038186803b1580156104e157600080fd5b505af41580156104f5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261051d9190810190613091565b91509150915091565b604051600160e11b635deadfbd02815260609073__WorkersImpl___________________________9063bbd5bf7a90610568906000908790879060040161427d565b60006040518083038186803b15801561058057600080fd5b505af4158015610594573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105bc919081019061305d565b90505b92915050565b336105ce612b92565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561061657fe5b600281111561062157fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106be5780601f10610693576101008083540402835291602001916106be565b820191906000526020600020905b8154815290600101906020018083116106a157829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561076957838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561073757fe5b600381111561074257fe5b815260200160018201548152602001600282015481525050815260200190600101906106f6565b505050915250909150600190508160200151600281111561078657fe5b146107af57604051600160e51b62461bcd0281526004016107a690613f98565b60405180910390fd5b604051600160e01b6349e44f4902815273__WorkersImpl___________________________906349e44f49906107ea90600090600401613fe9565b60006040518083038186803b15801561080257600080fd5b505af4158015610816573d6000803e3d6000fd5b505050505050565b33610827612b92565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561086f57fe5b600281111561087a57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109175780601f106108ec57610100808354040283529160200191610917565b820191906000526020600020905b8154815290600101906020018083116108fa57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156109c257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561099057fe5b600381111561099b57fe5b8152602001600182015481526020016002820154815250508152602001906001019061094f565b50505091525090915060029050816020015160028111156109df57fe5b146109ff57604051600160e51b62461bcd0281526004016107a690613fc8565b610a07612bc2565b604051600160e21b6328de336102815273__WorkersImpl___________________________9063a378cd8490610a4390859043906004016142f4565b60606040518083038186803b158015610a5b57600080fd5b505af4158015610a6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a93919081019061343c565b9050600281516003811115610aa457fe5b14610ac457604051600160e51b62461bcd0281526004016107a690613f48565b8060200151610ad243612a45565b11610af257604051600160e51b62461bcd0281526004016107a690613f88565b604051600160e21b632fdb7d1902815273__WorkersImpl___________________________9063bf6df46490610b2f90600090889060040161408c565b60006040518083038186803b158015610b4757600080fd5b505af4158015610b5b573d6000803e3d6000fd5b5050505050505050565b33610b6e612b92565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610bb657fe5b6002811115610bc157fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c5e5780601f10610c3357610100808354040283529160200191610c5e565b820191906000526020600020905b815481529060010190602001808311610c4157829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610d0957838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610cd757fe5b6003811115610ce257fe5b81526020016001820154815260200160028201548152505081526020019060010190610c96565b5050509152509091506001905081602001516002811115610d2657fe5b14610d4657604051600160e51b62461bcd0281526004016107a690613f98565b8960016000828152601c602052604090206004015460ff166001811115610d6957fe5b14610d8957604051600160e51b62461bcd0281526004016107a690613f58565b604051600160e01b632def3b6902815273__TaskImpl______________________________90632def3b6990610dd4906000908f908f908f908f908f908f908f908f906004016140a7565b60006040518083038186803b158015610dec57600080fd5b505af4158015610e00573d6000803e3d6000fd5b505050505050505050505050505050565b81610e1a612b92565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115610e6257fe5b6002811115610e6d57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f0a5780601f10610edf57610100808354040283529160200191610f0a565b820191906000526020600020905b815481529060010190602001808311610eed57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610fb557838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115610f8357fe5b6003811115610f8e57fe5b81526020016001820154815260200160028201548152505081526020019060010190610f42565b5050509152509091506000905081602001516002811115610fd257fe5b1415610ff357604051600160e51b62461bcd0281526004016107a690613fa8565b604051600160e21b630e80483102815273__WorkersImpl___________________________90633a0120c490610b2f9060009088908890600401614064565b3361103b612b92565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561108357fe5b600281111561108e57fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561112b5780601f106111005761010080835404028352916020019161112b565b820191906000526020600020905b81548152906001019060200180831161110e57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156111d657838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156111a457fe5b60038111156111af57fe5b81526020016001820154815260200160028201548152505081526020019060010190611163565b50505091525090915060019050816020015160028111156111f357fe5b1461121357604051600160e51b62461bcd0281526004016107a690613f98565b89600080828152601c602052604090206004015460ff16600181111561123557fe5b1461125557604051600160e51b62461bcd0281526004016107a690613fb8565b604051600160e01b63b36d042b02815273__TaskImpl______________________________9063b36d042b90610dd4906000908f908f908f908f908f908f908f908f906004016140a7565b336112a9612b92565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156112f157fe5b60028111156112fc57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113995780601f1061136e57610100808354040283529160200191611399565b820191906000526020600020905b81548152906001019060200180831161137c57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561144457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561141257fe5b600381111561141d57fe5b815260200160018201548152602001600282015481525050815260200190600101906113d1565b505050915250909150600090508160200151600281111561146157fe5b141561148257604051600160e51b62461bcd0281526004016107a690613fa8565b604051600160e31b63184e876302815273__PrincipalImpl_________________________9063c2743b18906114c390600090899089908990600401614298565b60006040518083038186803b1580156114db57600080fd5b505af41580156114ef573d6000803e3d6000fd5b505050505050505050565b6060600060190180548060200260200160405190810160405280929190818152602001828054801561154b57602002820191906000526020600020905b815481526020019060010190808311611537575b5050505050905090565b60025490565b611563612be4565b6040805160a08101909152600460056000835b8282101561166c5783826004020160405180608001604052908160008201548152602001600182018054806020026020016040519081016040528092919081815260200182805480156115f257602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116115d4575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561164a57602002820191906000526020600020905b815481526020019060010190808311611636575b5050505050815260200160038201548152505081526020019060010190611576565b50505050905090565b604051600160e11b6302b519c302815260009073__SecretContractImpl____________________9063056a3386906116b2908490600401613fe9565b60206040518083038186803b1580156116ca57600080fd5b505af41580156116de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611702919081019061345a565b905090565b61170f612c12565b6000828152601c6020908152604091829020825160a08101845281546001600160a01b03168152600182015481840152600282015481850152600382018054855181860281018601909652808652919492936060860193929083018282801561179757602002820191906000526020600020905b815481526020019060010190808311611783575b5050509183525050600482015460209091019060ff1660018111156117b857fe5b60018111156117c357fe5b90525090505b919050565b8260005b60185481101561185057816001600160a01b03166000601a0160008060180184815481106117fc57fe5b60009182526020808320909101546001600160a01b03908116845290830193909352604090910190205416141561184857604051600160e51b62461bcd0281526004016107a690613f38565b6001016117d2565b50604051600160e51b63063e88f102815273__WorkersImpl___________________________9063c7d11e2090610b2f90600090889088908890600401614019565b604051600160e01b63e5a2600902815260609073__SecretContractImpl____________________9063e5a26009906118d4906000908790879060040161427d565b60006040518083038186803b1580156118ec57600080fd5b505af4158015611900573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105bc91908101906130ee565b611930612c3d565b6000828152601b602090815260409182902082516101008101845281546001600160a01b0316815260018201549281019290925260028101549282019290925260038201546001600160401b03808216606084015268010000000000000000909104166080820152600482015460a082015260058083015491929160c084019160ff909116908111156119bf57fe5b60058111156119ca57fe5b815260068201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611a585780601f10611a2d57610100808354040283529160200191611a58565b820191906000526020600020905b815481529060010190602001808311611a3b57829003601f168201915b5050505050815250509050919050565b60008060608073__WorkersImpl___________________________63198cc4cb6000876040518363ffffffff1660e01b8152600401611aa892919061408c565b60006040518083038186803b158015611ac057600080fd5b505af4158015611ad4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611afc9190810190613497565b93509350935093509193509193565b6000611b15612b92565b6000611b1f612b92565b60005b601854811015611d435760188054601a9160009184908110611b4057fe5b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825160a081019093528054938416835291929083019060ff600160a01b909104166002811115611b9657fe5b6002811115611ba157fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c3e5780601f10611c1357610100808354040283529160200191611c3e565b820191906000526020600020905b815481529060010190602001808311611c2157829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611ce957838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611cb757fe5b6003811115611cc257fe5b81526020016001820154815260200160028201548152505081526020019060010190611c76565b50505050815250509150856001600160a01b031682600001516001600160a01b03161415611d3b576018805482908110611d1f57fe5b6000918252602090912001546001600160a01b03169250611d43565b600101611b22565b509092509050915091565b33611d57612b92565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff166002811115611d9f57fe5b6002811115611daa57fe5b8152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e475780601f10611e1c57610100808354040283529160200191611e47565b820191906000526020600020905b815481529060010190602001808311611e2a57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611ef257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff166003811115611ec057fe5b6003811115611ecb57fe5b81526020016001820154815260200160028201548152505081526020019060010190611e7f565b5050509152509091506001905081602001516002811115611f0f57fe5b14611f2f57604051600160e51b62461bcd0281526004016107a690613f98565b85600080828152601c602052604090206004015460ff166001811115611f5157fe5b14611f7157604051600160e51b62461bcd0281526004016107a690613fb8565b604051600160e21b6301c7aeeb02815273__TaskImpl______________________________9063071ebbac90611fb4906000908b908b908b908b9060040161419a565b60006040518083038186803b158015611fcc57600080fd5b505af4158015611fe0573d6000803e3d6000fd5b5050505050505050505050565b6000606082611ffa612b92565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff16600281111561204257fe5b600281111561204d57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120ea5780601f106120bf576101008083540402835291602001916120ea565b820191906000526020600020905b8154815290600101906020018083116120cd57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561219557838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561216357fe5b600381111561216e57fe5b81526020016001820154815260200160028201548152505081526020019060010190612122565b50505091525090915060009050816020015160028111156121b257fe5b14156121d357604051600160e51b62461bcd0281526004016107a690613fa8565b604051600160e01b632f68f03102815273__WorkersImpl___________________________90632f68f03190612210906000908990600401613ff7565b60006040518083038186803b15801561222857600080fd5b505af415801561223c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526122649190810190612f61565b935093505050915091565b33612278612b92565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156122c057fe5b60028111156122cb57fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123685780601f1061233d57610100808354040283529160200191612368565b820191906000526020600020905b81548152906001019060200180831161234b57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561241357838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff1660038111156123e157fe5b60038111156123ec57fe5b815260200160018201548152602001600282015481525050815260200190600101906123a0565b5050505081525050905061242643612a45565b61244557604051600160e51b62461bcd0281526004016107a690613f78565b60028160200151600281111561245757fe5b1461247757604051600160e51b62461bcd0281526004016107a690613fc8565b601e54606082015110156124a057604051600160e51b62461bcd0281526004016107a690613f28565b604051600160e11b6318a8dc7102815273__WorkersImpl___________________________90633151b8e2906107ea90600090600401613fe9565b604051600160e31b6312c8c46d02815260009073__WorkersImpl___________________________9063964623689061251a9086908690600401613f03565b60206040518083038186803b15801561253257600080fd5b505af4158015612546573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105bc919081019061345a565b604051600160e01b638c91056d02815273__TaskImpl______________________________90638c91056d90610b2f9060009088908890889088906004016141ec565b6125b5612b92565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156125fd57fe5b600281111561260857fe5b8152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126a55780601f1061267a576101008083540402835291602001916126a5565b820191906000526020600020905b81548152906001019060200180831161268857829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561275057838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561271e57fe5b600381111561272957fe5b815260200160018201548152602001600282015481525050815260200190600101906126dd565b505050915250909392505050565b604051600160e01b6366e13f4302815273__TaskImpl______________________________906366e13f43906114c3906000908990899089908990899060040161422e565b336127ac612b92565b6001600160a01b038281166000908152601a6020908152604091829020825160a0810190935280549384168352919290830190600160a01b900460ff1660028111156127f457fe5b60028111156127ff57fe5b8152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561289c5780601f106128715761010080835404028352916020019161289c565b820191906000526020600020905b81548152906001019060200180831161287f57829003601f168201915b505050505081526020016002820154815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561294757838290600052602060002090600302016040518060600160405290816000820160009054906101000a900460ff16600381111561291557fe5b600381111561292057fe5b815260200160018201548152602001600282015481525050815260200190600101906128d4565b505050915250909150600190508160200151600281111561296457fe5b1461298457604051600160e51b62461bcd0281526004016107a690613f98565b8660016000828152601c602052604090206004015460ff1660018111156129a757fe5b146129c757604051600160e51b62461bcd0281526004016107a690613f58565b604051600160e61b6289b28102815273__TaskImpl______________________________9063226ca04090612a0b906000908c908c908c908c908c9060040161413a565b60006040518083038186803b158015612a2357600080fd5b505af4158015612a37573d6000803e3d6000fd5b505050505050505050505050565b604051600160e31b6304d5c11302815260009073__WorkersImpl___________________________906326ae089890612a84908490869060040161408c565b60206040518083038186803b158015612a9c57600080fd5b505af4158015612ab0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105bf919081019061345a565b336000908152601a60205260409020546001600160a01b031690565b60015490565b8060016000828152601b6020526040902060059081015460ff1690811115612b1a57fe5b14612b3a57604051600160e51b62461bcd0281526004016107a690613f68565b604051600160e01b631c9a715b02815273__TaskImpl______________________________90631c9a715b906107ea90600090869060040161408c565b6001600160a01b03166000908152601d602052604090205490565b6040805160a081019091526000808252602082019081526020016060815260200160008152602001606081525090565b6040805160608101909152806000815260200160008152602001600081525090565b6040518061028001604052806005905b612bfc612c82565b815260200190600190039081612bf45790505090565b6040805160a08101825260008082526020820181905291810182905260608082015290608082015290565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c08201908152602001606081525090565b6040518060800160405280600081526020016060815260200160608152602001600081525090565b80356105bf816144d0565b80516105bf816144d0565b600082601f830112612cd157600080fd5b8151612ce4612cdf82614389565b614363565b91508181835260208401935060208101905083856020840282011115612d0957600080fd5b60005b83811015612d355781612d1f8882612cb5565b8452506020928301929190910190600101612d0c565b5050505092915050565b600082601f830112612d5057600080fd5b8151612d5e612cdf82614389565b91508181835260208401935060208101905083856020840282011115612d8357600080fd5b60005b83811015612d355781612d998882612e2a565b8452506020928301929190910190600101612d86565b600082601f830112612dc057600080fd5b8151612dce612cdf82614389565b91508181835260208401935060208101905083856020840282011115612df357600080fd5b60005b83811015612d355781612e098882612e2a565b8452506020928301929190910190600101612df6565b80356105bf816144e4565b80516105bf816144e4565b600082601f830112612e4657600080fd5b8135612e54612cdf826143a9565b91508082526020830160208301858383011115612e7057600080fd5b612e7b838284614463565b50505092915050565b600082601f830112612e9557600080fd5b8151612ea3612cdf826143a9565b91508082526020830160208301858383011115612ebf57600080fd5b612e7b83828461446f565b80516105bf816144ed565b600060608284031215612ee757600080fd5b612ef16060614363565b90506000612eff8484612eca565b8252506020612f1084848301612e2a565b6020830152506040612f2484828501612e2a565b60408301525092915050565b80356105bf816144fa565b600060208284031215612f4d57600080fd5b6000612f598484612caa565b949350505050565b60008060408385031215612f7457600080fd5b6000612f808585612cb5565b92505060208301516001600160401b03811115612f9c57600080fd5b612fa885828601612e84565b9150509250929050565b600080600060608486031215612fc757600080fd5b6000612fd38686612caa565b93505060208401356001600160401b03811115612fef57600080fd5b612ffb86828701612e35565b92505060408401356001600160401b0381111561301757600080fd5b61302386828701612e35565b9150509250925092565b6000806040838503121561304057600080fd5b600061304c8585612caa565b9250506020612fa885828601612e1f565b60006020828403121561306f57600080fd5b81516001600160401b0381111561308557600080fd5b612f5984828501612cc0565b600080604083850312156130a457600080fd5b82516001600160401b038111156130ba57600080fd5b6130c685828601612cc0565b92505060208301516001600160401b038111156130e257600080fd5b612fa885828601612daf565b60006020828403121561310057600080fd5b81516001600160401b0381111561311657600080fd5b612f5984828501612d3f565b60006020828403121561313457600080fd5b6000612f598484612e1f565b600080600080600080600080610100898b03121561315d57600080fd5b60006131698b8b612e1f565b985050602061317a8b828c01612e1f565b975050604061318b8b828c01612e1f565b965050606061319c8b828c01612e1f565b95505060808901356001600160401b038111156131b857600080fd5b6131c48b828c01612e35565b94505060a06131d58b828c01612caa565b93505060c06131e68b828c01612f30565b92505060e08901356001600160401b0381111561320257600080fd5b61320e8b828c01612e35565b9150509295985092959890939650565b600080600080600060a0868803121561323657600080fd5b60006132428888612e1f565b955050602061325388828901612e1f565b945050604061326488828901612e1f565b935050606061327588828901612f30565b92505060808601356001600160401b0381111561329157600080fd5b61329d88828901612e35565b9150509295509295909350565b600080600080608085870312156132c057600080fd5b60006132cc8787612e1f565b94505060206132dd87828801612e1f565b93505060406132ee87828801612f30565b92505060608501356001600160401b0381111561330a57600080fd5b61331687828801612e35565b91505092959194509250565b6000806000806080858703121561333857600080fd5b60006133448787612e1f565b945050602061335587828801612f30565b935050604061336687828801612f30565b925050606061331687828801612e1f565b600080600080600060a0868803121561338f57600080fd5b600061339b8888612e1f565b95505060206133ac88828901612f30565b94505060406133bd88828901612f30565b93505060606133ce88828901612e1f565b925050608061329d88828901612e1f565b600080604083850312156133f257600080fd5b82356001600160401b0381111561340857600080fd5b61341485828601612e35565b92505060208301356001600160401b0381111561343057600080fd5b612fa885828601612e35565b60006060828403121561344e57600080fd5b6000612f598484612ed5565b60006020828403121561346c57600080fd5b6000612f598484612e2a565b6000806040838503121561348b57600080fd5b600061304c8585612e1f565b600080600080608085870312156134ad57600080fd5b60006134b98787612e2a565b94505060206134ca87828801612e2a565b93505060408501516001600160401b038111156134e657600080fd5b6134f287828801612cc0565b92505060608501516001600160401b0381111561350e57600080fd5b61331687828801612daf565b60008060006060848603121561352f57600080fd5b600061353b8686612e1f565b9350506020612ffb86828701612e1f565b6000613558838361358c565b505060200190565b60006135588383613884565b60006135788383613ce4565b505060600190565b60006105bc8383613df9565b613595816143ec565b82525050565b60006135a6826143d9565b6135b081856143e3565b93506135bb836143d0565b8060005b838110156135e95781516135d3888261354c565b97506135de836143d0565b9250506001016135bf565b509495945050505050565b60006135ff826143d9565b61360981856143e3565b9350613614836143d0565b8060005b838110156135e957815161362c888261354c565b9750613637836143d0565b925050600101613618565b600061364d826143d9565b61365781856143e3565b9350613662836143d0565b8060005b838110156135e957815161367a8882613560565b9750613685836143d0565b925050600101613666565b600061369b826143d9565b6136a581856143e3565b93506136b0836143d0565b8060005b838110156135e95781516136c88882613560565b97506136d3836143d0565b9250506001016136b4565b60006136e9826143d9565b6136f381856143e3565b93506136fe836143d0565b8060005b838110156135e9578151613716888261356c565b9750613721836143d0565b925050600101613702565b6000613737826143d9565b61374181856143e3565b935061374c836143d0565b8060005b838110156135e9578151613764888261356c565b975061376f836143d0565b925050600101613750565b6000613785826143dd565b61378f81856117c9565b9350836020820285016137a1856143d6565b8060005b858110156137db57848403895281516137be8582613580565b94506137c9836143d0565b60209a909a01999250506001016137a5565b5091979650505050505050565b60006137f3826143d9565b6137fd81856143e3565b9350613808836143d0565b8060005b838110156135e95781516138208882613560565b975061382b836143d0565b92505060010161380c565b6000613841826143d9565b61384b81856143e3565b9350613856836143d0565b8060005b838110156135e957815161386e8882613560565b9750613879836143d0565b92505060010161385a565b613595816143d6565b6000613898826143d9565b6138a281856143e3565b93506138b281856020860161446f565b6138bb8161449b565b9093019392505050565b61359581614437565b61359581614442565b6135958161444d565b61359581614458565b60006138f66022836143e3565b7f576f726b657227732062616c616e6365206973206e6f742073756666696369658152600160f21b611b9d02602082015260400192915050565b600061393d6018836143e3565b7f4e6f74206120756e69717565207369676e696e67206b65790000000000000000815260200192915050565b60006139766027836143e3565b7f576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f8152600160c81b667574207479706502602082015260400192915050565b60006139c2601c836143e3565b7f53656372657420636f6e7472616374206e6f74206465706c6f79656400000000815260200192915050565b60006139fb6013836143e3565b7f5461736b206973206e6f742077616974696e6700000000000000000000000000815260200192915050565b6000613a346027836143e3565b7f5072696e636970616c206e6f646520686173206e6f74206265656e20696e69748152600160ca1b661a585b1a5e995902602082015260400192915050565b6000613a80602e836143e3565b7f43616e6e6f7420776974686472617720696e2073616d652065706f636820617381527f206c6f67206f7574206576656e74000000000000000000000000000000000000602082015260400192915050565b6000613adf6014836143e3565b7f576f726b6572206e6f74206c6f6767656420696e000000000000000000000000815260200192915050565b6000613b186013836143e3565b7f556e7265676973746572656420776f726b657200000000000000000000000000815260200192915050565b6000613b516020836143e3565b7f53656372657420636f6e747261637420616c7265616479206465706c6f796564815260200192915050565b6000613b8a6027836143e3565b7f576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f678152600160ca1b6619d959081bdd5d02602082015260400192915050565b805160009060a0840190613bdd858261358c565b506020830151613bf06020860182613884565b506040830151613c036040860182613884565b5060608301518482036060860152613c1b8282613690565b9150506080830151613c3060808601826138c5565b509392505050565b9052565b8051600090610100840190613c51858261358c565b506020830151613c646020860182613884565b506040830151613c776040860182613884565b506060830151613c8a6060860182613e54565b506080830151613c9d6080860182613e54565b5060a0830151613cb060a0860182613884565b5060c0830151613cc360c08601826138ce565b5060e083015184820360e0860152613cdb828261388d565b95945050505050565b80516060830190613cf584826138d7565b506020820151613d086020850182613884565b506040820151613d1b6040850182613884565b50505050565b805160009060a0840190613d35858261358c565b506020830151613d4860208601826138e0565b5060408301518482036040860152613d60828261388d565b9150506060830151613d756060860182613884565b5060808301518482036080860152613cdb82826136de565b805160009060a0840190613da1858261358c565b506020830151613db460208601826138e0565b5060408301518482036040860152613dcc828261388d565b9150506060830151613de16060860182613884565b5060808301518482036080860152613cdb828261372c565b80516000906080840190613e0d8582613884565b5060208301518482036020860152613e2582826135f4565b91505060408301518482036040860152613e3f8282613836565b9150506060830151613c306060860182613884565b6135958161442b565b602081016105bf828461358c565b60408101613e79828561358c565b8181036020830152612f59818461388d565b60408101613e99828561358c565b8181036020830152612f598184613d21565b602080825281016105bc818461359b565b60408082528101613ecd818561359b565b90508181036020830152612f5981846137e8565b602080825281016105bc8184613642565b602080825281016105bc818461377a565b60408082528101613f14818561388d565b90508181036020830152612f59818461388d565b602080825281016105bf816138e9565b602080825281016105bf81613930565b602080825281016105bf81613969565b602080825281016105bf816139b5565b602080825281016105bf816139ee565b602080825281016105bf81613a27565b602080825281016105bf81613a73565b602080825281016105bf81613ad2565b602080825281016105bf81613b0b565b602080825281016105bf81613b44565b602080825281016105bf81613b7d565b602080825281016105bc8184613bc9565b602081016105bf8284613c38565b604081016140058285613c38565b614012602083018461358c565b9392505050565b608081016140278287613c38565b614034602083018661358c565b8181036040830152614046818561388d565b9050818103606083015261405a818461388d565b9695505050505050565b606081016140728286613c38565b61407f602083018561358c565b612f596040830184613884565b6040810161409a8285613c38565b6140126020830184613884565b61012081016140b6828c613c38565b6140c3602083018b613884565b6140d0604083018a613884565b6140dd6060830189613884565b6140ea6080830188613884565b81810360a08301526140fc818761388d565b905061410b60c083018661358c565b61411860e0830185613e54565b81810361010083015261412b818461388d565b9b9a5050505050505050505050565b60c081016141488289613c38565b6141556020830188613884565b6141626040830187613884565b61416f6060830186613884565b61417c6080830185613e54565b81810360a083015261418e818461388d565b98975050505050505050565b60a081016141a88288613c38565b6141b56020830187613884565b6141c26040830186613884565b6141cf6060830185613e54565b81810360808301526141e1818461388d565b979650505050505050565b60a081016141fa8288613c38565b6142076020830187613884565b6142146040830186613e54565b6142216060830185613e54565b61405a6080830184613884565b60c0810161423c8289613c38565b6142496020830188613884565b6142566040830187613e54565b6142636060830186613e54565b6142706080830185613884565b6141e160a0830184613884565b6060810161428b8286613c38565b61407f6020830185613884565b608081016142a68287613c38565b6142b36020830186613884565b6142c06040830185613884565b818103606083015261405a818461388d565b602080825281016105bc8184613c3c565b602080825281016105bc8184613d21565b604080825281016143058185613d8d565b90506140126020830184613884565b602081016105bf8284613884565b608081016143308287613884565b61433d6020830186613884565b818103604083015261434f818561359b565b9050818103606083015261405a81846137e8565b6040518181016001600160401b038111828210171561438157600080fd5b604052919050565b60006001600160401b0382111561439f57600080fd5b5060209081020190565b60006001600160401b038211156143bf57600080fd5b506020601f91909101601f19160190565b60200190565b90565b5190565b50600590565b90815260200190565b60006105bf8261441f565b806117c9816144a5565b806117c9816144b2565b806117c9816144bc565b806117c9816144c6565b6001600160a01b031690565b6001600160401b031690565b60006105bf826143f7565b60006105bf82614401565b60006105bf8261440b565b60006105bf82614415565b82818337506000910152565b60005b8381101561448a578181015183820152602001614472565b83811115613d1b5750506000910152565b601f01601f191690565b600281106144af57fe5b50565b600681106144af57fe5b600481106144af57fe5b600381106144af57fe5b6144d9816143ec565b81146144af57600080fd5b6144d9816143d6565b600481106144af57600080fd5b6144d98161442b56fea265627a7a72305820bdaec46644da1c57df25ca12e5ae453487a80d9ea4c06ef233431c2c85bb0beb6c6578706572696d656e74616cf50037","sourceMap":"767:15957:0:-;;;997:373;8:9:-1;5:2;;;30:1;27;20:12;5:2;997:373:0;;;;;;;;;;;;;;;;;;;;;;1110:5;:37;;-1:-1:-1;;;;;;1110:37:0;;;-1:-1:-1;;;;;1110:37:0;;;;;;;-1:-1:-1;1157:28:0;;;1219:35;;;;1195:21;:59;1264:15;:28;;;;;;;;;;;;;;;1302:22;:26;;;1338:21;:25;767:15957;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;146:134;224:13;;242:33;224:13;242:33;;287:672;;;;;453:3;441:9;432:7;428:23;424:33;421:2;;;470:1;467;460:12;421:2;505:1;522:64;578:7;558:9;522:64;;;512:74;;484:108;623:2;641:64;697:7;688:6;677:9;673:22;641:64;;;631:74;;602:109;742:2;760:64;816:7;807:6;796:9;792:22;760:64;;;750:74;;721:109;861:2;879:64;935:7;926:6;915:9;911:22;879:64;;;869:74;;840:109;415:544;;;;;;;;966:91;;-1:-1;;;;;1126:54;;1028:24;1109:76;1192:72;1254:5;1237:27;1271:117;1340:24;1358:5;1340:24;;;1333:5;1330:35;1320:2;;1379:1;1376;1369:12;1320:2;1314:74;;1395:117;1464:24;1482:5;1464:24;;1438:74;767:15957:0;;;;;;","deployedSourceMap":"767:15957:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;767:15957:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14444:194;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;15799:199;;;;;;;;;:::i;:::-;;;;;;;;6903:98;;;:::i;:::-;;6441:132;;;;;;;;;:::i;12186:546::-;;;;;;;;;:::i;6076:167::-;;;;;;;;;:::i;8308:575::-;;;;;;;;;:::i;14114:209::-;;;;;;;;;:::i;3257:121:10:-;;;:::i;:::-;;;;;;;;2133:102;;;:::i;:::-;;;;;;;;3011:130;;;:::i;:::-;;;;;;;;9010:149:0;;;:::i;2731::10:-;;;;;;;;;:::i;:::-;;;;;;;;5624:207:0;;;;;;;;;:::i;9372:211::-;;;;;;;;;:::i;2409:137:10:-;;;;;;;;;:::i;:::-;;;;;;;;15264:198:0;;;;;;;;;:::i;:::-;;;;;;;;;;;1004:492:10;;;;;;;;;:::i;:::-;;;;;;;;;7309:324:0;;;;;;;;;:::i;16136:200::-;;;;;;;;;:::i;:::-;;;;;;;;;6736:90;;;:::i;16541:181::-;;;;;;;;;:::i;11321:261::-;;;;;;;;;:::i;679:131:10:-;;;;;;;;;:::i;:::-;;;;;;;;10436:310:0;;;;;;;;;:::i;13123:341::-;;;;;;;;;:::i;14813:167::-;;;;;;;;;:::i;399:115:10:-;;;:::i;:::-;;;;;;;;1957:90;;;:::i;13631:147:0:-;;;;;;;;;:::i;1740:134:10:-;;;;;;;;;:::i;14444:194:0:-;14522:16;14540:13;14576;:34;14611:5;14618:12;14576:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14576:55:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14576:55:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;14576:55:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;14576:55:0;;;;;;;;;14569:62;;;;14444:194;;;:::o;15799:199::-;15931:60;;-1:-1:-1;;;;;15931:60:0;;15892:16;;15931:11;;:30;;:60;;15962:5;;15969:12;;15983:7;;15931:60;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15931:60:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15931:60:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;15931:60:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;15931:60:0;;;;;;;;;15924:67;;15799:199;;;;;:::o;6903:98::-;6943:10;2034:33;;:::i;:::-;-1:-1:-1;;;;;2070:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2034:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2034:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2034:56:0;;-1:-1:-1;2034:56:0;;-1:-1:-1;2125:34:0;;-1:-1:-1;2108:6:0;:13;;;:51;;;;;;;;;2100:84;;;;-1:-1:-1;;;;;2100:84:0;;;;;;;;;;;;;;;;;6965:29;;-1:-1:-1;;;;;6965:29:0;;:11;;:22;;:29;;6988:5;;6965:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6965:29:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6965:29:0;;;;6903:98;;:::o;6441:132::-;6500:10;3279:33;;:::i;:::-;-1:-1:-1;;;;;3315:20:0;;;:5;:20;;;:13;:20;;;;;;;;;3279:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3279:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3279:56:0;;-1:-1:-1;3279:56:0;;-1:-1:-1;3370:35:0;;-1:-1:-1;3353:6:0;:13;;;:52;;;;;;;;;3345:104;;;;-1:-1:-1;;;;;3345:104:0;;;;;;;;;3459:39;;:::i;:::-;3501:56;;-1:-1:-1;;;;;3501:56:0;;:11;;:34;;:56;;3536:6;;3544:12;;3501:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3501:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3501:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3501:56:0;;;;;;;;;3459:98;-1:-1:-1;3604:33:0;3575:25;;:62;;;;;;;;;3567:126;;;;-1:-1:-1;;;;;3567:126:0;;;;;;;;;3747:9;:21;;;3711:33;3731:12;3711:19;:33::i;:::-;:57;3703:128;;;;-1:-1:-1;;;;;3703:128:0;;;;;;;;;6526:40;;-1:-1:-1;;;;;6526:40:0;;:11;;:24;;:40;;6551:5;;6558:7;;6526:40;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6526:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6526:40:0;;;;6441:132;;;;:::o;12186:546::-;12503:10;2034:33;;:::i;:::-;-1:-1:-1;;;;;2070:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2034:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2034:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2034:56:0;;-1:-1:-1;2034:56:0;;-1:-1:-1;2125:34:0;;-1:-1:-1;2108:6:0;:13;;;:51;;;;;;;;;2100:84;;;;-1:-1:-1;;;;;2100:84:0;;;;;;;;;12536:7;4382:42;4347:5;:24;;;:15;:24;;;;;:31;;;;;;:77;;;;;;;;4339:118;;;;-1:-1:-1;;;;;4339:118:0;;;;;;;;;12559:166;;-1:-1:-1;;;;;12559:166:0;;:8;;:26;;:166;;12586:5;;12593:7;;12602;;12611:15;;12628:11;;12641:21;;12676:32;;12710:8;;12720:4;;12559:166;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12559:166:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12559:166:0;;;;2194:1;12186:546;;;;;;;;;;:::o;6076:167::-;6159:10;1670:33;;:::i;:::-;-1:-1:-1;;;;;1706:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1670:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1670:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1670:56:0;;-1:-1:-1;1670:56:0;;-1:-1:-1;1761:38:0;;-1:-1:-1;1744:6:0;:13;;;:55;;;;;;;;;;1736:87;;;;-1:-1:-1;;;;;1736:87:0;;;;;;;;;6185:51;;-1:-1:-1;;;;;6185:51:0;;:11;;:23;;:51;;6209:5;;6216:10;;6228:7;;6185:51;;;;8308:575;8639:10;2034:33;;:::i;:::-;-1:-1:-1;;;;;2070:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2034:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2034:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2034:56:0;;-1:-1:-1;2034:56:0;;-1:-1:-1;2125:34:0;;-1:-1:-1;2108:6:0;:13;;;:51;;;;;;;;;2100:84;;;;-1:-1:-1;;;;;2100:84:0;;;;;;;;;8673:7;4069:43;4034:5;:24;;;:15;:24;;;;;:31;;;;;;:78;;;;;;;;4026:123;;;;-1:-1:-1;;;;;4026:123:0;;;;;;;;;8696:180;;-1:-1:-1;;;;;8696:180:0;;:8;;:33;;:180;;8730:5;;8737:7;;8746:12;;8760:9;;8771:19;;8804:21;;8827:32;;8861:8;;8871:4;;8696:180;;;;14114:209;14222:10;1670:33;;:::i;:::-;-1:-1:-1;;;;;1706:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1670:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1670:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1670:56:0;;-1:-1:-1;1670:56:0;;-1:-1:-1;1761:38:0;;-1:-1:-1;1744:6:0;:13;;;:55;;;;;;;;;;1736:87;;;;-1:-1:-1;;;;;1736:87:0;;;;;;;;;14248:68;;-1:-1:-1;;;;;14248:68:0;;:13;;:34;;:68;;14283:5;;14290:12;;14304:5;;14311:4;;14248:68;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14248:68:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14248:68:0;;;;14114:209;;;;;:::o;3257:121:10:-;3319:16;3354:5;:17;;3347:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3257:121;:::o;2133:102::-;2207:21;;2133:102;:::o;3011:130::-;3060:36;;:::i;:::-;3108:26;;;;;;;;;3115:19;3108:26;3115:5;3108:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3108:26:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:130;:::o;9010:149:0:-;9102:50;;-1:-1:-1;;;;;9102:50:0;;9075:4;;9102:18;;:43;;:50;;9075:4;;9102:50;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9102:50:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9102:50:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9102:50:0;;;;;;;;;9095:57;;9010:149;:::o;2731::10:-;2796:34;;:::i;:::-;2849:5;:24;;;:15;:24;;;;;;;;;2842:31;;;;;;;;;-1:-1:-1;;;;;2842:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2849:24;;2842:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2842:31:10;;;-1:-1:-1;;2842:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2842:31:10;-1:-1:-1;2731:149:10;;;;:::o;5624:207:0:-;5740:7;4945:6;4940:175;4961:21;:28;4957:32;;4940:175;;;5068:7;-1:-1:-1;;;;;5018:57:0;:5;:13;;:39;5032:5;:21;;5054:1;5032:24;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5032:24:0;;;5018:39;;;;;;;;;;;;;;;:46;;:57;;5010:94;;;;-1:-1:-1;;;;;5010:94:0;;;;;;;;;4991:3;;4940:175;;;-1:-1:-1;5763:61:0;;-1:-1:-1;;;;;5763:61:0;;:11;;:24;;:61;;5788:5;;5795:7;;5804;;5813:10;;5763:61;;;;9372:211;9505:71;;-1:-1:-1;;;;;9505:71:0;;9466:16;;9505:18;;:49;;:71;;9555:5;;9562:6;;9570:5;;9505:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9505:71:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9505:71:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;9505:71:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;9505:71:0;;;;;;;;2409:137:10;2470:30;;:::i;:::-;2519:5;:20;;;:11;:20;;;;;;;;;2512:27;;;;;;;;;-1:-1:-1;;;;;2512:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2512:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2519:20;2512:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2512:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2409:137;;;:::o;15264:198:0:-;15341:4;15347;15353:16;15371:13;15403:11;:31;15435:5;15442:12;15403:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15403:52:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15403:52:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;15403:52:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;15403:52:0;;;;;;;;;15396:59;;;;;;;;15264:198;;;;;:::o;1004:492:10:-;1079:7;1088:26;;:::i;:::-;1126:15;1151:33;;:::i;:::-;1199:6;1194:262;1215:21;:28;1211:32;;1194:262;;;1287:21;:24;;1273:13;;:5;;1309:1;;1287:24;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1287:24:10;;;1273:39;;;;;;;;;;;;;;;;1264:48;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1264:48:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:7;-1:-1:-1;;;;;1330:24:10;:6;:13;;;-1:-1:-1;;;;;1330:24:10;;1326:120;;;1384:21;:24;;1406:1;;1384:24;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1384:24:10;;-1:-1:-1;1426:5:10;;1326:120;1245:3;;1194:262;;;-1:-1:-1;1473:7:10;;-1:-1:-1;1482:6:10;-1:-1:-1;1004:492:10;;;:::o;7309:324:0:-;7486:10;2034:33;;:::i;:::-;-1:-1:-1;;;;;2070:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2034:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2034:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2034:56:0;;-1:-1:-1;2034:56:0;;-1:-1:-1;2125:34:0;;-1:-1:-1;2108:6:0;:13;;;:51;;;;;;;;;2100:84;;;;-1:-1:-1;;;;;2100:84:0;;;;;;;;;7520:7;4069:43;4034:5;:24;;;:15;:24;;;;;:31;;;;;;:78;;;;;;;;4026:123;;;;-1:-1:-1;;;;;4026:123:0;;;;;;;;;7543:83;;-1:-1:-1;;;;;7543:83:0;;:8;;:40;;:83;;7584:5;;7591:7;;7600:9;;7611:8;;7621:4;;7543:83;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7543:83:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7543:83:0;;;;2194:1;7309:324;;;;;;:::o;16136:200::-;16241:7;16250:12;16216:10;1670:33;;:::i;:::-;-1:-1:-1;;;;;1706:20:0;;;:5;:20;;;:13;:20;;;;;;;;;1670:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1670:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1670:56:0;;-1:-1:-1;1670:56:0;;-1:-1:-1;1761:38:0;;-1:-1:-1;1744:6:0;:13;;;:55;;;;;;;;;;1736:87;;;;-1:-1:-1;;;;;1736:87:0;;;;;;;;;16285:44;;-1:-1:-1;;;;;16285:44:0;;:11;;:25;;:44;;16311:5;;16318:10;;16285:44;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16285:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16285:44:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16285:44:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;16285:44:0;;;;;;;;;16278:51;;;;16136:200;;;;;:::o;6736:90::-;6769:10;2726:33;;:::i;:::-;-1:-1:-1;;;;;2762:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2726:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2726:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2800:33;2820:12;2800:19;:33::i;:::-;2792:90;;;;-1:-1:-1;;;;;2792:90:0;;;;;;;;;2917:35;2900:6;:13;;;:52;;;;;;;;;2892:104;;;;-1:-1:-1;;;;;2892:104:0;;;;;;;;;3032:22;;3014:14;;;;:40;;3006:87;;;;-1:-1:-1;;;;;3006:87:0;;;;;;;;;6791:28;;-1:-1:-1;;;;;6791:28:0;;:11;;:21;;:28;;6813:5;;6791:28;;;;16541:181;16668:47;;-1:-1:-1;;;;;16668:47:0;;16641:4;;16668:11;;:28;;:47;;16697:5;;16704:10;;16668:47;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16668:47:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16668:47:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;16668:47:0;;;;;;;;11321:261;11488:87;;-1:-1:-1;;;;;11488:87:0;;:8;;:29;;:87;;11518:5;;11525:11;;11538:9;;11549:6;;11557:17;;11488:87;;;;679:131:10;736:26;;:::i;:::-;-1:-1:-1;;;;;781:22:10;;;:5;:22;;;:13;:22;;;;;;;;;774:29;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;774:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;774:29:10;;-1:-1:-1;774:29:10;;679:131;-1:-1:-1;;;679:131:10:o;10436:310:0:-;10634:105;;-1:-1:-1;;;;;10634:105:0;;:8;;:39;;:105;;10674:5;;10681:11;;10694:9;;10705:6;;10713:17;;10732:6;;10634:105;;;;13123:341;13317:10;2034:33;;:::i;:::-;-1:-1:-1;;;;;2070:20:0;;;:5;:20;;;:13;:20;;;;;;;;;2034:56;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2034:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2034:56:0;;-1:-1:-1;2034:56:0;;-1:-1:-1;2125:34:0;;-1:-1:-1;2108:6:0;:13;;;:51;;;;;;;;;2100:84;;;;-1:-1:-1;;;;;2100:84:0;;;;;;;;;13350:7;4382:42;4347:5;:24;;;:15;:24;;;;;:31;;;;;;:77;;;;;;;;4339:118;;;;-1:-1:-1;;;;;4339:118:0;;;;;;;;;13373:84;;-1:-1:-1;;;;;13373:84:0;;:8;;:30;;:84;;13404:5;;13411:7;;13420;;13429:11;;13442:8;;13452:4;;13373:84;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13373:84:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13373:84:0;;;;2194:1;13123:341;;;;;;;:::o;14813:167::-;14917:56;;-1:-1:-1;;;;;14917:56:0;;14894:4;;14917:11;;:35;;:56;;14894:4;;14960:12;;14917:56;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14917:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14917:56:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;14917:56:0;;;;;;;;399:115:10;489:10;449:7;475:25;;;:13;:25;;;;;:32;-1:-1:-1;;;;;475:32:10;399:115;:::o;1957:90::-;2025:15;;1957:90;:::o;13631:147:0:-;13702:7;4689:37;4658:5;:20;;;:11;:20;;;;;:27;;;;;;;;:68;;;;;;;;4650:100;;;;-1:-1:-1;;;;;4650:100:0;;;;;;;;;13725:46;;-1:-1:-1;;;;;13725:46:0;;:8;;:30;;:46;;13756:5;;13763:7;;13725:46;;;;1740:134:10;-1:-1:-1;;;;;1833:34:10;1810:4;1833:34;;;:25;:34;;;;;;;1740:134::o;767:15957:0:-;;;;;;;;;;-1:-1:-1;767:15957:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;767:15957:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;767:15957:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;767:15957:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;301:722;;429:3;422:4;414:6;410:17;406:27;396:2;;447:1;444;437:12;396:2;477:6;471:13;499:80;514:64;571:6;514:64;;;499:80;;;490:89;;596:5;621:6;614:5;607:21;651:4;643:6;639:17;629:27;;673:4;668:3;664:14;657:21;;726:6;773:3;765:4;757:6;753:17;748:3;744:27;741:36;738:2;;;790:1;787;780:12;738:2;815:1;800:217;825:6;822:1;819:13;800:217;;;883:3;905:48;949:3;937:10;905:48;;;893:61;;-1:-1;977:4;968:14;;;;996;;;;;847:1;840:9;800:217;;;804:14;389:634;;;;;;;;1049:722;;1177:3;1170:4;1162:6;1158:17;1154:27;1144:2;;1195:1;1192;1185:12;1144:2;1225:6;1219:13;1247:80;1262:64;1319:6;1262:64;;1247:80;1238:89;;1344:5;1369:6;1362:5;1355:21;1399:4;1391:6;1387:17;1377:27;;1421:4;1416:3;1412:14;1405:21;;1474:6;1521:3;1513:4;1505:6;1501:17;1496:3;1492:27;1489:36;1486:2;;;1538:1;1535;1528:12;1486:2;1563:1;1548:217;1573:6;1570:1;1567:13;1548:217;;;1631:3;1653:48;1697:3;1685:10;1653:48;;;1641:61;;-1:-1;1725:4;1716:14;;;;1744;;;;;1595:1;1588:9;1548:217;;1797:722;;1925:3;1918:4;1910:6;1906:17;1902:27;1892:2;;1943:1;1940;1933:12;1892:2;1973:6;1967:13;1995:80;2010:64;2067:6;2010:64;;1995:80;1986:89;;2092:5;2117:6;2110:5;2103:21;2147:4;2139:6;2135:17;2125:27;;2169:4;2164:3;2160:14;2153:21;;2222:6;2269:3;2261:4;2253:6;2249:17;2244:3;2240:27;2237:36;2234:2;;;2286:1;2283;2276:12;2234:2;2311:1;2296:217;2321:6;2318:1;2315:13;2296:217;;;2379:3;2401:48;2445:3;2433:10;2401:48;;;2389:61;;-1:-1;2473:4;2464:14;;;;2492;;;;;2343:1;2336:9;2296:217;;2527:130;2594:20;;2619:33;2594:20;2619:33;;2664:134;2742:13;;2760:33;2742:13;2760:33;;2806:440;;2907:3;2900:4;2892:6;2888:17;2884:27;2874:2;;2925:1;2922;2915:12;2874:2;2962:6;2949:20;2984:64;2999:48;3040:6;2999:48;;2984:64;2975:73;;3068:6;3061:5;3054:21;3104:4;3096:6;3092:17;3137:4;3130:5;3126:16;3172:3;3163:6;3158:3;3154:16;3151:25;3148:2;;;3189:1;3186;3179:12;3148:2;3199:41;3233:6;3228:3;3223;3199:41;;;2867:379;;;;;;;;3255:442;;3367:3;3360:4;3352:6;3348:17;3344:27;3334:2;;3385:1;3382;3375:12;3334:2;3415:6;3409:13;3437:64;3452:48;3493:6;3452:48;;3437:64;3428:73;;3521:6;3514:5;3507:21;3557:4;3549:6;3545:17;3590:4;3583:5;3579:16;3625:3;3616:6;3611:3;3607:16;3604:25;3601:2;;;3642:1;3639;3632:12;3601:2;3652:39;3684:6;3679:3;3674;3652:39;;3705:170;3801:13;;3819:51;3801:13;3819:51;;3918:695;;4045:4;4033:9;4028:3;4024:19;4020:30;4017:2;;;4063:1;4060;4053:12;4017:2;4081:20;4096:4;4081:20;;;4072:29;-1:-1;4162:1;4193:78;4267:3;4247:9;4193:78;;;4169:103;;-1:-1;4340:2;4373:60;4429:3;4405:22;;;4373:60;;;4366:4;4359:5;4355:16;4348:86;4293:152;4498:2;4531:60;4587:3;4578:6;4567:9;4563:22;4531:60;;;4524:4;4517:5;4513:16;4506:86;4455:148;4011:602;;;;;4898:128;4964:20;;4989:32;4964:20;4989:32;;5033:241;;5137:2;5125:9;5116:7;5112:23;5108:32;5105:2;;;5153:1;5150;5143:12;5105:2;5188:1;5205:53;5250:7;5230:9;5205:53;;;5195:63;5099:175;-1:-1;;;;5099:175;5281:496;;;5422:2;5410:9;5401:7;5397:23;5393:32;5390:2;;;5438:1;5435;5428:12;5390:2;5473:1;5490:64;5546:7;5526:9;5490:64;;;5480:74;;5452:108;5612:2;5601:9;5597:18;5591:25;-1:-1;;;;;5628:6;5625:30;5622:2;;;5668:1;5665;5658:12;5622:2;5688:73;5753:7;5744:6;5733:9;5729:22;5688:73;;;5678:83;;5570:197;5384:393;;;;;;5784:699;;;;5940:2;5928:9;5919:7;5915:23;5911:32;5908:2;;;5956:1;5953;5946:12;5908:2;5991:1;6008:53;6053:7;6033:9;6008:53;;;5998:63;;5970:97;6126:2;6115:9;6111:18;6098:32;-1:-1;;;;;6142:6;6139:30;6136:2;;;6182:1;6179;6172:12;6136:2;6202:62;6256:7;6247:6;6236:9;6232:22;6202:62;;;6192:72;;6077:193;6329:2;6318:9;6314:18;6301:32;-1:-1;;;;;6345:6;6342:30;6339:2;;;6385:1;6382;6375:12;6339:2;6405:62;6459:7;6450:6;6439:9;6435:22;6405:62;;;6395:72;;6280:193;5902:581;;;;;;6490:366;;;6611:2;6599:9;6590:7;6586:23;6582:32;6579:2;;;6627:1;6624;6617:12;6579:2;6662:1;6679:53;6724:7;6704:9;6679:53;;;6669:63;;6641:97;6769:2;6787:53;6832:7;6823:6;6812:9;6808:22;6787:53;;6863:392;;7003:2;6991:9;6982:7;6978:23;6974:32;6971:2;;;7019:1;7016;7009:12;6971:2;7054:24;;-1:-1;;;;;7087:30;;7084:2;;;7130:1;7127;7120:12;7084:2;7150:89;7231:7;7222:6;7211:9;7207:22;7150:89;;7262:657;;;7444:2;7432:9;7423:7;7419:23;7415:32;7412:2;;;7460:1;7457;7450:12;7412:2;7495:24;;-1:-1;;;;;7528:30;;7525:2;;;7571:1;7568;7561:12;7525:2;7591:89;7672:7;7663:6;7652:9;7648:22;7591:89;;;7581:99;;7474:212;7738:2;7727:9;7723:18;7717:25;-1:-1;;;;;7754:6;7751:30;7748:2;;;7794:1;7791;7784:12;7748:2;7814:89;7895:7;7886:6;7875:9;7871:22;7814:89;;7926:392;;8066:2;8054:9;8045:7;8041:23;8037:32;8034:2;;;8082:1;8079;8072:12;8034:2;8117:24;;-1:-1;;;;;8150:30;;8147:2;;;8193:1;8190;8183:12;8147:2;8213:89;8294:7;8285:6;8274:9;8270:22;8213:89;;8325:241;;8429:2;8417:9;8408:7;8404:23;8400:32;8397:2;;;8445:1;8442;8435:12;8397:2;8480:1;8497:53;8542:7;8522:9;8497:53;;8573:1327;;;;;;;;;8813:3;8801:9;8792:7;8788:23;8784:33;8781:2;;;8830:1;8827;8820:12;8781:2;8865:1;8882:53;8927:7;8907:9;8882:53;;;8872:63;;8844:97;8972:2;8990:53;9035:7;9026:6;9015:9;9011:22;8990:53;;;8980:63;;8951:98;9080:2;9098:53;9143:7;9134:6;9123:9;9119:22;9098:53;;;9088:63;;9059:98;9188:2;9206:53;9251:7;9242:6;9231:9;9227:22;9206:53;;;9196:63;;9167:98;9324:3;9313:9;9309:19;9296:33;-1:-1;;;;;9341:6;9338:30;9335:2;;;9381:1;9378;9371:12;9335:2;9401:62;9455:7;9446:6;9435:9;9431:22;9401:62;;;9391:72;;9275:194;9500:3;9519:53;9564:7;9555:6;9544:9;9540:22;9519:53;;;9509:63;;9479:99;9609:3;9628:52;9672:7;9663:6;9652:9;9648:22;9628:52;;;9618:62;;9588:98;9745:3;9734:9;9730:19;9717:33;-1:-1;;;;;9762:6;9759:30;9756:2;;;9802:1;9799;9792:12;9756:2;9822:62;9876:7;9867:6;9856:9;9852:22;9822:62;;;9812:72;;9696:194;8775:1125;;;;;;;;;;;;9907:845;;;;;;10087:3;10075:9;10066:7;10062:23;10058:33;10055:2;;;10104:1;10101;10094:12;10055:2;10139:1;10156:53;10201:7;10181:9;10156:53;;;10146:63;;10118:97;10246:2;10264:53;10309:7;10300:6;10289:9;10285:22;10264:53;;;10254:63;;10225:98;10354:2;10372:53;10417:7;10408:6;10397:9;10393:22;10372:53;;;10362:63;;10333:98;10462:2;10480:52;10524:7;10515:6;10504:9;10500:22;10480:52;;;10470:62;;10441:97;10597:3;10586:9;10582:19;10569:33;-1:-1;;;;;10614:6;10611:30;10608:2;;;10654:1;10651;10644:12;10608:2;10674:62;10728:7;10719:6;10708:9;10704:22;10674:62;;;10664:72;;10548:194;10049:703;;;;;;;;;10759:719;;;;;10922:3;10910:9;10901:7;10897:23;10893:33;10890:2;;;10939:1;10936;10929:12;10890:2;10974:1;10991:53;11036:7;11016:9;10991:53;;;10981:63;;10953:97;11081:2;11099:53;11144:7;11135:6;11124:9;11120:22;11099:53;;;11089:63;;11060:98;11189:2;11207:52;11251:7;11242:6;11231:9;11227:22;11207:52;;;11197:62;;11168:97;11324:2;11313:9;11309:18;11296:32;-1:-1;;;;;11340:6;11337:30;11334:2;;;11380:1;11377;11370:12;11334:2;11400:62;11454:7;11445:6;11434:9;11430:22;11400:62;;;11390:72;;11275:193;10884:594;;;;;;;;11485:613;;;;;11638:3;11626:9;11617:7;11613:23;11609:33;11606:2;;;11655:1;11652;11645:12;11606:2;11690:1;11707:53;11752:7;11732:9;11707:53;;;11697:63;;11669:97;11797:2;11815:52;11859:7;11850:6;11839:9;11835:22;11815:52;;;11805:62;;11776:97;11904:2;11922:52;11966:7;11957:6;11946:9;11942:22;11922:52;;;11912:62;;11883:97;12011:2;12029:53;12074:7;12065:6;12054:9;12050:22;12029:53;;12105:739;;;;;;12275:3;12263:9;12254:7;12250:23;12246:33;12243:2;;;12292:1;12289;12282:12;12243:2;12327:1;12344:53;12389:7;12369:9;12344:53;;;12334:63;;12306:97;12434:2;12452:52;12496:7;12487:6;12476:9;12472:22;12452:52;;;12442:62;;12413:97;12541:2;12559:52;12603:7;12594:6;12583:9;12579:22;12559:52;;;12549:62;;12520:97;12648:2;12666:53;12711:7;12702:6;12691:9;12687:22;12666:53;;;12656:63;;12627:98;12756:3;12775:53;12820:7;12811:6;12800:9;12796:22;12775:53;;12851:574;;;12990:2;12978:9;12969:7;12965:23;12961:32;12958:2;;;13006:1;13003;12996:12;12958:2;13041:31;;-1:-1;;;;;13081:30;;13078:2;;;13124:1;13121;13114:12;13078:2;13144:62;13198:7;13189:6;13178:9;13174:22;13144:62;;;13134:72;;13020:192;13271:2;13260:9;13256:18;13243:32;-1:-1;;;;;13287:6;13284:30;13281:2;;;13327:1;13324;13317:12;13281:2;13347:62;13401:7;13392:6;13381:9;13377:22;13347:62;;13432:317;;13574:2;13562:9;13553:7;13549:23;13545:32;13542:2;;;13590:1;13587;13580:12;13542:2;13625:1;13642:91;13725:7;13705:9;13642:91;;14004:263;;14119:2;14107:9;14098:7;14094:23;14090:32;14087:2;;;14135:1;14132;14125:12;14087:2;14170:1;14187:64;14243:7;14223:9;14187:64;;14274:366;;;14395:2;14383:9;14374:7;14370:23;14366:32;14363:2;;;14411:1;14408;14401:12;14363:2;14446:1;14463:53;14508:7;14488:9;14463:53;;15020:930;;;;;15236:3;15224:9;15215:7;15211:23;15207:33;15204:2;;;15253:1;15250;15243:12;15204:2;15288:1;15305:64;15361:7;15341:9;15305:64;;;15295:74;;15267:108;15406:2;15424:64;15480:7;15471:6;15460:9;15456:22;15424:64;;;15414:74;;15385:109;15546:2;15535:9;15531:18;15525:25;-1:-1;;;;;15562:6;15559:30;15556:2;;;15602:1;15599;15592:12;15556:2;15622:89;15703:7;15694:6;15683:9;15679:22;15622:89;;;15612:99;;15504:213;15769:2;15758:9;15754:18;15748:25;-1:-1;;;;;15785:6;15782:30;15779:2;;;15825:1;15822;15815:12;15779:2;15845:89;15926:7;15917:6;15906:9;15902:22;15845:89;;15957:595;;;;16104:2;16092:9;16083:7;16079:23;16075:32;16072:2;;;16120:1;16117;16110:12;16072:2;16155:1;16172:53;16217:7;16197:9;16172:53;;;16162:63;;16134:97;16262:2;16280:53;16325:7;16316:6;16305:9;16301:22;16280:53;;16560:173;;16647:46;16689:3;16681:6;16647:46;;;-1:-1;;16722:4;16713:14;;16640:93;16742:173;;16829:46;16871:3;16863:6;16829:46;;16924:269;;17057:96;17149:3;17141:6;17057:96;;;-1:-1;;17182:4;17173:14;;17050:143;17496:265;;17651:104;17751:3;17743:6;17651:104;;17951:103;18024:24;18042:5;18024:24;;;18019:3;18012:37;18006:48;;;18458:690;;18603:54;18651:5;18603:54;;;18670:86;18749:6;18744:3;18670:86;;;18663:93;;18777:56;18827:5;18777:56;;;18853:7;18881:1;18866:260;18891:6;18888:1;18885:13;18866:260;;;18958:6;18952:13;18979:63;19038:3;19023:13;18979:63;;;18972:70;;19059:60;19112:6;19059:60;;;19049:70;-1:-1;;18913:1;18906:9;18866:260;;;-1:-1;19139:3;;18582:566;-1:-1;;;;;18582:566;19187:654;;19318:50;19362:5;19318:50;;;19381:76;19450:6;19445:3;19381:76;;;19374:83;;19478:52;19524:5;19478:52;;;19550:7;19578:1;19563:256;19588:6;19585:1;19582:13;19563:256;;;19655:6;19649:13;19676:63;19735:3;19720:13;19676:63;;;19669:70;;19756:56;19805:6;19756:56;;;19746:66;-1:-1;;19610:1;19603:9;19563:256;;19880:690;;20025:54;20073:5;20025:54;;;20092:86;20171:6;20166:3;20092:86;;;20085:93;;20199:56;20249:5;20199:56;;;20275:7;20303:1;20288:260;20313:6;20310:1;20307:13;20288:260;;;20380:6;20374:13;20401:63;20460:3;20445:13;20401:63;;;20394:70;;20481:60;20534:6;20481:60;;;20471:70;-1:-1;;20335:1;20328:9;20288:260;;20609:654;;20740:50;20784:5;20740:50;;;20803:76;20872:6;20867:3;20803:76;;;20796:83;;20900:52;20946:5;20900:52;;;20972:7;21000:1;20985:256;21010:6;21007:1;21004:13;20985:256;;;21077:6;21071:13;21098:63;21157:3;21142:13;21098:63;;;21091:70;;21178:56;21227:6;21178:56;;;21168:66;-1:-1;;21032:1;21025:9;20985:256;;21346:838;;21523:73;21590:5;21523:73;;;21609:99;21701:6;21696:3;21609:99;;;21602:106;;21729:75;21798:5;21729:75;;;21824:7;21852:1;21837:325;21862:6;21859:1;21856:13;21837:325;;;21929:6;21923:13;21950:109;22055:3;22040:13;21950:109;;;21943:116;;22076:79;22148:6;22076:79;;;22066:89;-1:-1;;21884:1;21877:9;21837:325;;22267:862;;22452:73;22519:5;22452:73;;;22538:107;22638:6;22633:3;22538:107;;;22531:114;;22666:75;22735:5;22666:75;;;22761:7;22789:1;22774:333;22799:6;22796:1;22793:13;22774:333;;;22866:6;22860:13;22887:117;23000:3;22985:13;22887:117;;;22880:124;;23021:79;23093:6;23021:79;;;23011:89;-1:-1;;22821:1;22814:9;22774:333;;23222:1052;;23417:79;23490:5;23417:79;;;23509:111;23613:6;23608:3;23509:111;;;23502:118;;23643:3;23685:4;23677:6;23673:17;23668:3;23664:27;23712:81;23787:5;23712:81;;;23813:7;23841:1;23826:409;23851:6;23848:1;23845:13;23826:409;;;23913:9;23907:4;23903:20;23898:3;23891:33;23958:6;23952:13;23980:118;24093:4;24078:13;23980:118;;;23972:126;;24115:85;24193:6;24115:85;;;24223:4;24214:14;;;;;24105:95;-1:-1;;23873:1;23866:9;23826:409;;;-1:-1;24248:4;;23396:878;-1:-1;;;;;;;23396:878;24313:690;;24458:54;24506:5;24458:54;;;24525:86;24604:6;24599:3;24525:86;;;24518:93;;24632:56;24682:5;24632:56;;;24708:7;24736:1;24721:260;24746:6;24743:1;24740:13;24721:260;;;24813:6;24807:13;24834:63;24893:3;24878:13;24834:63;;;24827:70;;24914:60;24967:6;24914:60;;;24904:70;-1:-1;;24768:1;24761:9;24721:260;;25042:654;;25173:50;25217:5;25173:50;;;25236:76;25305:6;25300:3;25236:76;;;25229:83;;25333:52;25379:5;25333:52;;;25405:7;25433:1;25418:256;25443:6;25440:1;25437:13;25418:256;;;25510:6;25504:13;25531:63;25590:3;25575:13;25531:63;;;25524:70;;25611:56;25660:6;25611:56;;;25601:66;-1:-1;;25465:1;25458:9;25418:256;;25704:103;25777:24;25795:5;25777:24;;25942:343;;26052:38;26084:5;26052:38;;;26102:70;26165:6;26160:3;26102:70;;;26095:77;;26177:52;26222:6;26217:3;26210:4;26203:5;26199:16;26177:52;;;26250:29;26272:6;26250:29;;;26241:39;;;;26032:253;-1:-1;;;26032:253;27318:162;27414:60;27468:5;27414:60;;27487:142;27573:50;27617:5;27573:50;;27636:148;27725:53;27772:5;27725:53;;27954:146;28042:52;28088:5;28042:52;;28269:465;;28429:67;28493:2;28488:3;28429:67;;;28529:66;28509:87;;-1:-1;;;;;28625:2;28616:12;;28609:88;28725:2;28716:12;;28415:319;-1:-1;;28415:319;28743:364;;28903:67;28967:2;28962:3;28903:67;;;29003:66;28983:87;;29098:2;29089:12;;28889:218;-1:-1;;28889:218;29116:465;;29276:67;29340:2;29335:3;29276:67;;;29376:66;29356:87;;-1:-1;;;;;29472:2;29463:12;;29456:88;29572:2;29563:12;;29262:319;-1:-1;;29262:319;29590:364;;29750:67;29814:2;29809:3;29750:67;;;29850:66;29830:87;;29945:2;29936:12;;29736:218;-1:-1;;29736:218;29963:364;;30123:67;30187:2;30182:3;30123:67;;;30223:66;30203:87;;30318:2;30309:12;;30109:218;-1:-1;;30109:218;30336:465;;30496:67;30560:2;30555:3;30496:67;;;30596:66;30576:87;;-1:-1;;;;;30692:2;30683:12;;30676:88;30792:2;30783:12;;30482:319;-1:-1;;30482:319;30810:465;;30970:67;31034:2;31029:3;30970:67;;;31070:66;31050:87;;31171:66;31166:2;31157:12;;31150:88;31266:2;31257:12;;30956:319;-1:-1;;30956:319;31284:364;;31444:67;31508:2;31503:3;31444:67;;;31544:66;31524:87;;31639:2;31630:12;;31430:218;-1:-1;;31430:218;31657:364;;31817:67;31881:2;31876:3;31817:67;;;31917:66;31897:87;;32012:2;32003:12;;31803:218;-1:-1;;31803:218;32030:364;;32190:67;32254:2;32249:3;32190:67;;;32290:66;32270:87;;32385:2;32376:12;;32176:218;-1:-1;;32176:218;32403:465;;32563:67;32627:2;32622:3;32563:67;;;32663:66;32643:87;;-1:-1;;;;;32759:2;32750:12;;32743:88;32859:2;32850:12;;32549:319;-1:-1;;32549:319;32955:1120;33187:22;;32955:1120;;33120:4;33111:14;;;33215:62;33115:3;33187:22;33215:62;;;33140:143;33363:4;33356:5;33352:16;33346:23;33375:63;33432:4;33427:3;33423:14;33409:12;33375:63;;;33293:151;33521:4;33514:5;33510:16;33504:23;33533:63;33590:4;33585:3;33581:14;33567:12;33533:63;;;33454:148;33687:4;33680:5;33676:16;33670:23;33739:3;33733:4;33729:14;33722:4;33717:3;33713:14;33706:38;33759:99;33853:4;33839:12;33759:99;;;33751:107;;33612:258;33945:4;33938:5;33934:16;33928:23;33957:86;34037:4;34032:3;34028:14;34014:12;33957:86;;;-1:-1;34066:4;33093:982;-1:-1;;;33093:982;34082:122;34181:18;;34175:29;34282:1532;34508:22;;34282:1532;;34439:5;34430:15;;;34536:62;34434:3;34508:22;34536:62;;;34460:144;34683:4;34676:5;34672:16;34666:23;34695:63;34752:4;34747:3;34743:14;34729:12;34695:63;;;34614:150;34843:4;34836:5;34832:16;34826:23;34855:63;34912:4;34907:3;34903:14;34889:12;34855:63;;;34774:150;35001:4;34994:5;34990:16;34984:23;35013:61;35068:4;35063:3;35059:14;35045:12;35013:61;;;34934:146;35154:4;35147:5;35143:16;35137:23;35166:61;35221:4;35216:3;35212:14;35198:12;35166:61;;;35090:143;35313:4;35306:5;35302:16;35296:23;35325:63;35382:4;35377:3;35373:14;35359:12;35325:63;;;35243:151;35469:4;35462:5;35458:16;35452:23;35481:76;35551:4;35546:3;35542:14;35528:12;35481:76;;;35404:159;35637:4;35630:5;35626:16;35620:23;35689:3;35683:4;35679:14;35672:4;35667:3;35663:14;35656:38;35709:67;35771:4;35757:12;35709:67;;;35701:75;34412:1402;-1:-1;;;;;34412:1402;35890:655;36100:22;;36023:4;36014:14;;;36128:78;36018:3;36100:22;36128:78;;;36043:169;36292:4;36285:5;36281:16;36275:23;36304:63;36361:4;36356:3;36352:14;36338:12;36304:63;;;36222:151;36449:4;36442:5;36438:16;36432:23;36461:63;36518:4;36513:3;36509:14;36495:12;36461:63;;;36383:147;35996:549;;;;37378:1201;37595:22;;37378:1201;;37527:4;37518:14;;;37623:62;37522:3;37595:22;37623:62;;;37547:144;37766:4;37759:5;37755:16;37749:23;37778:78;37850:4;37845:3;37841:14;37827:12;37778:78;;;37701:161;37937:4;37930:5;37926:16;37920:23;37989:3;37983:4;37979:14;37972:4;37967:3;37963:14;37956:38;38009:67;38071:4;38057:12;38009:67;;;38001:75;;37872:216;38164:4;38157:5;38153:16;38147:23;38176:63;38233:4;38228:3;38224:14;38210:12;38176:63;;;38098:147;38324:4;38317:5;38313:16;38307:23;38376:3;38370:4;38366:14;38359:4;38354:3;38350:14;38343:38;38396:145;38536:4;38522:12;38396:145;;38649:1249;38874:22;;38649:1249;;38806:4;38797:14;;;38902:70;38801:3;38874:22;38902:70;;;38826:152;39053:4;39046:5;39042:16;39036:23;39065:86;39145:4;39140:3;39136:14;39122:12;39065:86;;;38988:169;39232:4;39225:5;39221:16;39215:23;39284:3;39278:4;39274:14;39267:4;39262:3;39258:14;39251:38;39304:75;39374:4;39360:12;39304:75;;;39296:83;;39167:224;39467:4;39460:5;39456:16;39450:23;39479:71;39544:4;39539:3;39535:14;39521:12;39479:71;;;39401:155;39635:4;39628:5;39624:16;39618:23;39687:3;39681:4;39677:14;39670:4;39665:3;39661:14;39654:38;39707:153;39855:4;39841:12;39707:153;;39982:1020;40209:22;;39982:1020;;40131:4;40122:14;;;40237:62;40126:3;40209:22;40237:62;;;40151:154;40381:4;40374:5;40370:16;40364:23;40433:3;40427:4;40423:14;40416:4;40411:3;40407:14;40400:38;40453:99;40547:4;40533:12;40453:99;;;40445:107;;40315:249;40639:4;40632:5;40628:16;40622:23;40691:3;40685:4;40681:14;40674:4;40669:3;40665:14;40658:38;40711:99;40805:4;40791:12;40711:99;;;40703:107;;40574:248;40895:4;40888:5;40884:16;40878:23;40907:63;40964:4;40959:3;40955:14;40941:12;40907:63;;41485:100;41556:23;41573:5;41556:23;;41717:213;41835:2;41820:18;;41849:71;41824:9;41893:6;41849:71;;41937:408;42101:2;42086:18;;42115:71;42090:9;42159:6;42115:71;;;42234:9;42228:4;42224:20;42219:2;42208:9;42204:18;42197:48;42259:76;42330:4;42321:6;42259:76;;42352:468;42546:2;42531:18;;42560:71;42535:9;42604:6;42560:71;;;42679:9;42673:4;42669:20;42664:2;42653:9;42649:18;42642:48;42704:106;42805:4;42796:6;42704:106;;42827:361;42995:2;43009:47;;;42980:18;;43070:108;42980:18;43164:6;43070:108;;43195:620;43441:2;43455:47;;;43426:18;;43516:108;43426:18;43610:6;43516:108;;;43508:116;;43672:9;43666:4;43662:20;43657:2;43646:9;43642:18;43635:48;43697:108;43800:4;43791:6;43697:108;;43822:361;43990:2;44004:47;;;43975:18;;44065:108;43975:18;44159:6;44065:108;;44190:461;44408:2;44422:47;;;44393:18;;44483:158;44393:18;44627:6;44483:158;;44658:516;44848:2;44862:47;;;44833:18;;44923:84;44833:18;44993:6;44923:84;;;44915:92;;45055:9;45049:4;45045:20;45040:2;45029:9;45025:18;45018:48;45080:84;45159:4;45150:6;45080:84;;45181:407;45372:2;45386:47;;;45357:18;;45447:131;45357:18;45447:131;;45595:407;45786:2;45800:47;;;45771:18;;45861:131;45771:18;45861:131;;46009:407;46200:2;46214:47;;;46185:18;;46275:131;46185:18;46275:131;;46423:407;46614:2;46628:47;;;46599:18;;46689:131;46599:18;46689:131;;46837:407;47028:2;47042:47;;;47013:18;;47103:131;47013:18;47103:131;;47251:407;47442:2;47456:47;;;47427:18;;47517:131;47427:18;47517:131;;47665:407;47856:2;47870:47;;;47841:18;;47931:131;47841:18;47931:131;;48079:407;48270:2;48284:47;;;48255:18;;48345:131;48255:18;48345:131;;48493:407;48684:2;48698:47;;;48669:18;;48759:131;48669:18;48759:131;;48907:407;49098:2;49112:47;;;49083:18;;49173:131;49083:18;49173:131;;49321:407;49512:2;49526:47;;;49497:18;;49587:131;49497:18;49587:131;;49735:389;49917:2;49931:47;;;49902:18;;49992:122;49902:18;50100:6;49992:122;;50131:269;50277:2;50262:18;;50291:99;50266:9;50363:6;50291:99;;50407:388;50581:2;50566:18;;50595:99;50570:9;50667:6;50595:99;;;50705:80;50781:2;50770:9;50766:18;50757:6;50705:80;;;50552:243;;;;;;50802:795;51068:3;51053:19;;51083:99;51057:9;51155:6;51083:99;;;51193:80;51269:2;51258:9;51254:18;51245:6;51193:80;;;51321:9;51315:4;51311:20;51306:2;51295:9;51291:18;51284:48;51346:84;51425:4;51416:6;51346:84;;;51338:92;;51478:9;51472:4;51468:20;51463:2;51452:9;51448:18;51441:48;51503:84;51582:4;51573:6;51503:84;;;51495:92;51039:558;-1:-1;;;;;;51039:558;51604:507;51806:2;51791:18;;51820:99;51795:9;51892:6;51820:99;;;51930:80;52006:2;51995:9;51991:18;51982:6;51930:80;;;52021;52097:2;52086:9;52082:18;52073:6;52021:80;;52118:388;52292:2;52277:18;;52306:99;52281:9;52378:6;52306:99;;;52416:80;52492:2;52481:9;52477:18;52468:6;52416:80;;52513:1391;52917:3;52902:19;;52932:99;52906:9;53004:6;52932:99;;;53042:80;53118:2;53107:9;53103:18;53094:6;53042:80;;;53133;53209:2;53198:9;53194:18;53185:6;53133:80;;;53224;53300:2;53289:9;53285:18;53276:6;53224:80;;;53315:81;53391:3;53380:9;53376:19;53367:6;53315:81;;;53445:9;53439:4;53435:20;53429:3;53418:9;53414:19;53407:49;53470:84;53549:4;53540:6;53470:84;;;53462:92;;53565:81;53641:3;53630:9;53626:19;53617:6;53565:81;;;53657:79;53731:3;53720:9;53716:19;53707:6;53657:79;;;53785:9;53779:4;53775:20;53769:3;53758:9;53754:19;53747:49;53810:84;53889:4;53880:6;53810:84;;;53802:92;52888:1016;-1:-1;;;;;;;;;;;52888:1016;53911:947;54213:3;54198:19;;54228:99;54202:9;54300:6;54228:99;;;54338:80;54414:2;54403:9;54399:18;54390:6;54338:80;;;54429;54505:2;54494:9;54490:18;54481:6;54429:80;;;54520;54596:2;54585:9;54581:18;54572:6;54520:80;;;54611:79;54685:3;54674:9;54670:19;54661:6;54611:79;;;54739:9;54733:4;54729:20;54723:3;54712:9;54708:19;54701:49;54764:84;54843:4;54834:6;54764:84;;;54756:92;54184:674;-1:-1;;;;;;;;54184:674;54865:827;55139:3;55124:19;;55154:99;55128:9;55226:6;55154:99;;;55264:80;55340:2;55329:9;55325:18;55316:6;55264:80;;;55355;55431:2;55420:9;55416:18;55407:6;55355:80;;;55446:78;55520:2;55509:9;55505:18;55496:6;55446:78;;;55573:9;55567:4;55563:20;55557:3;55546:9;55542:19;55535:49;55598:84;55677:4;55668:6;55598:84;;;55590:92;55110:582;-1:-1;;;;;;;55110:582;55699:739;55953:3;55938:19;;55968:99;55942:9;56040:6;55968:99;;;56078:80;56154:2;56143:9;56139:18;56130:6;56078:80;;;56169:78;56243:2;56232:9;56228:18;56219:6;56169:78;;;56258;56332:2;56321:9;56317:18;56308:6;56258:78;;;56347:81;56423:3;56412:9;56408:19;56399:6;56347:81;;56445:859;56727:3;56712:19;;56742:99;56716:9;56814:6;56742:99;;;56852:80;56928:2;56917:9;56913:18;56904:6;56852:80;;;56943:78;57017:2;57006:9;57002:18;56993:6;56943:78;;;57032;57106:2;57095:9;57091:18;57082:6;57032:78;;;57121:81;57197:3;57186:9;57182:19;57173:6;57121:81;;;57213;57289:3;57278:9;57274:19;57265:6;57213:81;;57706:507;57908:2;57893:18;;57922:99;57897:9;57994:6;57922:99;;;58032:80;58108:2;58097:9;58093:18;58084:6;58032:80;;58734:711;58982:3;58967:19;;58997:99;58971:9;59069:6;58997:99;;;59107:80;59183:2;59172:9;59168:18;59159:6;59107:80;;;59198;59274:2;59263:9;59259:18;59250:6;59198:80;;;59326:9;59320:4;59316:20;59311:2;59300:9;59296:18;59289:48;59351:84;59430:4;59421:6;59351:84;;59452:373;59626:2;59640:47;;;59611:18;;59701:114;59611:18;59801:6;59701:114;;59832:357;59998:2;60012:47;;;59983:18;;60073:106;59983:18;60165:6;60073:106;;60196:492;60398:2;60412:47;;;60383:18;;60473:114;60383:18;60573:6;60473:114;;;60465:122;;60598:80;60674:2;60663:9;60659:18;60650:6;60598:80;;60695:213;60813:2;60798:18;;60827:71;60802:9;60871:6;60827:71;;60915:843;61217:3;61202:19;;61232:71;61206:9;61276:6;61232:71;;;61314:72;61382:2;61371:9;61367:18;61358:6;61314:72;;;61434:9;61428:4;61424:20;61419:2;61408:9;61404:18;61397:48;61459:108;61562:4;61553:6;61459:108;;;61451:116;;61615:9;61609:4;61605:20;61600:2;61589:9;61585:18;61578:48;61640:108;61743:4;61734:6;61640:108;;61765:256;61827:2;61821:9;61853:17;;;-1:-1;;;;;61913:34;;61949:22;;;61910:62;61907:2;;;61985:1;61982;61975:12;61907:2;62001;61994:22;61805:216;;-1:-1;61805:216;62028:258;;-1:-1;;;;;62179:6;62176:30;62173:2;;;62219:1;62216;62209:12;62173:2;-1:-1;62248:4;62236:17;;;62266:15;;62110:176;62823:258;;-1:-1;;;;;62958:6;62955:30;62952:2;;;62998:1;62995;62988:12;62952:2;-1:-1;63071:4;63042;63019:17;;;;-1:-1;;63015:33;63061:15;;62889:192;63091:119;63197:4;63185:17;;63165:45;63782:137;63905:6;63885:34;64197:103;64283:12;;64267:33;64778:123;-1:-1;64893:3;;64877:24;66437:168;66545:19;;;66594:4;66585:14;;66538:67;68964:91;;69026:24;69044:5;69026:24;;69141:156;69228:5;69234:58;69228:5;69234:58;;69304:136;69381:5;69387:48;69381:5;69387:48;;69447:142;69527:5;69533:51;69527:5;69533:51;;69596:140;69675:5;69681:50;69675:5;69681:50;;69743:121;-1:-1;;;;;69805:54;;69788:76;69950:96;-1:-1;;;;;70011:30;;69994:52;70053:156;;70155:49;70198:5;70155:49;;70216:136;;70308:39;70341:5;70308:39;;70359:142;;70454:42;70490:5;70454:42;;70508:140;;70602:41;70637:5;70602:41;;70656:145;70737:6;70732:3;70727;70714:30;-1:-1;70793:1;70775:16;;70768:27;70707:94;70810:268;70875:1;70882:101;70896:6;70893:1;70890:13;70882:101;;;70963:11;;;70957:18;70944:11;;;70937:39;70918:2;70911:10;70882:101;;;70998:6;70995:1;70992:13;70989:2;;;-1:-1;;71063:1;71045:16;;71038:27;70859:219;71086:97;71174:2;71154:14;-1:-1;;71150:28;;71134:49;71191:116;71285:1;71278:5;71275:12;71265:2;;71291:9;71265:2;71259:48;;71314:106;71398:1;71391:5;71388:12;71378:2;;71404:9;71427:109;71514:1;71507:5;71504:12;71494:2;;71520:9;71543:108;71629:1;71622:5;71619:12;71609:2;;71635:9;71658:117;71727:24;71745:5;71727:24;;;71720:5;71717:35;71707:2;;71766:1;71763;71756:12;71782:117;71851:24;71869:5;71851:24;;71906:112;71993:1;71986:5;71983:12;71973:2;;72009:1;72006;71999:12;72149:115;72217:23;72234:5;72217:23;","source":"pragma solidity ^0.5.0;\\npragma experimental ABIEncoderV2;\\n\\nimport \\"openzeppelin-solidity/contracts/math/SafeMath.sol\\";\\nimport \\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\";\\nimport \\"./utils/SolRsaVerify.sol\\";\\n\\nimport { WorkersImpl } from \\"./impl/WorkersImpl.sol\\";\\nimport { PrincipalImpl } from \\"./impl/PrincipalImpl.sol\\";\\nimport { TaskImpl } from \\"./impl/TaskImpl.sol\\";\\nimport { SecretContractImpl } from \\"./impl/SecretContractImpl.sol\\";\\nimport { EnigmaCommon } from \\"./impl/EnigmaCommon.sol\\";\\nimport { EnigmaState } from \\"./impl/EnigmaState.sol\\";\\nimport { EnigmaEvents } from \\"./impl/EnigmaEvents.sol\\";\\nimport { EnigmaStorage } from \\"./impl/EnigmaStorage.sol\\";\\nimport { Getters } from \\"./impl/Getters.sol\\";\\nimport { ERC20 } from \\"./interfaces/ERC20.sol\\";\\n\\ncontract Enigma is EnigmaStorage, EnigmaEvents, Getters {\\n    using SafeMath for uint256;\\n    using ECDSA for bytes32;\\n\\n    // ========================================== Constructor ==========================================\\n\\n    constructor(address _tokenAddress, address _principal, uint _epochSize, uint _timeoutThreshold) public {\\n        state.engToken = ERC20(_tokenAddress);\\n        state.epochSize = _epochSize;\\n        state.taskTimeoutSize = _timeoutThreshold * state.epochSize;\\n        state.principal = _principal;\\n        state.stakingThreshold = 1;\\n        state.workerGroupSize = 1;\\n    }\\n\\n    // ========================================== Modifiers ==========================================\\n\\n    /**\\n    * Checks if the custodian wallet is registered as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerRegistered(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status != EnigmaCommon.WorkerStatus.Unregistered, \\"Unregistered worker\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged in as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerLoggedIn(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedIn, \\"Worker not logged in\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the custodian wallet is logged out as a worker\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier workerLoggedOut(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not logged out\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if worker can log in\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier canLogIn(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(getFirstBlockNumber(block.number) != 0, \\"Principal node has not been initialized\\");\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        require(worker.balance >= state.stakingThreshold, \\"Worker\'s balance is not sufficient\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks if the worker can withdraw\\n    *\\n    * @param _user The custodian address of the worker\\n    */\\n    modifier canWithdraw(address _user) {\\n        EnigmaCommon.Worker memory worker = state.workers[_user];\\n        require(worker.status == EnigmaCommon.WorkerStatus.LoggedOut, \\"Worker not registered or not logged out\\");\\n        EnigmaCommon.WorkerLog memory workerLog = WorkersImpl.getLatestWorkerLogImpl(worker, block.number);\\n        require(workerLog.workerEventType == EnigmaCommon.WorkerLogType.LogOut,\\n            \\"Worker\'s last log is not of LogOut type\\");\\n        require(getFirstBlockNumber(block.number) > workerLog.blockNumber,\\n            \\"Cannot withdraw in same epoch as log out event\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has not been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractUndefined(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Undefined, \\"Secret contract already deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks secret contract has been deployed\\n    *\\n    * @param _scAddr Secret contract address\\n    */\\n    modifier contractDeployed(bytes32 _scAddr) {\\n        require(state.contracts[_scAddr].status == EnigmaCommon.SecretContractStatus.Deployed, \\"Secret contract not deployed\\");\\n        _;\\n    }\\n\\n    /**\\n    * Checks task record has been created and is still pending receipt\\n    *\\n    * @param _taskId Task ID\\n    */\\n    modifier taskWaiting(bytes32 _taskId) {\\n        require(state.tasks[_taskId].status == EnigmaCommon.TaskStatus.RecordCreated, \\"Task is not waiting\\");\\n        _;\\n    }\\n\\n    /**\\n    * Ensure signing key used for registration is unique\\n    *\\n    * @param _signer Signing key\\n    */\\n    modifier isUniqueSigningKey(address _signer) {\\n        for (uint i = 0; i < state.workerAddresses.length; i++) {\\n            require(state.workers[state.workerAddresses[i]].signer != _signer, \\"Not a unique signing key\\");\\n        }\\n        _;\\n    }\\n\\n    // ========================================== Functions ==========================================\\n\\n    /**\\n    * Registers a new worker or change the signer parameters of an existing\\n    * worker. This should be called by every worker (and the principal)\\n    * node in order to receive tasks.\\n    *\\n    * @param _signer The signer address, derived from the enclave public key\\n    * @param _report The RLP encoded report returned by the IAS\\n    * @param _signature Signature\\n    */\\n    function register(address _signer, bytes memory _report, bytes memory _signature)\\n    public\\n    isUniqueSigningKey(_signer)\\n    {\\n        WorkersImpl.registerImpl(state, _signer, _report, _signature);\\n    }\\n//\\n    /**\\n    * Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    *\\n    * @param _custodian The worker\'s ETH address\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function deposit(address _custodian, uint _amount)\\n    public\\n    workerRegistered(_custodian)\\n    {\\n        WorkersImpl.depositImpl(state, _custodian, _amount);\\n    }\\n\\n    /**\\n    * Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    *\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit\\n    */\\n    function withdraw(uint _amount)\\n    public\\n    canWithdraw(msg.sender)\\n    {\\n        WorkersImpl.withdrawImpl(state, _amount);\\n    }\\n\\n    /**\\n    * Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\n    * selection process.\\n    */\\n    function login() public canLogIn(msg.sender) {\\n        WorkersImpl.loginImpl(state);\\n    }\\n\\n    /**\\n    * Logout worker. Worker must be logged in to do so.\\n    */\\n    function logout() public workerLoggedIn(msg.sender) {\\n        WorkersImpl.logoutImpl(state);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n    * @param _codeHash Deployed bytecode hash\\n    * @param _gasUsed Gas used for task\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContractFailure(\\n        bytes32 _taskId,\\n        bytes32 _codeHash,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    workerLoggedIn(msg.sender)\\n    contractUndefined(_taskId)\\n    {\\n        TaskImpl.deploySecretContractFailureImpl(state, _taskId, _codeHash, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Deploy secret contract from user, called by the worker.\\n    *\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n    * @param _preCodeHash Predeployed bytecode hash\\n    * @param _codeHash Deployed bytecode hash\\n    * @param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n    * @param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n    * @param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n    * @param _gasUsed Gas used for task\\n    * @param _sig Worker\'s signature for deployment\\n    */\\n    function deploySecretContract(\\n        bytes32 _taskId,\\n        bytes32 _preCodeHash,\\n        bytes32 _codeHash,\\n        bytes32 _initStateDeltaHash,\\n        bytes memory _optionalEthereumData,\\n        address _optionalEthereumContractAddress,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    workerLoggedIn(msg.sender)\\n    contractUndefined(_taskId)\\n    {\\n        TaskImpl.deploySecretContractImpl(state, _taskId, _preCodeHash, _codeHash, _initStateDeltaHash,\\n            _optionalEthereumData, _optionalEthereumContractAddress, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Check if secret contract has been deployed\\n    *\\n    * @return  Number of deployed secret contracts\\n    */\\n    function countSecretContracts()\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return SecretContractImpl.countSecretContractsImpl(state);\\n    }\\n\\n    /**\\n    * Get deployed secret contract addresses within a range\\n    *\\n    * @param _start Start of range\\n    * @param _stop End of range\\n    * @return Subset of deployed secret contract addresses\\n    */\\n    function getSecretContractAddresses(uint _start, uint _stop)\\n    public\\n    view\\n    returns (bytes32[] memory)\\n    {\\n        return SecretContractImpl.getSecretContractAddressesImpl(state, _start, _stop);\\n    }\\n\\n    /**\\n    * Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\n    * generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\n    * task deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\n    * the on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\n    * invalid.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    * @param _nonce Locally-computed nonce value for this deployment\\n    */\\n    function createDeploymentTaskRecord(\\n        bytes32 _inputsHash,\\n        uint64 _gasLimit,\\n        uint64 _gasPx,\\n        uint _firstBlockNumber,\\n        uint _nonce\\n    )\\n    public\\n    {\\n        TaskImpl.createDeploymentTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber, _nonce);\\n    }\\n\\n    /**\\n    * Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\n    * contract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\n    * the user\'s task deployment counter nonce.\\n    *\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n    * @param _gasLimit ENG gas limit\\n    * @param _gasPx ENG gas price in grains format (10 ** 8)\\n    * @param _firstBlockNumber Locally-computed first block number of epoch\\n    */\\n    function createTaskRecord(\\n        bytes32 _inputsHash,\\n        uint64 _gasLimit,\\n        uint64 _gasPx,\\n        uint _firstBlockNumber\\n    )\\n    public\\n    {\\n        TaskImpl.createTaskRecordImpl(state, _inputsHash, _gasLimit, _gasPx, _firstBlockNumber);\\n    }\\n\\n    /**\\n    * Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\n    * The task record is finalized and the worker is credited with the task fee.\\n    *\\n    * @param _scAddr Secret contract address\\n    * @param _taskId Unique taskId\\n    * @param _stateDeltaHash Input state delta hash\\n    * @param _outputHash Output state hash\\n    * @param _optionalEthereumData Output state hash\\n    * @param _optionalEthereumContractAddress Output state hash\\n    * @param _gasUsed Gas used for task computation\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitReceipt(\\n        bytes32 _scAddr,\\n        bytes32 _taskId,\\n        bytes32 _stateDeltaHash,\\n        bytes32 _outputHash,\\n        bytes memory _optionalEthereumData,\\n        address _optionalEthereumContractAddress,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    workerLoggedIn(msg.sender)\\n    contractDeployed(_scAddr)\\n    {\\n        TaskImpl.commitReceiptImpl(state, _scAddr, _taskId, _stateDeltaHash, _outputHash, _optionalEthereumData,\\n            _optionalEthereumContractAddress, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\n    * updated to indicate task failure.\\n    *\\n    * @param _scAddr Secret contract address\\n    * @param _taskId Unique taskId\\n    * @param _outputHash Output state hash\\n    * @param _gasUsed Gas used for task computation\\n    * @param _sig Worker\'s signature\\n    */\\n    function commitTaskFailure(\\n        bytes32 _scAddr,\\n        bytes32 _taskId,\\n        bytes32 _outputHash,\\n        uint64 _gasUsed,\\n        bytes memory _sig\\n    )\\n    public\\n    workerLoggedIn(msg.sender)\\n    contractDeployed(_scAddr)\\n    {\\n        TaskImpl.commitTaskFailureImpl(state, _scAddr, _taskId, _outputHash, _gasUsed, _sig);\\n    }\\n\\n    /**\\n    * Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    *\\n    * @param _taskId Unique taskId\\n    */\\n    function returnFeesForTask(bytes32 _taskId)\\n    public\\n    taskWaiting(_taskId)\\n    {\\n        TaskImpl.returnFeesForTaskImpl(state, _taskId);\\n    }\\n\\n    /**\\n    * Reparameterizing workers with a new seed\\n    * This should be called for each epoch by the Principal node\\n    *\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n    * @param _seed The random integer generated by the enclave\\n    * @param _sig Principal node\'s signature\\n    */\\n    function setWorkersParams(uint _blockNumber, uint _seed, bytes memory _sig)\\n    public\\n    workerRegistered(msg.sender)\\n    {\\n        PrincipalImpl.setWorkersParamsImpl(state, _blockNumber, _seed, _sig);\\n    }\\n\\n    /**\\n    * Get active workers before a certain block number\\n    *\\n    * @param _blockNumber Block number\\n    */\\n    function getActiveWorkers(uint _blockNumber)\\n    public\\n    view\\n    returns (address[] memory, uint[] memory)\\n    {\\n        return PrincipalImpl.getActiveWorkersImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get the first block number of an epoch that a given block number belongs to\\n    *\\n    * @param _blockNumber Block number\\n    * @return Block number\\n    */\\n    function getFirstBlockNumber(uint _blockNumber)\\n    public\\n    view\\n    returns (uint) {\\n        return WorkersImpl.getFirstBlockNumberImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Get worker params for an epoch given a particular block number\\n    *\\n    * @param _blockNumber Block number\\n    * @return Epoch\'s first block number\\n    * @return Seed\\n    * @return Array of worker\'s signing addresses\\n    * @return Array of worker\'s stakes\\n    */\\n    function getWorkerParams(uint _blockNumber)\\n    public\\n    view\\n    returns (uint, uint, address[] memory, uint[] memory) {\\n        return WorkersImpl.getWorkerParamsImpl(state, _blockNumber);\\n    }\\n\\n    /**\\n    * Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\n    * and the secret contract address.\\n    *\\n    * @param _blockNumber Block number the task record was mined\\n    * @param _scAddr Secret contract address\\n    * @return Selected workers\' addresses\\n    */\\n    function getWorkerGroup(uint _blockNumber, bytes32 _scAddr)\\n    public\\n    view\\n    returns (address[] memory)\\n    {\\n        return WorkersImpl.getWorkerGroupImpl(state, _blockNumber, _scAddr);\\n    }\\n\\n    /**\\n    * The RLP encoded report returned by the IAS server\\n    *\\n    * @param _custodian The worker\'s custodian address\\n    */\\n    function getReport(address _custodian)\\n    public\\n    view\\n    workerRegistered(_custodian)\\n    returns (address, bytes memory)\\n    {\\n        return WorkersImpl.getReportImpl(state, _custodian);\\n    }\\n\\n    /**\\n    * This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n    * @param _data The report itself\\n    * @param _signature The signature of the report\\n    */\\n    function verifyReport(bytes memory _data, bytes memory _signature)\\n    public\\n    view\\n    returns (uint)\\n    {\\n        return WorkersImpl.verifyReportImpl(_data, _signature);\\n    }\\n}\\n","sourcePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/Enigma.sol","ast":{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/Enigma.sol","exportedSymbols":{"Enigma":[809]},"id":810,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"24:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":810,"sourceUnit":11910,"src":"59:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":810,"sourceUnit":11782,"src":"119:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":5,"nodeType":"ImportDirective","scope":810,"sourceUnit":11701,"src":"184:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":7,"nodeType":"ImportDirective","scope":810,"sourceUnit":8874,"src":"220:53:0","symbolAliases":[{"foreign":6,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":9,"nodeType":"ImportDirective","scope":810,"sourceUnit":3038,"src":"274:57:0","symbolAliases":[{"foreign":8,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":11,"nodeType":"ImportDirective","scope":810,"sourceUnit":5765,"src":"332:47:0","symbolAliases":[{"foreign":10,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":13,"nodeType":"ImportDirective","scope":810,"sourceUnit":3676,"src":"380:67:0","symbolAliases":[{"foreign":12,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":15,"nodeType":"ImportDirective","scope":810,"sourceUnit":2186,"src":"448:55:0","symbolAliases":[{"foreign":14,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":17,"nodeType":"ImportDirective","scope":810,"sourceUnit":2331,"src":"504:53:0","symbolAliases":[{"foreign":16,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":19,"nodeType":"ImportDirective","scope":810,"sourceUnit":2284,"src":"558:55:0","symbolAliases":[{"foreign":18,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":21,"nodeType":"ImportDirective","scope":810,"sourceUnit":2339,"src":"614:57:0","symbolAliases":[{"foreign":20,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":23,"nodeType":"ImportDirective","scope":810,"sourceUnit":2513,"src":"672:45:0","symbolAliases":[{"foreign":22,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":25,"nodeType":"ImportDirective","scope":810,"sourceUnit":9859,"src":"718:47:0","symbolAliases":[{"foreign":24,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":26,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":2338,"src":"786:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$2338","typeString":"contract EnigmaStorage"}},"id":27,"nodeType":"InheritanceSpecifier","src":"786:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":28,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2283,"src":"801:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2283","typeString":"contract EnigmaEvents"}},"id":29,"nodeType":"InheritanceSpecifier","src":"801:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":30,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":2512,"src":"815:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$2512","typeString":"contract Getters"}},"id":31,"nodeType":"InheritanceSpecifier","src":"815:7:0"}],"contractDependencies":[2283,2338,2512],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":809,"linearizedBaseContracts":[809,2512,2283,2338],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":34,"libraryName":{"contractScope":null,"id":32,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":11909,"src":"835:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$11909","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"829:27:0","typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"848:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":37,"libraryName":{"contractScope":null,"id":35,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":11781,"src":"867:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$11781","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"861:24:0","typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"877:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":89,"nodeType":"Block","src":"1100:270:0","statements":[{"expression":{"argumentTypes":null,"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":48,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"1110:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":50,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2292,"src":"1110:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$9858","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":52,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"1133:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":51,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9858,"src":"1127:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$9858_$","typeString":"type(contract ERC20)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1127:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$9858","typeString":"contract ERC20"}},"src":"1110:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$9858","typeString":"contract ERC20"}},"id":55,"nodeType":"ExpressionStatement","src":"1110:37:0"},{"expression":{"argumentTypes":null,"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":56,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"1157:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":58,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2294,"src":"1157:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":59,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"1175:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1157:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":61,"nodeType":"ExpressionStatement","src":"1157:28:0"},{"expression":{"argumentTypes":null,"id":69,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":62,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"1195:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":64,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2296,"src":"1195:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":65,"name":"_timeoutThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"1219:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":66,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"1239:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":67,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2294,"src":"1239:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1219:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1195:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":70,"nodeType":"ExpressionStatement","src":"1195:59:0"},{"expression":{"argumentTypes":null,"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":71,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"1264:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":73,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2298,"src":"1264:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":74,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"1282:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1264:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":76,"nodeType":"ExpressionStatement","src":"1264:28:0"},{"expression":{"argumentTypes":null,"id":81,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":77,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"1302:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":79,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2326,"src":"1302:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1302:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":82,"nodeType":"ExpressionStatement","src":"1302:26:0"},{"expression":{"argumentTypes":null,"id":87,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":83,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"1338:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":85,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":2328,"src":"1338:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":86,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1338:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":88,"nodeType":"ExpressionStatement","src":"1338:25:0"}]},"documentation":null,"id":90,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":90,"src":"1009:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":41,"name":"_principal","nodeType":"VariableDeclaration","scope":90,"src":"1032:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40,"name":"address","nodeType":"ElementaryTypeName","src":"1032:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":43,"name":"_epochSize","nodeType":"VariableDeclaration","scope":90,"src":"1052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint","nodeType":"ElementaryTypeName","src":"1052:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":45,"name":"_timeoutThreshold","nodeType":"VariableDeclaration","scope":90,"src":"1069:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":44,"name":"uint","nodeType":"ElementaryTypeName","src":"1069:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1008:84:0"},"returnParameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"1100:0:0"},"scope":809,"src":"997:373:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":114,"nodeType":"Block","src":"1660:181:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"name":"worker","nodeType":"VariableDeclaration","scope":114,"src":"1670:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":96,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2092,"src":"1670:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":102,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":98,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"1706:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":99,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2312,"src":"1706:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2092_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":101,"indexExpression":{"argumentTypes":null,"id":100,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"1720:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1706:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1670:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":104,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"1744:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2084,"src":"1744:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":106,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"1761:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2185_$","typeString":"type(library EnigmaCommon)"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2133,"src":"1761:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2133_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1761:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"1744:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1801:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":103,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"1736:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1736:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":112,"nodeType":"ExpressionStatement","src":"1736:87:0"},{"id":113,"nodeType":"PlaceholderStatement","src":"1833:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":115,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"name":"_user","nodeType":"VariableDeclaration","scope":115,"src":"1645:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"1645:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1644:15:0"},"src":"1619:222:0","visibility":"internal"},{"body":{"id":139,"nodeType":"Block","src":"2024:178:0","statements":[{"assignments":[122],"declarations":[{"constant":false,"id":122,"name":"worker","nodeType":"VariableDeclaration","scope":139,"src":"2034:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":121,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2092,"src":"2034:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":127,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":123,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"2070:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":124,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2312,"src":"2070:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2092_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":126,"indexExpression":{"argumentTypes":null,"id":125,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2084:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2070:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2034:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"},"id":134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":129,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2108:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":130,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2084,"src":"2108:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":131,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"2125:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2185_$","typeString":"type(library EnigmaCommon)"}},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2133,"src":"2125:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2133_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2125:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2108:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":128,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"2100:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2100:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":137,"nodeType":"ExpressionStatement","src":"2100:84:0"},{"id":138,"nodeType":"PlaceholderStatement","src":"2194:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    * @param _user The custodian address of the worker","id":140,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"name":"_user","nodeType":"VariableDeclaration","scope":140,"src":"2009:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":116,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2008:15:0"},"src":"1985:217:0","visibility":"internal"},{"body":{"id":164,"nodeType":"Block","src":"2387:180:0","statements":[{"assignments":[147],"declarations":[{"constant":false,"id":147,"name":"worker","nodeType":"VariableDeclaration","scope":164,"src":"2397:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":146,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2092,"src":"2397:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":152,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":148,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"2433:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2312,"src":"2433:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2092_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":151,"indexExpression":{"argumentTypes":null,"id":150,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"2447:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2433:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2397:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":154,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"2471:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":155,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2084,"src":"2471:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":156,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"2488:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2185_$","typeString":"type(library EnigmaCommon)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2133,"src":"2488:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2133_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2488:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2471:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f67676564206f7574","id":160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2525:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""},"value":"Worker not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""}],"id":153,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"2463:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2463:86:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"2463:86:0"},{"id":163,"nodeType":"PlaceholderStatement","src":"2559:1:0"}]},"documentation":"Checks if the custodian wallet is logged out as a worker\\n    * @param _user The custodian address of the worker","id":165,"name":"workerLoggedOut","nodeType":"ModifierDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"name":"_user","nodeType":"VariableDeclaration","scope":165,"src":"2372:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"2372:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2371:15:0"},"src":"2347:220:0","visibility":"internal"},{"body":{"id":208,"nodeType":"Block","src":"2716:395:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"name":"worker","nodeType":"VariableDeclaration","scope":208,"src":"2726:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":171,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2092,"src":"2726:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":177,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":173,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"2762:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2312,"src":"2762:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2092_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":176,"indexExpression":{"argumentTypes":null,"id":175,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2776:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2762:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2726:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":180,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12473,"src":"2820:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2820:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":179,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"2800:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2800:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2800:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":178,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"2792:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2792:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":187,"nodeType":"ExpressionStatement","src":"2792:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":189,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"2900:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":190,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2084,"src":"2900:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":191,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"2917:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2185_$","typeString":"type(library EnigmaCommon)"}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2133,"src":"2917:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2133_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2917:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2900:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2954:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":188,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"2892:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2892:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":197,"nodeType":"ExpressionStatement","src":"2892:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":199,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3014:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":200,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2088,"src":"3014:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":201,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"3032:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2326,"src":"3032:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3014:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3056:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":198,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"3006:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3006:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":206,"nodeType":"ExpressionStatement","src":"3006:87:0"},{"id":207,"nodeType":"PlaceholderStatement","src":"3103:1:0"}]},"documentation":"Checks if worker can log in\\n    * @param _user The custodian address of the worker","id":209,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"name":"_user","nodeType":"VariableDeclaration","scope":209,"src":"2701:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2700:15:0"},"src":"2683:428:0","visibility":"internal"},{"body":{"id":265,"nodeType":"Block","src":"3269:580:0","statements":[{"assignments":[216],"declarations":[{"constant":false,"id":216,"name":"worker","nodeType":"VariableDeclaration","scope":265,"src":"3279:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":215,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2092,"src":"3279:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":221,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":217,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"3315:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2312,"src":"3315:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2092_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":220,"indexExpression":{"argumentTypes":null,"id":219,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3329:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3315:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3279:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":223,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"3353:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2084,"src":"3353:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":225,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"3370:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2185_$","typeString":"type(library EnigmaCommon)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2133,"src":"3370:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2133_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3370:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3353:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3407:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":222,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"3345:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3345:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":231,"nodeType":"ExpressionStatement","src":"3345:104:0"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"name":"workerLog","nodeType":"VariableDeclaration","scope":265,"src":"3459:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2110_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":234,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2110,"src":"3459:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2110_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":242,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":238,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"3536:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":239,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12473,"src":"3544:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3544:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":236,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"3501:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$8873_$","typeString":"type(library WorkersImpl)"}},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":8872,"src":"3501:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2092_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2110_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3501:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2110_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"3459:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2141","typeString":"enum EnigmaCommon.WorkerLogType"},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":244,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"3575:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2110_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2105,"src":"3575:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2141","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":246,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"3604:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2185_$","typeString":"type(library EnigmaCommon)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2141,"src":"3604:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2141_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3604:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2141","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"3575:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3651:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":243,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"3567:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3567:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":252,"nodeType":"ExpressionStatement","src":"3567:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":255,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12473,"src":"3731:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3731:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":254,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"3711:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3711:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":258,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"3747:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2110_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2107,"src":"3747:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3711:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3782:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":253,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"3703:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3703:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":263,"nodeType":"ExpressionStatement","src":"3703:128:0"},{"id":264,"nodeType":"PlaceholderStatement","src":"3841:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    * @param _user The custodian address of the worker","id":266,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"name":"_user","nodeType":"VariableDeclaration","scope":266,"src":"3254:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"3254:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3253:15:0"},"src":"3233:616:0","visibility":"internal"},{"body":{"id":284,"nodeType":"Block","src":"4016:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2136","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":271,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"4034:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"4034:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2122_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":274,"indexExpression":{"argumentTypes":null,"id":273,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"4050:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4034:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2122_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"4034:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2136","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":276,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"4069:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2185_$","typeString":"type(library EnigmaCommon)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2136,"src":"4069:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2136_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4069:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2136","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4034:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4114:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":270,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"4026:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4026:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":282,"nodeType":"ExpressionStatement","src":"4026:123:0"},{"id":283,"nodeType":"PlaceholderStatement","src":"4159:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":285,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"name":"_scAddr","nodeType":"VariableDeclaration","scope":285,"src":"3999:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":267,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3999:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"3998:17:0"},"src":"3972:195:0","visibility":"internal"},{"body":{"id":303,"nodeType":"Block","src":"4329:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2136","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":290,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"4347:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"4347:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2122_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":293,"indexExpression":{"argumentTypes":null,"id":292,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"4363:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4347:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2122_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"4347:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2136","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":295,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"4382:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2185_$","typeString":"type(library EnigmaCommon)"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2136,"src":"4382:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2136_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4382:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2136","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4347:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4426:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":289,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"4339:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4339:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":301,"nodeType":"ExpressionStatement","src":"4339:118:0"},{"id":302,"nodeType":"PlaceholderStatement","src":"4467:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":304,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"name":"_scAddr","nodeType":"VariableDeclaration","scope":304,"src":"4312:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4312:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4311:17:0"},"src":"4286:189:0","visibility":"internal"},{"body":{"id":322,"nodeType":"Block","src":"4640:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2129","typeString":"enum EnigmaCommon.TaskStatus"},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":309,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"4658:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":2316,"src":"4658:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2080_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":312,"indexExpression":{"argumentTypes":null,"id":311,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"4670:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4658:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2080_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2077,"src":"4658:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2129","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":314,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"4689:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2185_$","typeString":"type(library EnigmaCommon)"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2129,"src":"4689:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2129_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4689:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2129","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"4658:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4728:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":308,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"4650:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4650:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":320,"nodeType":"ExpressionStatement","src":"4650:100:0"},{"id":321,"nodeType":"PlaceholderStatement","src":"4760:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":323,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"name":"_taskId","nodeType":"VariableDeclaration","scope":323,"src":"4623:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":305,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4623:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4622:17:0"},"src":"4602:166:0","visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"4930:202:0","statements":[{"body":{"id":353,"nodeType":"Block","src":"4996:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":340,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"5018:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2312,"src":"5018:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2092_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":346,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":342,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"5032:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2305,"src":"5032:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":345,"indexExpression":{"argumentTypes":null,"id":344,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"5054:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5032:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5018:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":347,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2082,"src":"5018:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":348,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"5068:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5018:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5077:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":339,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"5010:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5010:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":352,"nodeType":"ExpressionStatement","src":"5010:94:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"4957:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":332,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"4961:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2305,"src":"4961:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4961:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4957:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":354,"initializationExpression":{"assignments":[328],"declarations":[{"constant":false,"id":328,"name":"i","nodeType":"VariableDeclaration","scope":354,"src":"4945:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint","nodeType":"ElementaryTypeName","src":"4945:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":330,"initialValue":{"argumentTypes":null,"hexValue":"30","id":329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4954:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4945:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4991:3:0","subExpression":{"argumentTypes":null,"id":336,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"4991:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":338,"nodeType":"ExpressionStatement","src":"4991:3:0"},"nodeType":"ForStatement","src":"4940:175:0"},{"id":355,"nodeType":"PlaceholderStatement","src":"5124:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":357,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"name":"_signer","nodeType":"VariableDeclaration","scope":357,"src":"4913:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"4913:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4912:17:0"},"src":"4885:247:0","visibility":"internal"},{"body":{"id":378,"nodeType":"Block","src":"5753:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":372,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"5788:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":373,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"5795:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":374,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"5804:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":375,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"5813:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":369,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"5763:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$8873_$","typeString":"type(library WorkersImpl)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":8140,"src":"5763:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory,bytes memory)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5763:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":377,"nodeType":"ExpressionStatement","src":"5763:61:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":379,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":366,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"5740:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":367,"modifierName":{"argumentTypes":null,"id":365,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"5721:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"5721:27:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"name":"_signer","nodeType":"VariableDeclaration","scope":379,"src":"5642:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"5642:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":361,"name":"_report","nodeType":"VariableDeclaration","scope":379,"src":"5659:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":360,"name":"bytes","nodeType":"ElementaryTypeName","src":"5659:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":363,"name":"_signature","nodeType":"VariableDeclaration","scope":379,"src":"5681:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":362,"name":"bytes","nodeType":"ElementaryTypeName","src":"5681:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"5641:64:0"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"5753:0:0"},"scope":809,"src":"5624:207:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":397,"nodeType":"Block","src":"6175:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":392,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"6209:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":393,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"6216:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":394,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"6228:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":389,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"6185:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$8873_$","typeString":"type(library WorkersImpl)"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":8346,"src":"6185:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6185:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":396,"nodeType":"ExpressionStatement","src":"6185:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":398,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":386,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"6159:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":387,"modifierName":{"argumentTypes":null,"id":385,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"6142:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6142:28:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"name":"_custodian","nodeType":"VariableDeclaration","scope":398,"src":"6093:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":380,"name":"address","nodeType":"ElementaryTypeName","src":"6093:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":383,"name":"_amount","nodeType":"VariableDeclaration","scope":398,"src":"6113:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":382,"name":"uint","nodeType":"ElementaryTypeName","src":"6113:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6092:34:0"},"returnParameters":{"id":388,"nodeType":"ParameterList","parameters":[],"src":"6175:0:0"},"scope":809,"src":"6076:167:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":414,"nodeType":"Block","src":"6516:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":410,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"6551:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":411,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"6558:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":407,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"6526:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$8873_$","typeString":"type(library WorkersImpl)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"6526:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6526:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":413,"nodeType":"ExpressionStatement","src":"6526:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":415,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":403,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12483,"src":"6500:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6500:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":405,"modifierName":{"argumentTypes":null,"id":402,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"6488:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6488:23:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"name":"_amount","nodeType":"VariableDeclaration","scope":415,"src":"6459:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint","nodeType":"ElementaryTypeName","src":"6459:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6458:14:0"},"returnParameters":{"id":406,"nodeType":"ParameterList","parameters":[],"src":"6516:0:0"},"scope":809,"src":"6441:132:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":428,"nodeType":"Block","src":"6781:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":425,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"6813:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":422,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"6791:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$8873_$","typeString":"type(library WorkersImpl)"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":8244,"src":"6791:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6791:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"6791:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":429,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":418,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12483,"src":"6769:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6769:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":420,"modifierName":{"argumentTypes":null,"id":417,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"6760:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6760:20:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[],"src":"6750:2:0"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[],"src":"6781:0:0"},"scope":809,"src":"6736:90:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":442,"nodeType":"Block","src":"6955:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":439,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"6988:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":436,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"6965:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$8873_$","typeString":"type(library WorkersImpl)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":8285,"src":"6965:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6965:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":441,"nodeType":"ExpressionStatement","src":"6965:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":443,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":432,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12483,"src":"6943:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6943:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":434,"modifierName":{"argumentTypes":null,"id":431,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"6928:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6928:26:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[],"src":"6918:2:0"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[],"src":"6955:0:0"},"scope":809,"src":"6903:98:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":471,"nodeType":"Block","src":"7533:100:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":464,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"7584:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":465,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"7591:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":466,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7600:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":467,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"7611:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":468,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"7621:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":461,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"7543:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5764_$","typeString":"type(library TaskImpl)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4110,"src":"7543:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,uint64,bytes memory)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7543:83:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":470,"nodeType":"ExpressionStatement","src":"7543:83:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _codeHash Deployed bytecode hash\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":472,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":454,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12483,"src":"7486:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7486:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":456,"modifierName":{"argumentTypes":null,"id":453,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"7471:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7471:26:0"},{"arguments":[{"argumentTypes":null,"id":458,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"7520:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":459,"modifierName":{"argumentTypes":null,"id":457,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"7502:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"7502:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"name":"_taskId","nodeType":"VariableDeclaration","scope":472,"src":"7355:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":444,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7355:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":447,"name":"_codeHash","nodeType":"VariableDeclaration","scope":472,"src":"7380:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":446,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7380:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":449,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":472,"src":"7407:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":448,"name":"uint64","nodeType":"ElementaryTypeName","src":"7407:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":451,"name":"_sig","nodeType":"VariableDeclaration","scope":472,"src":"7432:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":450,"name":"bytes","nodeType":"ElementaryTypeName","src":"7432:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"7345:110:0"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"7533:0:0"},"scope":809,"src":"7309:324:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":512,"nodeType":"Block","src":"8686:197:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":501,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"8730:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":502,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"8737:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":503,"name":"_preCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"8746:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":504,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"8760:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":505,"name":"_initStateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"8771:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":506,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"8804:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":507,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"8827:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":508,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"8861:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":509,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"8871:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":498,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"8696:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5764_$","typeString":"type(library TaskImpl)"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":4497,"src":"8696:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8696:180:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"ExpressionStatement","src":"8696:180:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _preCodeHash Predeployed bytecode hash\\n@param _codeHash Deployed bytecode hash\\n@param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":513,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":491,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12483,"src":"8639:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8639:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":493,"modifierName":{"argumentTypes":null,"id":490,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"8624:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8624:26:0"},{"arguments":[{"argumentTypes":null,"id":495,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"8673:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":496,"modifierName":{"argumentTypes":null,"id":494,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"8655:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"8655:26:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"name":"_taskId","nodeType":"VariableDeclaration","scope":513,"src":"8347:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":473,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8347:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":476,"name":"_preCodeHash","nodeType":"VariableDeclaration","scope":513,"src":"8372:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8372:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":478,"name":"_codeHash","nodeType":"VariableDeclaration","scope":513,"src":"8402:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8402:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":480,"name":"_initStateDeltaHash","nodeType":"VariableDeclaration","scope":513,"src":"8429:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":482,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":513,"src":"8466:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":481,"name":"bytes","nodeType":"ElementaryTypeName","src":"8466:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":484,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":513,"src":"8510:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":483,"name":"address","nodeType":"ElementaryTypeName","src":"8510:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":486,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":513,"src":"8560:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":485,"name":"uint64","nodeType":"ElementaryTypeName","src":"8560:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":488,"name":"_sig","nodeType":"VariableDeclaration","scope":513,"src":"8585:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":487,"name":"bytes","nodeType":"ElementaryTypeName","src":"8585:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8337:271:0"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"8686:0:0"},"scope":809,"src":"8308:575:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":523,"nodeType":"Block","src":"9085:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":520,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"9146:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":518,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"9102:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3675_$","typeString":"type(library SecretContractImpl)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":3607,"src":"9102:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2329_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9102:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":517,"id":522,"nodeType":"Return","src":"9095:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":524,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"9039:2:0"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"name":"","nodeType":"VariableDeclaration","scope":524,"src":"9075:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint","nodeType":"ElementaryTypeName","src":"9075:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9074:6:0"},"scope":809,"src":"9010:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":541,"nodeType":"Block","src":"9488:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":536,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"9555:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":537,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"9562:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":538,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"9570:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":534,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"9505:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3675_$","typeString":"type(library SecretContractImpl)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":3674,"src":"9505:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2329_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9505:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":533,"id":540,"nodeType":"Return","src":"9498:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":542,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"name":"_start","nodeType":"VariableDeclaration","scope":542,"src":"9408:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":525,"name":"uint","nodeType":"ElementaryTypeName","src":"9408:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":528,"name":"_stop","nodeType":"VariableDeclaration","scope":542,"src":"9421:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":527,"name":"uint","nodeType":"ElementaryTypeName","src":"9421:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9407:25:0"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"name":"","nodeType":"VariableDeclaration","scope":542,"src":"9466:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9466:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":531,"length":null,"nodeType":"ArrayTypeName","src":"9466:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"9465:18:0"},"scope":809,"src":"9372:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":566,"nodeType":"Block","src":"10624:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":558,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"10674:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":559,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"10681:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":560,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"10694:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":561,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"10705:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":562,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"10713:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":563,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"10732:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":555,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"10634:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5764_$","typeString":"type(library TaskImpl)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"10634:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256,uint256)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10634:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":565,"nodeType":"ExpressionStatement","src":"10634:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":567,"implemented":true,"kind":"function","modifiers":[],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":567,"src":"10481:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10481:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":546,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":567,"src":"10510:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":545,"name":"uint64","nodeType":"ElementaryTypeName","src":"10510:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":548,"name":"_gasPx","nodeType":"VariableDeclaration","scope":567,"src":"10536:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":547,"name":"uint64","nodeType":"ElementaryTypeName","src":"10536:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":550,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":567,"src":"10559:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":549,"name":"uint","nodeType":"ElementaryTypeName","src":"10559:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":552,"name":"_nonce","nodeType":"VariableDeclaration","scope":567,"src":"10591:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":551,"name":"uint","nodeType":"ElementaryTypeName","src":"10591:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10471:137:0"},"returnParameters":{"id":554,"nodeType":"ParameterList","parameters":[],"src":"10624:0:0"},"scope":809,"src":"10436:310:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":588,"nodeType":"Block","src":"11478:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":581,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"11518:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":582,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"11525:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":583,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"11538:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":584,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"11549:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":585,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"11557:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":578,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"11488:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5764_$","typeString":"type(library TaskImpl)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4732,"src":"11488:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11488:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":587,"nodeType":"ExpressionStatement","src":"11488:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":589,"implemented":true,"kind":"function","modifiers":[],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":569,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":589,"src":"11356:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11356:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":571,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":589,"src":"11385:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":570,"name":"uint64","nodeType":"ElementaryTypeName","src":"11385:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":573,"name":"_gasPx","nodeType":"VariableDeclaration","scope":589,"src":"11411:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":572,"name":"uint64","nodeType":"ElementaryTypeName","src":"11411:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":575,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":589,"src":"11434:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":574,"name":"uint","nodeType":"ElementaryTypeName","src":"11434:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11346:116:0"},"returnParameters":{"id":577,"nodeType":"ParameterList","parameters":[],"src":"11478:0:0"},"scope":809,"src":"11321:261:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":629,"nodeType":"Block","src":"12549:183:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":618,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"12586:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":619,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"12593:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":620,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"12602:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":621,"name":"_stateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"12611:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":622,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"12628:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":623,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"12641:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":624,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"12676:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":625,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"12710:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":626,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"12720:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":615,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"12559:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5764_$","typeString":"type(library TaskImpl)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":5404,"src":"12559:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12559:166:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":628,"nodeType":"ExpressionStatement","src":"12559:166:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _stateDeltaHash Input state delta hash\\n@param _outputHash Output state hash\\n@param _optionalEthereumData Output state hash\\n@param _optionalEthereumContractAddress Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":630,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":608,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12483,"src":"12503:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"12503:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":610,"modifierName":{"argumentTypes":null,"id":607,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"12488:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"12488:26:0"},{"arguments":[{"argumentTypes":null,"id":612,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"12536:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":613,"modifierName":{"argumentTypes":null,"id":611,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"12519:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"12519:25:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"name":"_scAddr","nodeType":"VariableDeclaration","scope":630,"src":"12218:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12218:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":593,"name":"_taskId","nodeType":"VariableDeclaration","scope":630,"src":"12243:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":592,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12243:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":595,"name":"_stateDeltaHash","nodeType":"VariableDeclaration","scope":630,"src":"12268:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":594,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12268:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":597,"name":"_outputHash","nodeType":"VariableDeclaration","scope":630,"src":"12301:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12301:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":599,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":630,"src":"12330:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":598,"name":"bytes","nodeType":"ElementaryTypeName","src":"12330:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":601,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":630,"src":"12374:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"12374:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":603,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":630,"src":"12424:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":602,"name":"uint64","nodeType":"ElementaryTypeName","src":"12424:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":605,"name":"_sig","nodeType":"VariableDeclaration","scope":630,"src":"12449:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":604,"name":"bytes","nodeType":"ElementaryTypeName","src":"12449:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"12208:264:0"},"returnParameters":{"id":614,"nodeType":"ParameterList","parameters":[],"src":"12549:0:0"},"scope":809,"src":"12186:546:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":661,"nodeType":"Block","src":"13363:101:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":653,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"13404:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":654,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"13411:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":655,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"13420:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":656,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"13429:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":657,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"13442:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":658,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"13452:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":650,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"13373:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5764_$","typeString":"type(library TaskImpl)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4926,"src":"13373:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,uint64,bytes memory)"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13373:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":660,"nodeType":"ExpressionStatement","src":"13373:84:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _outputHash Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":662,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":643,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12483,"src":"13317:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13317:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":645,"modifierName":{"argumentTypes":null,"id":642,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"13302:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13302:26:0"},{"arguments":[{"argumentTypes":null,"id":647,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"13350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":648,"modifierName":{"argumentTypes":null,"id":646,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"13333:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13333:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"name":"_scAddr","nodeType":"VariableDeclaration","scope":662,"src":"13159:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":631,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13159:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":634,"name":"_taskId","nodeType":"VariableDeclaration","scope":662,"src":"13184:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13184:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":636,"name":"_outputHash","nodeType":"VariableDeclaration","scope":662,"src":"13209:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":635,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13209:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":638,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":662,"src":"13238:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":637,"name":"uint64","nodeType":"ElementaryTypeName","src":"13238:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":640,"name":"_sig","nodeType":"VariableDeclaration","scope":662,"src":"13263:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":639,"name":"bytes","nodeType":"ElementaryTypeName","src":"13263:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13149:137:0"},"returnParameters":{"id":649,"nodeType":"ParameterList","parameters":[],"src":"13363:0:0"},"scope":809,"src":"13123:341:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":677,"nodeType":"Block","src":"13715:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":673,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"13756:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":674,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"13763:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":670,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"13725:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5764_$","typeString":"type(library TaskImpl)"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":5763,"src":"13725:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13725:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":676,"nodeType":"ExpressionStatement","src":"13725:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":678,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":667,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"13702:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":668,"modifierName":{"argumentTypes":null,"id":666,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"13690:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13690:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"name":"_taskId","nodeType":"VariableDeclaration","scope":678,"src":"13658:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13658:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"13657:17:0"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[],"src":"13715:0:0"},"scope":809,"src":"13631:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":700,"nodeType":"Block","src":"14238:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":694,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"14283:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":695,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"14290:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":696,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"14304:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":697,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"14311:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":691,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"14248:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3037_$","typeString":"type(library PrincipalImpl)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":2866,"src":"14248:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14248:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":699,"nodeType":"ExpressionStatement","src":"14248:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":701,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":687,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12483,"src":"14222:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14222:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":689,"modifierName":{"argumentTypes":null,"id":686,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"14205:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14205:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":701,"src":"14140:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":679,"name":"uint","nodeType":"ElementaryTypeName","src":"14140:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":682,"name":"_seed","nodeType":"VariableDeclaration","scope":701,"src":"14159:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint","nodeType":"ElementaryTypeName","src":"14159:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":684,"name":"_sig","nodeType":"VariableDeclaration","scope":701,"src":"14171:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":683,"name":"bytes","nodeType":"ElementaryTypeName","src":"14171:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14139:50:0"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"14238:0:0"},"scope":809,"src":"14114:209:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":718,"nodeType":"Block","src":"14559:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":714,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"14611:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":715,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"14618:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":712,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"14576:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3037_$","typeString":"type(library PrincipalImpl)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3036,"src":"14576:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2329_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14576:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":711,"id":717,"nodeType":"Return","src":"14569:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":719,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":719,"src":"14470:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":702,"name":"uint","nodeType":"ElementaryTypeName","src":"14470:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"14469:19:0"},"returnParameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"name":"","nodeType":"VariableDeclaration","scope":719,"src":"14522:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"14522:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":706,"length":null,"nodeType":"ArrayTypeName","src":"14522:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":710,"name":"","nodeType":"VariableDeclaration","scope":719,"src":"14540:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":708,"name":"uint","nodeType":"ElementaryTypeName","src":"14540:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":709,"length":null,"nodeType":"ArrayTypeName","src":"14540:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"14521:33:0"},"scope":809,"src":"14444:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":732,"nodeType":"Block","src":"14900:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":728,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"14953:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":729,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"14960:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":726,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"14917:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$8873_$","typeString":"type(library WorkersImpl)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":8519,"src":"14917:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2329_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14917:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":725,"id":731,"nodeType":"Return","src":"14910:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":733,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":721,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":733,"src":"14842:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":720,"name":"uint","nodeType":"ElementaryTypeName","src":"14842:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"14841:19:0"},"returnParameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"name":"","nodeType":"VariableDeclaration","scope":733,"src":"14894:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint","nodeType":"ElementaryTypeName","src":"14894:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"14893:6:0"},"scope":809,"src":"14813:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":754,"nodeType":"Block","src":"15386:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":750,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"15435:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":751,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"15442:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":748,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"15403:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$8873_$","typeString":"type(library WorkersImpl)"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":8556,"src":"15403:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2329_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15403:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":747,"id":753,"nodeType":"Return","src":"15396:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":755,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":755,"src":"15289:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":734,"name":"uint","nodeType":"ElementaryTypeName","src":"15289:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15288:19:0"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"name":"","nodeType":"VariableDeclaration","scope":755,"src":"15341:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint","nodeType":"ElementaryTypeName","src":"15341:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":740,"name":"","nodeType":"VariableDeclaration","scope":755,"src":"15347:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":739,"name":"uint","nodeType":"ElementaryTypeName","src":"15347:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":743,"name":"","nodeType":"VariableDeclaration","scope":755,"src":"15353:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"15353:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":742,"length":null,"nodeType":"ArrayTypeName","src":"15353:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":746,"name":"","nodeType":"VariableDeclaration","scope":755,"src":"15371:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":744,"name":"uint","nodeType":"ElementaryTypeName","src":"15371:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":745,"length":null,"nodeType":"ArrayTypeName","src":"15371:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"15340:45:0"},"scope":809,"src":"15264:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":772,"nodeType":"Block","src":"15914:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":767,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"15962:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":768,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"15969:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":769,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"15983:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":765,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"15931:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$8873_$","typeString":"type(library WorkersImpl)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":8820,"src":"15931:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2329_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15931:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":764,"id":771,"nodeType":"Return","src":"15924:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":773,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":773,"src":"15823:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint","nodeType":"ElementaryTypeName","src":"15823:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":759,"name":"_scAddr","nodeType":"VariableDeclaration","scope":773,"src":"15842:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15842:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"15822:36:0"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"name":"","nodeType":"VariableDeclaration","scope":773,"src":"15892:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"15892:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":762,"length":null,"nodeType":"ArrayTypeName","src":"15892:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"15891:18:0"},"scope":809,"src":"15799:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":791,"nodeType":"Block","src":"16268:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":787,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"16311:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":788,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"16318:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":785,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"16285:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$8873_$","typeString":"type(library WorkersImpl)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":8177,"src":"16285:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2329_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16285:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":784,"id":790,"nodeType":"Return","src":"16278:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":792,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":778,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"16216:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":779,"modifierName":{"argumentTypes":null,"id":777,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"16199:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"16199:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"name":"_custodian","nodeType":"VariableDeclaration","scope":792,"src":"16155:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"16155:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"16154:20:0"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"name":"","nodeType":"VariableDeclaration","scope":792,"src":"16241:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":780,"name":"address","nodeType":"ElementaryTypeName","src":"16241:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":783,"name":"","nodeType":"VariableDeclaration","scope":792,"src":"16250:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":782,"name":"bytes","nodeType":"ElementaryTypeName","src":"16250:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"16240:23:0"},"scope":809,"src":"16136:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":807,"nodeType":"Block","src":"16651:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":803,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"16697:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":804,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"16704:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":801,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"16668:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$8873_$","typeString":"type(library WorkersImpl)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":8203,"src":"16668:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16668:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":800,"id":806,"nodeType":"Return","src":"16661:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":808,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"name":"_data","nodeType":"VariableDeclaration","scope":808,"src":"16563:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":793,"name":"bytes","nodeType":"ElementaryTypeName","src":"16563:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":796,"name":"_signature","nodeType":"VariableDeclaration","scope":808,"src":"16583:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":795,"name":"bytes","nodeType":"ElementaryTypeName","src":"16583:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"16562:45:0"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"name":"","nodeType":"VariableDeclaration","scope":808,"src":"16641:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":798,"name":"uint","nodeType":"ElementaryTypeName","src":"16641:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16640:6:0"},"scope":809,"src":"16541:181:0","stateMutability":"view","superFunction":null,"visibility":"public"}],"scope":810,"src":"767:15957:0"}],"src":"0:16725:0"},"legacyAST":{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/Enigma.sol","exportedSymbols":{"Enigma":[809]},"id":810,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"24:33:0"},{"absolutePath":"openzeppelin-solidity/contracts/math/SafeMath.sol","file":"openzeppelin-solidity/contracts/math/SafeMath.sol","id":3,"nodeType":"ImportDirective","scope":810,"sourceUnit":11910,"src":"59:59:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","file":"openzeppelin-solidity/contracts/cryptography/ECDSA.sol","id":4,"nodeType":"ImportDirective","scope":810,"sourceUnit":11782,"src":"119:64:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/utils/SolRsaVerify.sol","file":"./utils/SolRsaVerify.sol","id":5,"nodeType":"ImportDirective","scope":810,"sourceUnit":11701,"src":"184:34:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/WorkersImpl.sol","file":"./impl/WorkersImpl.sol","id":7,"nodeType":"ImportDirective","scope":810,"sourceUnit":8874,"src":"220:53:0","symbolAliases":[{"foreign":6,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/PrincipalImpl.sol","file":"./impl/PrincipalImpl.sol","id":9,"nodeType":"ImportDirective","scope":810,"sourceUnit":3038,"src":"274:57:0","symbolAliases":[{"foreign":8,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/TaskImpl.sol","file":"./impl/TaskImpl.sol","id":11,"nodeType":"ImportDirective","scope":810,"sourceUnit":5765,"src":"332:47:0","symbolAliases":[{"foreign":10,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/SecretContractImpl.sol","file":"./impl/SecretContractImpl.sol","id":13,"nodeType":"ImportDirective","scope":810,"sourceUnit":3676,"src":"380:67:0","symbolAliases":[{"foreign":12,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaCommon.sol","file":"./impl/EnigmaCommon.sol","id":15,"nodeType":"ImportDirective","scope":810,"sourceUnit":2186,"src":"448:55:0","symbolAliases":[{"foreign":14,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaState.sol","file":"./impl/EnigmaState.sol","id":17,"nodeType":"ImportDirective","scope":810,"sourceUnit":2331,"src":"504:53:0","symbolAliases":[{"foreign":16,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaEvents.sol","file":"./impl/EnigmaEvents.sol","id":19,"nodeType":"ImportDirective","scope":810,"sourceUnit":2284,"src":"558:55:0","symbolAliases":[{"foreign":18,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/EnigmaStorage.sol","file":"./impl/EnigmaStorage.sol","id":21,"nodeType":"ImportDirective","scope":810,"sourceUnit":2339,"src":"614:57:0","symbolAliases":[{"foreign":20,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/impl/Getters.sol","file":"./impl/Getters.sol","id":23,"nodeType":"ImportDirective","scope":810,"sourceUnit":2513,"src":"672:45:0","symbolAliases":[{"foreign":22,"local":null}],"unitAlias":""},{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/interfaces/ERC20.sol","file":"./interfaces/ERC20.sol","id":25,"nodeType":"ImportDirective","scope":810,"sourceUnit":9859,"src":"718:47:0","symbolAliases":[{"foreign":24,"local":null}],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":26,"name":"EnigmaStorage","nodeType":"UserDefinedTypeName","referencedDeclaration":2338,"src":"786:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaStorage_$2338","typeString":"contract EnigmaStorage"}},"id":27,"nodeType":"InheritanceSpecifier","src":"786:13:0"},{"arguments":null,"baseName":{"contractScope":null,"id":28,"name":"EnigmaEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":2283,"src":"801:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_EnigmaEvents_$2283","typeString":"contract EnigmaEvents"}},"id":29,"nodeType":"InheritanceSpecifier","src":"801:12:0"},{"arguments":null,"baseName":{"contractScope":null,"id":30,"name":"Getters","nodeType":"UserDefinedTypeName","referencedDeclaration":2512,"src":"815:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Getters_$2512","typeString":"contract Getters"}},"id":31,"nodeType":"InheritanceSpecifier","src":"815:7:0"}],"contractDependencies":[2283,2338,2512],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":809,"linearizedBaseContracts":[809,2512,2283,2338],"name":"Enigma","nodeType":"ContractDefinition","nodes":[{"id":34,"libraryName":{"contractScope":null,"id":32,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":11909,"src":"835:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$11909","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"829:27:0","typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"848:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":37,"libraryName":{"contractScope":null,"id":35,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":11781,"src":"867:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$11781","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"861:24:0","typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"877:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":89,"nodeType":"Block","src":"1100:270:0","statements":[{"expression":{"argumentTypes":null,"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":48,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"1110:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":50,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"engToken","nodeType":"MemberAccess","referencedDeclaration":2292,"src":"1110:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$9858","typeString":"contract ERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":52,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"1133:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":51,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9858,"src":"1127:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$9858_$","typeString":"type(contract ERC20)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1127:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$9858","typeString":"contract ERC20"}},"src":"1110:37:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$9858","typeString":"contract ERC20"}},"id":55,"nodeType":"ExpressionStatement","src":"1110:37:0"},{"expression":{"argumentTypes":null,"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":56,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"1157:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":58,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2294,"src":"1157:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":59,"name":"_epochSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"1175:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1157:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":61,"nodeType":"ExpressionStatement","src":"1157:28:0"},{"expression":{"argumentTypes":null,"id":69,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":62,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"1195:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":64,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"taskTimeoutSize","nodeType":"MemberAccess","referencedDeclaration":2296,"src":"1195:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":65,"name":"_timeoutThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"1219:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":66,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"1239:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":67,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"epochSize","nodeType":"MemberAccess","referencedDeclaration":2294,"src":"1239:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1219:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1195:59:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":70,"nodeType":"ExpressionStatement","src":"1195:59:0"},{"expression":{"argumentTypes":null,"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":71,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"1264:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":73,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"principal","nodeType":"MemberAccess","referencedDeclaration":2298,"src":"1264:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":74,"name":"_principal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"1282:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1264:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":76,"nodeType":"ExpressionStatement","src":"1264:28:0"},{"expression":{"argumentTypes":null,"id":81,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":77,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"1302:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":79,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2326,"src":"1302:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1302:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":82,"nodeType":"ExpressionStatement","src":"1302:26:0"},{"expression":{"argumentTypes":null,"id":87,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":83,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"1338:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":85,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"workerGroupSize","nodeType":"MemberAccess","referencedDeclaration":2328,"src":"1338:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"31","id":86,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1338:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":88,"nodeType":"ExpressionStatement","src":"1338:25:0"}]},"documentation":null,"id":90,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"name":"_tokenAddress","nodeType":"VariableDeclaration","scope":90,"src":"1009:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":41,"name":"_principal","nodeType":"VariableDeclaration","scope":90,"src":"1032:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40,"name":"address","nodeType":"ElementaryTypeName","src":"1032:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":43,"name":"_epochSize","nodeType":"VariableDeclaration","scope":90,"src":"1052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint","nodeType":"ElementaryTypeName","src":"1052:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":45,"name":"_timeoutThreshold","nodeType":"VariableDeclaration","scope":90,"src":"1069:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":44,"name":"uint","nodeType":"ElementaryTypeName","src":"1069:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1008:84:0"},"returnParameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"1100:0:0"},"scope":809,"src":"997:373:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":114,"nodeType":"Block","src":"1660:181:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"name":"worker","nodeType":"VariableDeclaration","scope":114,"src":"1670:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":96,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2092,"src":"1670:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":102,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":98,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"1706:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":99,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2312,"src":"1706:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2092_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":101,"indexExpression":{"argumentTypes":null,"id":100,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"1720:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1706:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1670:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":104,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"1744:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2084,"src":"1744:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":106,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"1761:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2185_$","typeString":"type(library EnigmaCommon)"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2133,"src":"1761:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2133_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Unregistered","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1761:38:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"1744:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"556e7265676973746572656420776f726b6572","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1801:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""},"value":"Unregistered worker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a655b9af5da2975f7896d675670091311c62da992e05ff94c11b5c80a678b115","typeString":"literal_string \\"Unregistered worker\\""}],"id":103,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"1736:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1736:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":112,"nodeType":"ExpressionStatement","src":"1736:87:0"},{"id":113,"nodeType":"PlaceholderStatement","src":"1833:1:0"}]},"documentation":"Checks if the custodian wallet is registered as a worker\\n    * @param _user The custodian address of the worker","id":115,"name":"workerRegistered","nodeType":"ModifierDefinition","parameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"name":"_user","nodeType":"VariableDeclaration","scope":115,"src":"1645:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"1645:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1644:15:0"},"src":"1619:222:0","visibility":"internal"},{"body":{"id":139,"nodeType":"Block","src":"2024:178:0","statements":[{"assignments":[122],"declarations":[{"constant":false,"id":122,"name":"worker","nodeType":"VariableDeclaration","scope":139,"src":"2034:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":121,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2092,"src":"2034:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":127,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":123,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"2070:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":124,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2312,"src":"2070:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2092_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":126,"indexExpression":{"argumentTypes":null,"id":125,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2084:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2070:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2034:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"},"id":134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":129,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2108:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":130,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2084,"src":"2108:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":131,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"2125:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2185_$","typeString":"type(library EnigmaCommon)"}},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2133,"src":"2125:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2133_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedIn","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2125:34:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2108:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f6767656420696e","id":135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:22:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""},"value":"Worker not logged in"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f4ecf58b8e404e1acb512ca5c510036697bb71f4ab05511cf59eb481d7907b3","typeString":"literal_string \\"Worker not logged in\\""}],"id":128,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"2100:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2100:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":137,"nodeType":"ExpressionStatement","src":"2100:84:0"},{"id":138,"nodeType":"PlaceholderStatement","src":"2194:1:0"}]},"documentation":"Checks if the custodian wallet is logged in as a worker\\n    * @param _user The custodian address of the worker","id":140,"name":"workerLoggedIn","nodeType":"ModifierDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"name":"_user","nodeType":"VariableDeclaration","scope":140,"src":"2009:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":116,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2008:15:0"},"src":"1985:217:0","visibility":"internal"},{"body":{"id":164,"nodeType":"Block","src":"2387:180:0","statements":[{"assignments":[147],"declarations":[{"constant":false,"id":147,"name":"worker","nodeType":"VariableDeclaration","scope":164,"src":"2397:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":146,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2092,"src":"2397:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":152,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":148,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"2433:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2312,"src":"2433:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2092_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":151,"indexExpression":{"argumentTypes":null,"id":150,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"2447:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2433:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2397:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":154,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"2471:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":155,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2084,"src":"2471:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":156,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"2488:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2185_$","typeString":"type(library EnigmaCommon)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2133,"src":"2488:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2133_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2488:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2471:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f74206c6f67676564206f7574","id":160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2525:23:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""},"value":"Worker not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be84c3b513506086a22a04d87bdacc63089ca93a6cc2d235335fa30a67a698a7","typeString":"literal_string \\"Worker not logged out\\""}],"id":153,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"2463:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2463:86:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"2463:86:0"},{"id":163,"nodeType":"PlaceholderStatement","src":"2559:1:0"}]},"documentation":"Checks if the custodian wallet is logged out as a worker\\n    * @param _user The custodian address of the worker","id":165,"name":"workerLoggedOut","nodeType":"ModifierDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"name":"_user","nodeType":"VariableDeclaration","scope":165,"src":"2372:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"2372:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2371:15:0"},"src":"2347:220:0","visibility":"internal"},{"body":{"id":208,"nodeType":"Block","src":"2716:395:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"name":"worker","nodeType":"VariableDeclaration","scope":208,"src":"2726:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":171,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2092,"src":"2726:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":177,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":173,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"2762:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2312,"src":"2762:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2092_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":176,"indexExpression":{"argumentTypes":null,"id":175,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2776:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2762:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2726:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":180,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12473,"src":"2820:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2820:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":179,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"2800:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2800:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2800:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5072696e636970616c206e6f646520686173206e6f74206265656e20696e697469616c697a6564","id":185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""},"value":"Principal node has not been initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f7527181e199d9c23c3494f44b20cc923701bd2358cb3673d5bb118684df154","typeString":"literal_string \\"Principal node has not been initialized\\""}],"id":178,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"2792:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2792:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":187,"nodeType":"ExpressionStatement","src":"2792:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":189,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"2900:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":190,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2084,"src":"2900:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":191,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"2917:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2185_$","typeString":"type(library EnigmaCommon)"}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2133,"src":"2917:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2133_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2917:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"2900:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2954:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":188,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"2892:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2892:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":197,"nodeType":"ExpressionStatement","src":"2892:104:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":199,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3014:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":200,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2088,"src":"3014:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":201,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"3032:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakingThreshold","nodeType":"MemberAccess","referencedDeclaration":2326,"src":"3032:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3014:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b657227732062616c616e6365206973206e6f742073756666696369656e74","id":204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3056:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""},"value":"Worker\'s balance is not sufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05683bda98f9d53ebf6e16f74e38562d700c80440d8ad15ad70fbbb93e52e92f","typeString":"literal_string \\"Worker\'s balance is not sufficient\\""}],"id":198,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"3006:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3006:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":206,"nodeType":"ExpressionStatement","src":"3006:87:0"},{"id":207,"nodeType":"PlaceholderStatement","src":"3103:1:0"}]},"documentation":"Checks if worker can log in\\n    * @param _user The custodian address of the worker","id":209,"name":"canLogIn","nodeType":"ModifierDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"name":"_user","nodeType":"VariableDeclaration","scope":209,"src":"2701:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2700:15:0"},"src":"2683:428:0","visibility":"internal"},{"body":{"id":265,"nodeType":"Block","src":"3269:580:0","statements":[{"assignments":[216],"declarations":[{"constant":false,"id":216,"name":"worker","nodeType":"VariableDeclaration","scope":265,"src":"3279:33:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker"},"typeName":{"contractScope":null,"id":215,"name":"EnigmaCommon.Worker","nodeType":"UserDefinedTypeName","referencedDeclaration":2092,"src":"3279:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_storage_ptr","typeString":"struct EnigmaCommon.Worker"}},"value":null,"visibility":"internal"}],"id":221,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":217,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"3315:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2312,"src":"3315:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2092_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":220,"indexExpression":{"argumentTypes":null,"id":219,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3329:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3315:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3279:56:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":223,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"3353:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},"id":224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2084,"src":"3353:13:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":225,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"3370:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2185_$","typeString":"type(library EnigmaCommon)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerStatus","nodeType":"MemberAccess","referencedDeclaration":2133,"src":"3370:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerStatus_$2133_$","typeString":"type(enum EnigmaCommon.WorkerStatus)"}},"id":227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LoggedOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3370:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerStatus_$2133","typeString":"enum EnigmaCommon.WorkerStatus"}},"src":"3353:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b6572206e6f742072656769737465726564206f72206e6f74206c6f67676564206f7574","id":229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3407:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""},"value":"Worker not registered or not logged out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dca908ab9f7f48e6ef1d0d5297c414a563bcd956114f0772a7022ab290f40080","typeString":"literal_string \\"Worker not registered or not logged out\\""}],"id":222,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"3345:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3345:104:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":231,"nodeType":"ExpressionStatement","src":"3345:104:0"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"name":"workerLog","nodeType":"VariableDeclaration","scope":265,"src":"3459:39:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2110_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog"},"typeName":{"contractScope":null,"id":234,"name":"EnigmaCommon.WorkerLog","nodeType":"UserDefinedTypeName","referencedDeclaration":2110,"src":"3459:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2110_storage_ptr","typeString":"struct EnigmaCommon.WorkerLog"}},"value":null,"visibility":"internal"}],"id":242,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":238,"name":"worker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"3536:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":239,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12473,"src":"3544:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3544:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Worker_$2092_memory_ptr","typeString":"struct EnigmaCommon.Worker memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":236,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"3501:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$8873_$","typeString":"type(library WorkersImpl)"}},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getLatestWorkerLogImpl","nodeType":"MemberAccess","referencedDeclaration":8872,"src":"3501:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_pure$_t_struct$_Worker_$2092_memory_ptr_$_t_uint256_$returns$_t_struct$_WorkerLog_$2110_memory_ptr_$","typeString":"function (struct EnigmaCommon.Worker memory,uint256) pure returns (struct EnigmaCommon.WorkerLog memory)"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3501:56:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2110_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"nodeType":"VariableDeclarationStatement","src":"3459:98:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_WorkerLogType_$2141","typeString":"enum EnigmaCommon.WorkerLogType"},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":244,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"3575:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2110_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerEventType","nodeType":"MemberAccess","referencedDeclaration":2105,"src":"3575:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2141","typeString":"enum EnigmaCommon.WorkerLogType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":246,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"3604:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2185_$","typeString":"type(library EnigmaCommon)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"WorkerLogType","nodeType":"MemberAccess","referencedDeclaration":2141,"src":"3604:26:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_WorkerLogType_$2141_$","typeString":"type(enum EnigmaCommon.WorkerLogType)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LogOut","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3604:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_WorkerLogType_$2141","typeString":"enum EnigmaCommon.WorkerLogType"}},"src":"3575:62:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"576f726b65722773206c617374206c6f67206973206e6f74206f66204c6f674f75742074797065","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3651:41:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""},"value":"Worker\'s last log is not of LogOut type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26b121de3cfd6944d490b34c4a5f35eab4e29b541f7e3162e3db22f6c9e9d04f","typeString":"literal_string \\"Worker\'s last log is not of LogOut type\\""}],"id":243,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"3567:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3567:126:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":252,"nodeType":"ExpressionStatement","src":"3567:126:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":255,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12473,"src":"3731:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3731:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":254,"name":"getFirstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"3711:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3711:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":258,"name":"workerLog","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"3747:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_WorkerLog_$2110_memory_ptr","typeString":"struct EnigmaCommon.WorkerLog memory"}},"id":259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":2107,"src":"3747:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3711:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"43616e6e6f7420776974686472617720696e2073616d652065706f6368206173206c6f67206f7574206576656e74","id":261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3782:48:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""},"value":"Cannot withdraw in same epoch as log out event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712139d2111b5db342f99e4886854ada6267c59254313db738de90802b6a3951","typeString":"literal_string \\"Cannot withdraw in same epoch as log out event\\""}],"id":253,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"3703:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3703:128:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":263,"nodeType":"ExpressionStatement","src":"3703:128:0"},{"id":264,"nodeType":"PlaceholderStatement","src":"3841:1:0"}]},"documentation":"Checks if the worker can withdraw\\n    * @param _user The custodian address of the worker","id":266,"name":"canWithdraw","nodeType":"ModifierDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"name":"_user","nodeType":"VariableDeclaration","scope":266,"src":"3254:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"3254:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"3253:15:0"},"src":"3233:616:0","visibility":"internal"},{"body":{"id":284,"nodeType":"Block","src":"4016:151:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2136","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":271,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"4034:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"4034:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2122_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":274,"indexExpression":{"argumentTypes":null,"id":273,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"4050:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4034:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2122_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"4034:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2136","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":276,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"4069:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2185_$","typeString":"type(library EnigmaCommon)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2136,"src":"4069:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2136_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Undefined","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4069:43:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2136","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4034:78:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e747261637420616c7265616479206465706c6f796564","id":280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4114:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""},"value":"Secret contract already deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adbdcfc908c9b38e03fcf44ef01fa07390634e8645721bb352a69a460ab0b56a","typeString":"literal_string \\"Secret contract already deployed\\""}],"id":270,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"4026:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4026:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":282,"nodeType":"ExpressionStatement","src":"4026:123:0"},{"id":283,"nodeType":"PlaceholderStatement","src":"4159:1:0"}]},"documentation":"Checks secret contract has not been deployed\\n    * @param _scAddr Secret contract address","id":285,"name":"contractUndefined","nodeType":"ModifierDefinition","parameters":{"id":269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"name":"_scAddr","nodeType":"VariableDeclaration","scope":285,"src":"3999:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":267,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3999:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"3998:17:0"},"src":"3972:195:0","visibility":"internal"},{"body":{"id":303,"nodeType":"Block","src":"4329:146:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_SecretContractStatus_$2136","typeString":"enum EnigmaCommon.SecretContractStatus"},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":290,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"4347:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contracts","nodeType":"MemberAccess","referencedDeclaration":2320,"src":"4347:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SecretContract_$2122_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.SecretContract storage ref)"}},"id":293,"indexExpression":{"argumentTypes":null,"id":292,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"4363:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4347:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_SecretContract_$2122_storage","typeString":"struct EnigmaCommon.SecretContract storage ref"}},"id":294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"4347:31:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2136","typeString":"enum EnigmaCommon.SecretContractStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":295,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"4382:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2185_$","typeString":"type(library EnigmaCommon)"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SecretContractStatus","nodeType":"MemberAccess","referencedDeclaration":2136,"src":"4382:33:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SecretContractStatus_$2136_$","typeString":"type(enum EnigmaCommon.SecretContractStatus)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Deployed","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4382:42:0","typeDescriptions":{"typeIdentifier":"t_enum$_SecretContractStatus_$2136","typeString":"enum EnigmaCommon.SecretContractStatus"}},"src":"4347:77:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"53656372657420636f6e7472616374206e6f74206465706c6f796564","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4426:30:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""},"value":"Secret contract not deployed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2aabc1cd3f0e7af0997d61a477b874b74e42cfc94c209c8419637565fb94bd66","typeString":"literal_string \\"Secret contract not deployed\\""}],"id":289,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"4339:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4339:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":301,"nodeType":"ExpressionStatement","src":"4339:118:0"},{"id":302,"nodeType":"PlaceholderStatement","src":"4467:1:0"}]},"documentation":"Checks secret contract has been deployed\\n    * @param _scAddr Secret contract address","id":304,"name":"contractDeployed","nodeType":"ModifierDefinition","parameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"name":"_scAddr","nodeType":"VariableDeclaration","scope":304,"src":"4312:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4312:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4311:17:0"},"src":"4286:189:0","visibility":"internal"},{"body":{"id":322,"nodeType":"Block","src":"4640:128:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$2129","typeString":"enum EnigmaCommon.TaskStatus"},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":309,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"4658:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tasks","nodeType":"MemberAccess","referencedDeclaration":2316,"src":"4658:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_TaskRecord_$2080_storage_$","typeString":"mapping(bytes32 => struct EnigmaCommon.TaskRecord storage ref)"}},"id":312,"indexExpression":{"argumentTypes":null,"id":311,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"4670:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4658:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_TaskRecord_$2080_storage","typeString":"struct EnigmaCommon.TaskRecord storage ref"}},"id":313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":2077,"src":"4658:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2129","typeString":"enum EnigmaCommon.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":314,"name":"EnigmaCommon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"4689:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EnigmaCommon_$2185_$","typeString":"type(library EnigmaCommon)"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TaskStatus","nodeType":"MemberAccess","referencedDeclaration":2129,"src":"4689:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$2129_$","typeString":"type(enum EnigmaCommon.TaskStatus)"}},"id":316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RecordCreated","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4689:37:0","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$2129","typeString":"enum EnigmaCommon.TaskStatus"}},"src":"4658:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"5461736b206973206e6f742077616974696e67","id":318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4728:21:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""},"value":"Task is not waiting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5206531e992b1989d20dd03d56448e79703012ff2a4fddf2fdfe2a9a50aeed5f","typeString":"literal_string \\"Task is not waiting\\""}],"id":308,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"4650:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4650:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":320,"nodeType":"ExpressionStatement","src":"4650:100:0"},{"id":321,"nodeType":"PlaceholderStatement","src":"4760:1:0"}]},"documentation":"Checks task record has been created and is still pending receipt\\n    * @param _taskId Task ID","id":323,"name":"taskWaiting","nodeType":"ModifierDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"name":"_taskId","nodeType":"VariableDeclaration","scope":323,"src":"4623:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":305,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4623:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4622:17:0"},"src":"4602:166:0","visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"4930:202:0","statements":[{"body":{"id":353,"nodeType":"Block","src":"4996:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":340,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"5018:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workers","nodeType":"MemberAccess","referencedDeclaration":2312,"src":"5018:13:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Worker_$2092_storage_$","typeString":"mapping(address => struct EnigmaCommon.Worker storage ref)"}},"id":346,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":342,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"5032:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2305,"src":"5032:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":345,"indexExpression":{"argumentTypes":null,"id":344,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"5054:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5032:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5018:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_Worker_$2092_storage","typeString":"struct EnigmaCommon.Worker storage ref"}},"id":347,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"signer","nodeType":"MemberAccess","referencedDeclaration":2082,"src":"5018:46:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"id":348,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"5068:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5018:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"4e6f74206120756e69717565207369676e696e67206b6579","id":350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5077:26:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""},"value":"Not a unique signing key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09ef0ec5e56c3e2a5035c813287692a197a18c72ade9eed6403789068c687d69","typeString":"literal_string \\"Not a unique signing key\\""}],"id":339,"name":"require","nodeType":"Identifier","overloadedDeclarations":[12486,12487],"referencedDeclaration":12487,"src":"5010:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5010:94:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":352,"nodeType":"ExpressionStatement","src":"5010:94:0"}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"4957:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":332,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"4961:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"workerAddresses","nodeType":"MemberAccess","referencedDeclaration":2305,"src":"4961:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4961:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4957:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":354,"initializationExpression":{"assignments":[328],"declarations":[{"constant":false,"id":328,"name":"i","nodeType":"VariableDeclaration","scope":354,"src":"4945:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint","nodeType":"ElementaryTypeName","src":"4945:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":330,"initialValue":{"argumentTypes":null,"hexValue":"30","id":329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4954:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4945:10:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4991:3:0","subExpression":{"argumentTypes":null,"id":336,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"4991:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":338,"nodeType":"ExpressionStatement","src":"4991:3:0"},"nodeType":"ForStatement","src":"4940:175:0"},{"id":355,"nodeType":"PlaceholderStatement","src":"5124:1:0"}]},"documentation":"Ensure signing key used for registration is unique\\n    * @param _signer Signing key","id":357,"name":"isUniqueSigningKey","nodeType":"ModifierDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"name":"_signer","nodeType":"VariableDeclaration","scope":357,"src":"4913:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"4913:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"4912:17:0"},"src":"4885:247:0","visibility":"internal"},{"body":{"id":378,"nodeType":"Block","src":"5753:78:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":372,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"5788:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":373,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"5795:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":374,"name":"_report","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"5804:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":375,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"5813:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":369,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"5763:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$8873_$","typeString":"type(library WorkersImpl)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerImpl","nodeType":"MemberAccess","referencedDeclaration":8140,"src":"5763:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,bytes memory,bytes memory)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5763:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":377,"nodeType":"ExpressionStatement","src":"5763:61:0"}]},"documentation":"Registers a new worker or change the signer parameters of an existing\\nworker. This should be called by every worker (and the principal)\\nnode in order to receive tasks.\\n    * @param _signer The signer address, derived from the enclave public key\\n@param _report The RLP encoded report returned by the IAS\\n@param _signature Signature","id":379,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":366,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"5740:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":367,"modifierName":{"argumentTypes":null,"id":365,"name":"isUniqueSigningKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"5721:18:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"5721:27:0"}],"name":"register","nodeType":"FunctionDefinition","parameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"name":"_signer","nodeType":"VariableDeclaration","scope":379,"src":"5642:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"5642:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":361,"name":"_report","nodeType":"VariableDeclaration","scope":379,"src":"5659:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":360,"name":"bytes","nodeType":"ElementaryTypeName","src":"5659:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":363,"name":"_signature","nodeType":"VariableDeclaration","scope":379,"src":"5681:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":362,"name":"bytes","nodeType":"ElementaryTypeName","src":"5681:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"5641:64:0"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"5753:0:0"},"scope":809,"src":"5624:207:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":397,"nodeType":"Block","src":"6175:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":392,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"6209:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":393,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"6216:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":394,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"6228:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":389,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"6185:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$8873_$","typeString":"type(library WorkersImpl)"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositImpl","nodeType":"MemberAccess","referencedDeclaration":8346,"src":"6185:23:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,address,uint256)"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6185:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":396,"nodeType":"ExpressionStatement","src":"6185:51:0"}]},"documentation":"Deposits ENG stake into contract from worker. Worker must be registered to do so.\\n    * @param _custodian The worker\'s ETH address\\n@param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":398,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":386,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"6159:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":387,"modifierName":{"argumentTypes":null,"id":385,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"6142:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6142:28:0"}],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"name":"_custodian","nodeType":"VariableDeclaration","scope":398,"src":"6093:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":380,"name":"address","nodeType":"ElementaryTypeName","src":"6093:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":383,"name":"_amount","nodeType":"VariableDeclaration","scope":398,"src":"6113:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":382,"name":"uint","nodeType":"ElementaryTypeName","src":"6113:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6092:34:0"},"returnParameters":{"id":388,"nodeType":"ParameterList","parameters":[],"src":"6175:0:0"},"scope":809,"src":"6076:167:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":414,"nodeType":"Block","src":"6516:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":410,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"6551:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":411,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"6558:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":407,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"6526:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$8873_$","typeString":"type(library WorkersImpl)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawImpl","nodeType":"MemberAccess","referencedDeclaration":8399,"src":"6526:24:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256)"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6526:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":413,"nodeType":"ExpressionStatement","src":"6526:40:0"}]},"documentation":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so.\\n    * @param _amount The amount of ENG, in grains format (10 ** 8), to deposit","id":415,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":403,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12483,"src":"6500:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6500:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":405,"modifierName":{"argumentTypes":null,"id":402,"name":"canWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"6488:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6488:23:0"}],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"name":"_amount","nodeType":"VariableDeclaration","scope":415,"src":"6459:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint","nodeType":"ElementaryTypeName","src":"6459:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6458:14:0"},"returnParameters":{"id":406,"nodeType":"ParameterList","parameters":[],"src":"6516:0:0"},"scope":809,"src":"6441:132:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":428,"nodeType":"Block","src":"6781:45:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":425,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"6813:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":422,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"6791:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$8873_$","typeString":"type(library WorkersImpl)"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"loginImpl","nodeType":"MemberAccess","referencedDeclaration":8244,"src":"6791:21:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6791:28:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"6791:28:0"}]},"documentation":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker\\nselection process.","id":429,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":418,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12483,"src":"6769:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6769:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":420,"modifierName":{"argumentTypes":null,"id":417,"name":"canLogIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"6760:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6760:20:0"}],"name":"login","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[],"src":"6750:2:0"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[],"src":"6781:0:0"},"scope":809,"src":"6736:90:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":442,"nodeType":"Block","src":"6955:46:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":439,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"6988:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":436,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"6965:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$8873_$","typeString":"type(library WorkersImpl)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"logoutImpl","nodeType":"MemberAccess","referencedDeclaration":8285,"src":"6965:22:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6965:29:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":441,"nodeType":"ExpressionStatement","src":"6965:29:0"}]},"documentation":"Logout worker. Worker must be logged in to do so.","id":443,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":432,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12483,"src":"6943:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6943:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":434,"modifierName":{"argumentTypes":null,"id":431,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"6928:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6928:26:0"}],"name":"logout","nodeType":"FunctionDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[],"src":"6918:2:0"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[],"src":"6955:0:0"},"scope":809,"src":"6903:98:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":471,"nodeType":"Block","src":"7533:100:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":464,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"7584:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":465,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"7591:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":466,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7600:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":467,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"7611:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":468,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"7621:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":461,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"7543:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5764_$","typeString":"type(library TaskImpl)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4110,"src":"7543:40:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,uint64,bytes memory)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7543:83:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":470,"nodeType":"ExpressionStatement","src":"7543:83:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _codeHash Deployed bytecode hash\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":472,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":454,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12483,"src":"7486:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7486:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":456,"modifierName":{"argumentTypes":null,"id":453,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"7471:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"7471:26:0"},{"arguments":[{"argumentTypes":null,"id":458,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"7520:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":459,"modifierName":{"argumentTypes":null,"id":457,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"7502:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"7502:26:0"}],"name":"deploySecretContractFailure","nodeType":"FunctionDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"name":"_taskId","nodeType":"VariableDeclaration","scope":472,"src":"7355:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":444,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7355:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":447,"name":"_codeHash","nodeType":"VariableDeclaration","scope":472,"src":"7380:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":446,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7380:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":449,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":472,"src":"7407:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":448,"name":"uint64","nodeType":"ElementaryTypeName","src":"7407:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":451,"name":"_sig","nodeType":"VariableDeclaration","scope":472,"src":"7432:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":450,"name":"bytes","nodeType":"ElementaryTypeName","src":"7432:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"7345:110:0"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"7533:0:0"},"scope":809,"src":"7309:324:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":512,"nodeType":"Block","src":"8686:197:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":501,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"8730:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":502,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"8737:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":503,"name":"_preCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"8746:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":504,"name":"_codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"8760:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":505,"name":"_initStateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"8771:19:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":506,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"8804:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":507,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"8827:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":508,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"8861:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":509,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"8871:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":498,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"8696:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5764_$","typeString":"type(library TaskImpl)"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploySecretContractImpl","nodeType":"MemberAccess","referencedDeclaration":4497,"src":"8696:33:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8696:180:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"ExpressionStatement","src":"8696:180:0"}]},"documentation":"Deploy secret contract from user, called by the worker.\\n    * @param _taskId Task ID of corresponding deployment task (taskId == scAddr)\\n@param _preCodeHash Predeployed bytecode hash\\n@param _codeHash Deployed bytecode hash\\n@param _initStateDeltaHash Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumData Initial state delta hash as a result of the contract\'s constructor\\n@param _optionalEthereumContractAddress Initial state delta hash as a result of the contract\'s constructor\\n@param _gasUsed Gas used for task\\n@param _sig Worker\'s signature for deployment","id":513,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":491,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12483,"src":"8639:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8639:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":493,"modifierName":{"argumentTypes":null,"id":490,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"8624:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"8624:26:0"},{"arguments":[{"argumentTypes":null,"id":495,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"8673:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":496,"modifierName":{"argumentTypes":null,"id":494,"name":"contractUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"8655:17:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"8655:26:0"}],"name":"deploySecretContract","nodeType":"FunctionDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"name":"_taskId","nodeType":"VariableDeclaration","scope":513,"src":"8347:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":473,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8347:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":476,"name":"_preCodeHash","nodeType":"VariableDeclaration","scope":513,"src":"8372:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8372:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":478,"name":"_codeHash","nodeType":"VariableDeclaration","scope":513,"src":"8402:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8402:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":480,"name":"_initStateDeltaHash","nodeType":"VariableDeclaration","scope":513,"src":"8429:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":482,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":513,"src":"8466:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":481,"name":"bytes","nodeType":"ElementaryTypeName","src":"8466:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":484,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":513,"src":"8510:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":483,"name":"address","nodeType":"ElementaryTypeName","src":"8510:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":486,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":513,"src":"8560:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":485,"name":"uint64","nodeType":"ElementaryTypeName","src":"8560:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":488,"name":"_sig","nodeType":"VariableDeclaration","scope":513,"src":"8585:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":487,"name":"bytes","nodeType":"ElementaryTypeName","src":"8585:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"8337:271:0"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"8686:0:0"},"scope":809,"src":"8308:575:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":523,"nodeType":"Block","src":"9085:74:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":520,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"9146:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}],"expression":{"argumentTypes":null,"id":518,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"9102:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3675_$","typeString":"type(library SecretContractImpl)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"countSecretContractsImpl","nodeType":"MemberAccess","referencedDeclaration":3607,"src":"9102:43:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2329_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer) view returns (uint256)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9102:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":517,"id":522,"nodeType":"Return","src":"9095:57:0"}]},"documentation":"Check if secret contract has been deployed\\n    * @return  Number of deployed secret contracts","id":524,"implemented":true,"kind":"function","modifiers":[],"name":"countSecretContracts","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"9039:2:0"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"name":"","nodeType":"VariableDeclaration","scope":524,"src":"9075:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint","nodeType":"ElementaryTypeName","src":"9075:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9074:6:0"},"scope":809,"src":"9010:149:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":541,"nodeType":"Block","src":"9488:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":536,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"9555:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":537,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"9562:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":538,"name":"_stop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"9570:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":534,"name":"SecretContractImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"9505:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecretContractImpl_$3675_$","typeString":"type(library SecretContractImpl)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSecretContractAddressesImpl","nodeType":"MemberAccess","referencedDeclaration":3674,"src":"9505:49:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2329_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9505:71:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":533,"id":540,"nodeType":"Return","src":"9498:78:0"}]},"documentation":"Get deployed secret contract addresses within a range\\n    * @param _start Start of range\\n@param _stop End of range\\n@return Subset of deployed secret contract addresses","id":542,"implemented":true,"kind":"function","modifiers":[],"name":"getSecretContractAddresses","nodeType":"FunctionDefinition","parameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"name":"_start","nodeType":"VariableDeclaration","scope":542,"src":"9408:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":525,"name":"uint","nodeType":"ElementaryTypeName","src":"9408:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":528,"name":"_stop","nodeType":"VariableDeclaration","scope":542,"src":"9421:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":527,"name":"uint","nodeType":"ElementaryTypeName","src":"9421:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9407:25:0"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"name":"","nodeType":"VariableDeclaration","scope":542,"src":"9466:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9466:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":531,"length":null,"nodeType":"ArrayTypeName","src":"9466:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"value":null,"visibility":"internal"}],"src":"9465:18:0"},"scope":809,"src":"9372:211:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":566,"nodeType":"Block","src":"10624:122:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":558,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"10674:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":559,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"10681:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":560,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"10694:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":561,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"10705:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":562,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"10713:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":563,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"10732:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":555,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"10634:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5764_$","typeString":"type(library TaskImpl)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createDeploymentTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":3938,"src":"10634:39:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256,uint256)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10634:105:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":565,"nodeType":"ExpressionStatement","src":"10634:105:0"}]},"documentation":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract,\\ngenerating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s\\ntask deployment counter nonce. We revert the process if the locally-generated nonce value does not match\\nthe on-chain-computed nonce since this indicates that the secret contract address the user has generated is\\ninvalid.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch\\n@param _nonce Locally-computed nonce value for this deployment","id":567,"implemented":true,"kind":"function","modifiers":[],"name":"createDeploymentTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":567,"src":"10481:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10481:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":546,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":567,"src":"10510:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":545,"name":"uint64","nodeType":"ElementaryTypeName","src":"10510:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":548,"name":"_gasPx","nodeType":"VariableDeclaration","scope":567,"src":"10536:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":547,"name":"uint64","nodeType":"ElementaryTypeName","src":"10536:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":550,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":567,"src":"10559:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":549,"name":"uint","nodeType":"ElementaryTypeName","src":"10559:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":552,"name":"_nonce","nodeType":"VariableDeclaration","scope":567,"src":"10591:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":551,"name":"uint","nodeType":"ElementaryTypeName","src":"10591:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10471:137:0"},"returnParameters":{"id":554,"nodeType":"ParameterList","parameters":[],"src":"10624:0:0"},"scope":809,"src":"10436:310:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":588,"nodeType":"Block","src":"11478:104:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":581,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"11518:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":582,"name":"_inputsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"11525:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":583,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"11538:9:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":584,"name":"_gasPx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"11549:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":585,"name":"_firstBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"11557:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":578,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"11488:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5764_$","typeString":"type(library TaskImpl)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"createTaskRecordImpl","nodeType":"MemberAccess","referencedDeclaration":4732,"src":"11488:29:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_uint256_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,uint64,uint64,uint256)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11488:87:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":587,"nodeType":"ExpressionStatement","src":"11488:87:0"}]},"documentation":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to\\ncontract, generating the unique taskId, saving the block number when the record was mined, and incrementing\\nthe user\'s task deployment counter nonce.\\n    * @param _inputsHash Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address\\n@param _gasLimit ENG gas limit\\n@param _gasPx ENG gas price in grains format (10 ** 8)\\n@param _firstBlockNumber Locally-computed first block number of epoch","id":589,"implemented":true,"kind":"function","modifiers":[],"name":"createTaskRecord","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":569,"name":"_inputsHash","nodeType":"VariableDeclaration","scope":589,"src":"11356:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11356:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":571,"name":"_gasLimit","nodeType":"VariableDeclaration","scope":589,"src":"11385:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":570,"name":"uint64","nodeType":"ElementaryTypeName","src":"11385:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":573,"name":"_gasPx","nodeType":"VariableDeclaration","scope":589,"src":"11411:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":572,"name":"uint64","nodeType":"ElementaryTypeName","src":"11411:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":575,"name":"_firstBlockNumber","nodeType":"VariableDeclaration","scope":589,"src":"11434:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":574,"name":"uint","nodeType":"ElementaryTypeName","src":"11434:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11346:116:0"},"returnParameters":{"id":577,"nodeType":"ParameterList","parameters":[],"src":"11478:0:0"},"scope":809,"src":"11321:261:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":629,"nodeType":"Block","src":"12549:183:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":618,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"12586:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":619,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"12593:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":620,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"12602:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":621,"name":"_stateDeltaHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"12611:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":622,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"12628:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":623,"name":"_optionalEthereumData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"12641:21:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":624,"name":"_optionalEthereumContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"12676:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":625,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"12710:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":626,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"12720:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":615,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"12559:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5764_$","typeString":"type(library TaskImpl)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitReceiptImpl","nodeType":"MemberAccess","referencedDeclaration":5404,"src":"12559:26:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,bytes32,bytes memory,address,uint64,bytes memory)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12559:166:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":628,"nodeType":"ExpressionStatement","src":"12559:166:0"}]},"documentation":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature.\\nThe task record is finalized and the worker is credited with the task fee.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _stateDeltaHash Input state delta hash\\n@param _outputHash Output state hash\\n@param _optionalEthereumData Output state hash\\n@param _optionalEthereumContractAddress Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":630,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":608,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12483,"src":"12503:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"12503:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":610,"modifierName":{"argumentTypes":null,"id":607,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"12488:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"12488:26:0"},{"arguments":[{"argumentTypes":null,"id":612,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"12536:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":613,"modifierName":{"argumentTypes":null,"id":611,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"12519:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"12519:25:0"}],"name":"commitReceipt","nodeType":"FunctionDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"name":"_scAddr","nodeType":"VariableDeclaration","scope":630,"src":"12218:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12218:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":593,"name":"_taskId","nodeType":"VariableDeclaration","scope":630,"src":"12243:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":592,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12243:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":595,"name":"_stateDeltaHash","nodeType":"VariableDeclaration","scope":630,"src":"12268:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":594,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12268:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":597,"name":"_outputHash","nodeType":"VariableDeclaration","scope":630,"src":"12301:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12301:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":599,"name":"_optionalEthereumData","nodeType":"VariableDeclaration","scope":630,"src":"12330:34:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":598,"name":"bytes","nodeType":"ElementaryTypeName","src":"12330:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":601,"name":"_optionalEthereumContractAddress","nodeType":"VariableDeclaration","scope":630,"src":"12374:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"12374:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":603,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":630,"src":"12424:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":602,"name":"uint64","nodeType":"ElementaryTypeName","src":"12424:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":605,"name":"_sig","nodeType":"VariableDeclaration","scope":630,"src":"12449:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":604,"name":"bytes","nodeType":"ElementaryTypeName","src":"12449:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"12208:264:0"},"returnParameters":{"id":614,"nodeType":"ParameterList","parameters":[],"src":"12549:0:0"},"scope":809,"src":"12186:546:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":661,"nodeType":"Block","src":"13363:101:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":653,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"13404:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":654,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"13411:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":655,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"13420:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":656,"name":"_outputHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"13429:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":657,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"13442:8:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"argumentTypes":null,"id":658,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"13452:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":650,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"13373:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5764_$","typeString":"type(library TaskImpl)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"commitTaskFailureImpl","nodeType":"MemberAccess","referencedDeclaration":4926,"src":"13373:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32,bytes32,bytes32,uint64,bytes memory)"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13373:84:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":660,"nodeType":"ExpressionStatement","src":"13373:84:0"}]},"documentation":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is\\nupdated to indicate task failure.\\n    * @param _scAddr Secret contract address\\n@param _taskId Unique taskId\\n@param _outputHash Output state hash\\n@param _gasUsed Gas used for task computation\\n@param _sig Worker\'s signature","id":662,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":643,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12483,"src":"13317:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13317:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":645,"modifierName":{"argumentTypes":null,"id":642,"name":"workerLoggedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"13302:14:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"13302:26:0"},{"arguments":[{"argumentTypes":null,"id":647,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"13350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":648,"modifierName":{"argumentTypes":null,"id":646,"name":"contractDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"13333:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13333:25:0"}],"name":"commitTaskFailure","nodeType":"FunctionDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"name":"_scAddr","nodeType":"VariableDeclaration","scope":662,"src":"13159:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":631,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13159:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":634,"name":"_taskId","nodeType":"VariableDeclaration","scope":662,"src":"13184:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13184:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":636,"name":"_outputHash","nodeType":"VariableDeclaration","scope":662,"src":"13209:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":635,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13209:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":638,"name":"_gasUsed","nodeType":"VariableDeclaration","scope":662,"src":"13238:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":637,"name":"uint64","nodeType":"ElementaryTypeName","src":"13238:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":null,"visibility":"internal"},{"constant":false,"id":640,"name":"_sig","nodeType":"VariableDeclaration","scope":662,"src":"13263:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":639,"name":"bytes","nodeType":"ElementaryTypeName","src":"13263:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"13149:137:0"},"returnParameters":{"id":649,"nodeType":"ParameterList","parameters":[],"src":"13363:0:0"},"scope":809,"src":"13123:341:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":677,"nodeType":"Block","src":"13715:63:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":673,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"13756:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":674,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"13763:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":670,"name":"TaskImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"13725:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TaskImpl_$5764_$","typeString":"type(library TaskImpl)"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"returnFeesForTaskImpl","nodeType":"MemberAccess","referencedDeclaration":5763,"src":"13725:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$_t_bytes32_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,bytes32)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13725:46:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":676,"nodeType":"ExpressionStatement","src":"13725:46:0"}]},"documentation":"Return the task fee to the task creator when too many blocks have elapsed without task resolution.\\n    * @param _taskId Unique taskId","id":678,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":667,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"13702:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":668,"modifierName":{"argumentTypes":null,"id":666,"name":"taskWaiting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"13690:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"13690:20:0"}],"name":"returnFeesForTask","nodeType":"FunctionDefinition","parameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"name":"_taskId","nodeType":"VariableDeclaration","scope":678,"src":"13658:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13658:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"13657:17:0"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[],"src":"13715:0:0"},"scope":809,"src":"13631:147:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":700,"nodeType":"Block","src":"14238:85:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":694,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"14283:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":695,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"14290:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":696,"name":"_seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"14304:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":697,"name":"_sig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"14311:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":691,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"14248:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3037_$","typeString":"type(library PrincipalImpl)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setWorkersParamsImpl","nodeType":"MemberAccess","referencedDeclaration":2866,"src":"14248:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_nonpayable$_t_struct$_State_$2329_storage_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct EnigmaState.State storage pointer,uint256,uint256,bytes memory)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14248:68:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":699,"nodeType":"ExpressionStatement","src":"14248:68:0"}]},"documentation":"Reparameterizing workers with a new seed\\nThis should be called for each epoch by the Principal node\\n    * @param _blockNumber Block number principal node is attempting to set worker params\\n@param _seed The random integer generated by the enclave\\n@param _sig Principal node\'s signature","id":701,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":687,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12483,"src":"14222:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"14222:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":689,"modifierName":{"argumentTypes":null,"id":686,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"14205:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"14205:28:0"}],"name":"setWorkersParams","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":701,"src":"14140:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":679,"name":"uint","nodeType":"ElementaryTypeName","src":"14140:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":682,"name":"_seed","nodeType":"VariableDeclaration","scope":701,"src":"14159:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint","nodeType":"ElementaryTypeName","src":"14159:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":684,"name":"_sig","nodeType":"VariableDeclaration","scope":701,"src":"14171:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":683,"name":"bytes","nodeType":"ElementaryTypeName","src":"14171:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"14139:50:0"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"14238:0:0"},"scope":809,"src":"14114:209:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":718,"nodeType":"Block","src":"14559:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":714,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"14611:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":715,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"14618:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":712,"name":"PrincipalImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"14576:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PrincipalImpl_$3037_$","typeString":"type(library PrincipalImpl)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getActiveWorkersImpl","nodeType":"MemberAccess","referencedDeclaration":3036,"src":"14576:34:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2329_storage_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (address[] memory,uint256[] memory)"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14576:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":711,"id":717,"nodeType":"Return","src":"14569:62:0"}]},"documentation":"Get active workers before a certain block number\\n    * @param _blockNumber Block number","id":719,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveWorkers","nodeType":"FunctionDefinition","parameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":719,"src":"14470:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":702,"name":"uint","nodeType":"ElementaryTypeName","src":"14470:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"14469:19:0"},"returnParameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"name":"","nodeType":"VariableDeclaration","scope":719,"src":"14522:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"14522:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":706,"length":null,"nodeType":"ArrayTypeName","src":"14522:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":710,"name":"","nodeType":"VariableDeclaration","scope":719,"src":"14540:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":708,"name":"uint","nodeType":"ElementaryTypeName","src":"14540:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":709,"length":null,"nodeType":"ArrayTypeName","src":"14540:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"14521:33:0"},"scope":809,"src":"14444:194:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":732,"nodeType":"Block","src":"14900:80:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":728,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"14953:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":729,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"14960:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":726,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"14917:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$8873_$","typeString":"type(library WorkersImpl)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFirstBlockNumberImpl","nodeType":"MemberAccess","referencedDeclaration":8519,"src":"14917:35:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2329_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14917:56:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":725,"id":731,"nodeType":"Return","src":"14910:63:0"}]},"documentation":"Get the first block number of an epoch that a given block number belongs to\\n    * @param _blockNumber Block number\\n@return Block number","id":733,"implemented":true,"kind":"function","modifiers":[],"name":"getFirstBlockNumber","nodeType":"FunctionDefinition","parameters":{"id":722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":721,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":733,"src":"14842:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":720,"name":"uint","nodeType":"ElementaryTypeName","src":"14842:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"14841:19:0"},"returnParameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"name":"","nodeType":"VariableDeclaration","scope":733,"src":"14894:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint","nodeType":"ElementaryTypeName","src":"14894:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"14893:6:0"},"scope":809,"src":"14813:167:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":754,"nodeType":"Block","src":"15386:76:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":750,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"15435:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":751,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"15442:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":748,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"15403:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$8873_$","typeString":"type(library WorkersImpl)"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerParamsImpl","nodeType":"MemberAccess","referencedDeclaration":8556,"src":"15403:31:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2329_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256) view returns (uint256,uint256,address[] memory,uint256[] memory)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15403:52:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,address[] memory,uint256[] memory)"}},"functionReturnParameters":747,"id":753,"nodeType":"Return","src":"15396:59:0"}]},"documentation":"Get worker params for an epoch given a particular block number\\n    * @param _blockNumber Block number\\n@return Epoch\'s first block number\\n@return Seed\\n@return Array of worker\'s signing addresses\\n@return Array of worker\'s stakes","id":755,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerParams","nodeType":"FunctionDefinition","parameters":{"id":736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":755,"src":"15289:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":734,"name":"uint","nodeType":"ElementaryTypeName","src":"15289:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15288:19:0"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"name":"","nodeType":"VariableDeclaration","scope":755,"src":"15341:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint","nodeType":"ElementaryTypeName","src":"15341:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":740,"name":"","nodeType":"VariableDeclaration","scope":755,"src":"15347:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":739,"name":"uint","nodeType":"ElementaryTypeName","src":"15347:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":743,"name":"","nodeType":"VariableDeclaration","scope":755,"src":"15353:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"15353:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":742,"length":null,"nodeType":"ArrayTypeName","src":"15353:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":746,"name":"","nodeType":"VariableDeclaration","scope":755,"src":"15371:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":744,"name":"uint","nodeType":"ElementaryTypeName","src":"15371:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":745,"length":null,"nodeType":"ArrayTypeName","src":"15371:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"src":"15340:45:0"},"scope":809,"src":"15264:198:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":772,"nodeType":"Block","src":"15914:84:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":767,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"15962:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":768,"name":"_blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"15969:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":769,"name":"_scAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"15983:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":765,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"15931:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$8873_$","typeString":"type(library WorkersImpl)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getWorkerGroupImpl","nodeType":"MemberAccess","referencedDeclaration":8820,"src":"15931:30:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2329_storage_ptr_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,uint256,bytes32) view returns (address[] memory)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15931:60:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":764,"id":771,"nodeType":"Return","src":"15924:67:0"}]},"documentation":"Select a group of workers for the computation task given the block number of the task record (implies the epoch)\\nand the secret contract address.\\n    * @param _blockNumber Block number the task record was mined\\n@param _scAddr Secret contract address\\n@return Selected workers\' addresses","id":773,"implemented":true,"kind":"function","modifiers":[],"name":"getWorkerGroup","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"name":"_blockNumber","nodeType":"VariableDeclaration","scope":773,"src":"15823:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint","nodeType":"ElementaryTypeName","src":"15823:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":759,"name":"_scAddr","nodeType":"VariableDeclaration","scope":773,"src":"15842:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15842:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"15822:36:0"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"name":"","nodeType":"VariableDeclaration","scope":773,"src":"15892:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"15892:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":762,"length":null,"nodeType":"ArrayTypeName","src":"15892:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"}],"src":"15891:18:0"},"scope":809,"src":"15799:199:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":791,"nodeType":"Block","src":"16268:68:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":787,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"16311:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"}},{"argumentTypes":null,"id":788,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"16318:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_State_$2329_storage","typeString":"struct EnigmaState.State storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":785,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"16285:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$8873_$","typeString":"type(library WorkersImpl)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReportImpl","nodeType":"MemberAccess","referencedDeclaration":8177,"src":"16285:25:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_struct$_State_$2329_storage_ptr_$_t_address_$returns$_t_address_$_t_bytes_memory_ptr_$","typeString":"function (struct EnigmaState.State storage pointer,address) view returns (address,bytes memory)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16285:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes_memory_ptr_$","typeString":"tuple(address,bytes memory)"}},"functionReturnParameters":784,"id":790,"nodeType":"Return","src":"16278:51:0"}]},"documentation":"The RLP encoded report returned by the IAS server\\n    * @param _custodian The worker\'s custodian address","id":792,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"argumentTypes":null,"id":778,"name":"_custodian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"16216:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":779,"modifierName":{"argumentTypes":null,"id":777,"name":"workerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"16199:16:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"16199:28:0"}],"name":"getReport","nodeType":"FunctionDefinition","parameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"name":"_custodian","nodeType":"VariableDeclaration","scope":792,"src":"16155:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"16155:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"16154:20:0"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"name":"","nodeType":"VariableDeclaration","scope":792,"src":"16241:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":780,"name":"address","nodeType":"ElementaryTypeName","src":"16241:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":783,"name":"","nodeType":"VariableDeclaration","scope":792,"src":"16250:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":782,"name":"bytes","nodeType":"ElementaryTypeName","src":"16250:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"16240:23:0"},"scope":809,"src":"16136:200:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":807,"nodeType":"Block","src":"16651:71:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":803,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"16697:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"argumentTypes":null,"id":804,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"16704:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":null,"id":801,"name":"WorkersImpl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8873,"src":"16668:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WorkersImpl_$8873_$","typeString":"type(library WorkersImpl)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"verifyReportImpl","nodeType":"MemberAccess","referencedDeclaration":8203,"src":"16668:28:0","typeDescriptions":{"typeIdentifier":"t_function_delegatecall_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) view returns (uint256)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16668:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":800,"id":806,"nodeType":"Return","src":"16661:54:0"}]},"documentation":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate.\\n@param _data The report itself\\n@param _signature The signature of the report","id":808,"implemented":true,"kind":"function","modifiers":[],"name":"verifyReport","nodeType":"FunctionDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"name":"_data","nodeType":"VariableDeclaration","scope":808,"src":"16563:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":793,"name":"bytes","nodeType":"ElementaryTypeName","src":"16563:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":796,"name":"_signature","nodeType":"VariableDeclaration","scope":808,"src":"16583:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":795,"name":"bytes","nodeType":"ElementaryTypeName","src":"16583:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"16562:45:0"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"name":"","nodeType":"VariableDeclaration","scope":808,"src":"16641:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":798,"name":"uint","nodeType":"ElementaryTypeName","src":"16641:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"16640:6:0"},"scope":809,"src":"16541:181:0","stateMutability":"view","superFunction":null,"visibility":"public"}],"scope":810,"src":"767:15957:0"}],"src":"0:16725:0"},"compiler":{"name":"solc","version":"0.5.8+commit.23d335f2.Emscripten.clang"},"networks":{"4447":{"events":{"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55":{"anonymous":false,"inputs":[{"indexed":false,"name":"custodian","type":"address"},{"indexed":false,"name":"signer","type":"address"}],"name":"Registered","type":"event","signature":"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55"},"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb":{"anonymous":false,"inputs":[{"indexed":false,"name":"sig","type":"bytes"},{"indexed":false,"name":"hash","type":"bytes32"},{"indexed":false,"name":"workerAddr","type":"address"}],"name":"ValidatedSig","type":"event","signature":"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb"},"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd":{"anonymous":false,"inputs":[{"indexed":false,"name":"seed","type":"uint256"},{"indexed":false,"name":"firstBlockNumber","type":"uint256"},{"indexed":false,"name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"name":"workers","type":"address[]"},{"indexed":false,"name":"stakes","type":"uint256[]"},{"indexed":false,"name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event","signature":"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd"},"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint256"},{"indexed":false,"name":"gasPx","type":"uint256"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event","signature":"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7"},"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint256[]"},{"indexed":false,"name":"gasPxs","type":"uint256[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event","signature":"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7"},"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142"},"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"stateDeltaHashes","type":"bytes32[]"},{"indexed":false,"name":"outputHashes","type":"bytes32[]"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptsVerified","type":"event","signature":"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f"},"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event","signature":"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454"},"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event","signature":"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f"},"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event","signature":"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f"},"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5":{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event","signature":"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5"},"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9":{"anonymous":false,"inputs":[{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event","signature":"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9"},"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158":{"anonymous":false,"inputs":[{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"codeHash","type":"bytes32"},{"indexed":false,"name":"initStateDeltaHash","type":"bytes32"}],"name":"SecretContractDeployed","type":"event","signature":"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158"},"0x72d426446fed2276ff12e6c401fde2011fde45faa59b7b8d052c2384c682851d":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint64"},{"indexed":false,"name":"gasPx","type":"uint64"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event","signature":"0x72d426446fed2276ff12e6c401fde2011fde45faa59b7b8d052c2384c682851d"},"0x4bd41c1b1fe5d4fab28fe14a580082e19937fe7f97068b2bd8424abe636220a9":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"workerAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0x4bd41c1b1fe5d4fab28fe14a580082e19937fe7f97068b2bd8424abe636220a9"}},"links":{"WorkersImpl":"0x978AD50203FBF76497B4295383eFb54c0058A17C","PrincipalImpl":"0x27EB0E86D3cb6C85534F041308dd7B83660a2c47","TaskImpl":"0xFDfC50BCc05EdEb9Ca4fF191644060786BF0C0dd","SecretContractImpl":"0xC1daEaF68A4DB14E7e3ae669FbB0EB4771617831"},"address":"0x8792964646cb89BAE9815f8394952889ECE07195","transactionHash":"0x81021febfa7ad4608019c5fe7180c8cad6f690e509a1c80f8b9cd125855c07ab"},"5777":{"events":{"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55":{"anonymous":false,"inputs":[{"indexed":false,"name":"custodian","type":"address"},{"indexed":false,"name":"signer","type":"address"}],"name":"Registered","type":"event","signature":"0x0a31ee9d46a828884b81003c8498156ea6aa15b9b54bdd0ef0b533d9eba57e55"},"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb":{"anonymous":false,"inputs":[{"indexed":false,"name":"sig","type":"bytes"},{"indexed":false,"name":"hash","type":"bytes32"},{"indexed":false,"name":"workerAddr","type":"address"}],"name":"ValidatedSig","type":"event","signature":"0xe36691ca52ee024e298e5c0ff07191b87f0ac571c01a7631db2d70d573d955cb"},"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd":{"anonymous":false,"inputs":[{"indexed":false,"name":"seed","type":"uint256"},{"indexed":false,"name":"firstBlockNumber","type":"uint256"},{"indexed":false,"name":"inclusionBlockNumber","type":"uint256"},{"indexed":false,"name":"workers","type":"address[]"},{"indexed":false,"name":"stakes","type":"uint256[]"},{"indexed":false,"name":"nonce","type":"uint256"}],"name":"WorkersParameterized","type":"event","signature":"0x4ac4fa4588e2c6fdaec0f375ac3b33fab7b69895fbb538347f8adb03164c5ddd"},"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"inputsHash","type":"bytes32"},{"indexed":false,"name":"gasLimit","type":"uint256"},{"indexed":false,"name":"gasPx","type":"uint256"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordCreated","type":"event","signature":"0x78987cf84223c792255f8e28ed70431315c014e8c10a614a6d915ee9ec1c01f7"},"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"inputsHashes","type":"bytes32[]"},{"indexed":false,"name":"gasLimits","type":"uint256[]"},{"indexed":false,"name":"gasPxs","type":"uint256[]"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"blockNumber","type":"uint256"}],"name":"TaskRecordsCreated","type":"event","signature":"0xdfac019078ab963c0398db3d1bf93d6a114ff12e130f939803db275bd24252c7"},"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"stateDeltaHash","type":"bytes32"},{"indexed":false,"name":"outputHash","type":"bytes32"},{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"gasUsed","type":"uint256"},{"indexed":false,"name":"deltaHashIndex","type":"uint256"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptVerified","type":"event","signature":"0xc7045d64fb2e01ada180e7813c5a460b6dc2e7add3c786bc19f772d16aafd142"},"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskIds","type":"bytes32[]"},{"indexed":false,"name":"stateDeltaHashes","type":"bytes32[]"},{"indexed":false,"name":"outputHashes","type":"bytes32[]"},{"indexed":false,"name":"optionalEthereumData","type":"bytes"},{"indexed":false,"name":"optionalEthereumContractAddress","type":"address"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptsVerified","type":"event","signature":"0xd3083b678bc99dc5c2846df52bf154d3814313d8c6b2af3b98a9912a2305f09f"},"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailed","type":"event","signature":"0xb6fea360017e3af252ed4596a124395e73b6a74663655ec09faab58171302454"},"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"},{"indexed":false,"name":"sig","type":"bytes"}],"name":"ReceiptFailedETH","type":"event","signature":"0xb4aea73bd8d22347d99fea0a634fccfed5e23aec848d852b7951161f1ee85f0f"},"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f":{"anonymous":false,"inputs":[{"indexed":false,"name":"taskId","type":"bytes32"}],"name":"TaskFeeReturned","type":"event","signature":"0x8f86891ac4edccb13a0629ba04c2b3c434909504438dda249003b4fd85752d1f"},"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5":{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"DepositSuccessful","type":"event","signature":"0xb3ef81558ed1a50072a492984535a009da8b129c749500b387f1e5f4886bdde5"},"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9":{"anonymous":false,"inputs":[{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"WithdrawSuccessful","type":"event","signature":"0x84e742a3ea03623687a5febaa797636d728230721d4b3d1405d19fbbc16298d9"},"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158":{"anonymous":false,"inputs":[{"indexed":false,"name":"scAddr","type":"bytes32"},{"indexed":false,"name":"codeHash","type":"bytes32"},{"indexed":false,"name":"initStateDeltaHash","type":"bytes32"}],"name":"SecretContractDeployed","type":"event","signature":"0x696a24a4e9187ea71b374178e4c33d07aabcafd87013f7d48010104de5f73158"}},"links":{"WorkersImpl":"0x3cB7b205A61CC7c938bfA20880B6b2f3e46cf5C7","PrincipalImpl":"0x7Ca96BaFD53E6322E37e48D9765c83fF23Da035d","TaskImpl":"0x42f4ee53C5cd7a6850b1a0d189423B5f38fF9f67","SecretContractImpl":"0x54A4F5d9912EF6e017c0d3802C69aEF3D06D9bFb"},"address":"0x744A739E961f45A72F0004e6F9d24611635ea0E2","transactionHash":"0x6850fe8afcddb6756fe59b33747a258dbe5f3a3326181c79238cee66fdc0a848"}},"schemaVersion":"3.0.15","updatedAt":"2019-10-18T15:27:46.960Z","devdoc":{"methods":{"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task computation","_optionalEthereumContractAddress":"Output state hash","_optionalEthereumData":"Output state hash","_outputHash":"Output state hash","_scAddr":"Secret contract address","_sig":"Worker\'s signature","_stateDeltaHash":"Input state delta hash","_taskId":"Unique taskId"}},"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)":{"params":{"_gasUsed":"Gas used for task computation","_outputHash":"Output state hash","_scAddr":"Secret contract address","_sig":"Worker\'s signature","_taskId":"Unique taskId"}},"countSecretContracts()":{"return":"Number of deployed secret contracts"},"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and predeployed bytecode hash","_nonce":"Locally-computed nonce value for this deployment"}},"createTaskRecord(bytes32,uint64,uint64,uint256)":{"params":{"_firstBlockNumber":"Locally-computed first block number of epoch","_gasLimit":"ENG gas limit","_gasPx":"ENG gas price in grains format (10 ** 8)","_inputsHash":"Hash of encrypted fn sig, encrypted ABI-encoded args, and contract address"}},"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"params":{"_codeHash":"Deployed bytecode hash","_gasUsed":"Gas used for task","_initStateDeltaHash":"Initial state delta hash as a result of the contract\'s constructor","_optionalEthereumContractAddress":"Initial state delta hash as a result of the contract\'s constructor","_optionalEthereumData":"Initial state delta hash as a result of the contract\'s constructor","_preCodeHash":"Predeployed bytecode hash","_sig":"Worker\'s signature for deployment","_taskId":"Task ID of corresponding deployment task (taskId == scAddr)"}},"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)":{"params":{"_codeHash":"Deployed bytecode hash","_gasUsed":"Gas used for task","_sig":"Worker\'s signature for deployment","_taskId":"Task ID of corresponding deployment task (taskId == scAddr)"}},"deposit(address,uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit","_custodian":"The worker\'s ETH address"}},"getActiveWorkers(uint256)":{"params":{"_blockNumber":"Block number"}},"getAllSecretContractAddresses()":{"return":"Array of secret contract addresses"},"getEpochSize()":{"return":"Epoch size"},"getFirstBlockNumber(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Block number"},"getReport(address)":{"params":{"_custodian":"The worker\'s custodian address"}},"getSecretContract(bytes32)":{"params":{"_scAddr":"Secret contract address"},"return":"SecretContract struct"},"getSecretContractAddresses(uint256,uint256)":{"params":{"_start":"Start of range","_stop":"End of range"},"return":"Subset of deployed secret contract addresses"},"getSigningAddress()":{"return":"Signing address"},"getTaskRecord(bytes32)":{"params":{"_taskId":"Unique identifier for a given task"},"return":"TaskRecord struct"},"getTaskTimeoutSize()":{"return":"task timeout"},"getUserTaskDeployments(address)":{"params":{"_sender":"Task sender\'s ethereum address"},"return":"Current number for task deployments for user"},"getWorker(address)":{"params":{"_worker":"Worker\'s ethereum address"},"return":"Worker struct"},"getWorkerFromSigningAddress(address)":{"params":{"_signer":"Worker\'s signing address"},"return":"Ethereum addressWorker struct"},"getWorkerGroup(uint256,bytes32)":{"params":{"_blockNumber":"Block number the task record was mined","_scAddr":"Secret contract address"},"return":"Selected workers\' addresses"},"getWorkerParams(uint256)":{"params":{"_blockNumber":"Block number"},"return":"Epoch\'s first block numberSeedArray of worker\'s signing addressesArray of worker\'s stakes"},"getWorkersParams()":{"return":"Array of WorkersParams structs"},"register(address,bytes,bytes)":{"params":{"_report":"The RLP encoded report returned by the IAS","_signature":"Signature","_signer":"The signer address, derived from the enclave public key"}},"returnFeesForTask(bytes32)":{"params":{"_taskId":"Unique taskId"}},"setWorkersParams(uint256,uint256,bytes)":{"params":{"_blockNumber":"Block number principal node is attempting to set worker params","_seed":"The random integer generated by the enclave","_sig":"Principal node\'s signature"}},"verifyReport(bytes,bytes)":{"params":{"_data":"The report itself","_signature":"The signature of the report"}},"withdraw(uint256)":{"params":{"_amount":"The amount of ENG, in grains format (10 ** 8), to deposit"}}}},"userdoc":{"methods":{"commitReceipt(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"notice":"Commit the computation task results on chain by first verifying the receipt and then the worker\'s signature. The task record is finalized and the worker is credited with the task fee."},"commitTaskFailure(bytes32,bytes32,bytes32,uint64,bytes)":{"notice":"Commit the computation task failure on chain - the task fee is transfered to the worker and the status is updated to indicate task failure."},"countSecretContracts()":{"notice":"Check if secret contract has been deployed"},"createDeploymentTaskRecord(bytes32,uint64,uint64,uint256,uint256)":{"notice":"Create task record for contract deployment. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce. We revert the process if the locally-generated nonce value does not match the on-chain-computed nonce since this indicates that the secret contract address the user has generated is invalid."},"createTaskRecord(bytes32,uint64,uint64,uint256)":{"notice":"Create task record for task for regular tasks. This is necessary for transferring task fee from sender to contract, generating the unique taskId, saving the block number when the record was mined, and incrementing the user\'s task deployment counter nonce."},"deploySecretContract(bytes32,bytes32,bytes32,bytes32,bytes,address,uint64,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deploySecretContractFailure(bytes32,bytes32,uint64,bytes)":{"notice":"Deploy secret contract from user, called by the worker."},"deposit(address,uint256)":{"notice":"Deposits ENG stake into contract from worker. Worker must be registered to do so."},"getActiveWorkers(uint256)":{"notice":"Get active workers before a certain block number"},"getAllSecretContractAddresses()":{"notice":"Get all secret contract addresses"},"getEpochSize()":{"notice":"Get the epoch block size"},"getFirstBlockNumber(uint256)":{"notice":"Get the first block number of an epoch that a given block number belongs to"},"getReport(address)":{"notice":"The RLP encoded report returned by the IAS server"},"getSecretContract(bytes32)":{"notice":"Get a SecretContract struct given a particular secret contract address"},"getSecretContractAddresses(uint256,uint256)":{"notice":"Get deployed secret contract addresses within a range"},"getSigningAddress()":{"notice":"Get signing address of calling worker"},"getTaskRecord(bytes32)":{"notice":"Get a TaskRecord struct given a particular task\'s ID"},"getTaskTimeoutSize()":{"notice":"Get the task timeout size"},"getUserTaskDeployments(address)":{"notice":"Get the current number/index (used as unique nonce value) of task deployments for a given user user"},"getWorker(address)":{"notice":"Get Worker struct from a given worker\'s ethereum address"},"getWorkerFromSigningAddress(address)":{"notice":"Get Worker struct from a given worker\'s signing address"},"getWorkerGroup(uint256,bytes32)":{"notice":"Select a group of workers for the computation task given the block number of the task record (implies the epoch) and the secret contract address."},"getWorkerParams(uint256)":{"notice":"Get worker params for an epoch given a particular block number"},"getWorkersParams()":{"notice":"Get epoch-based history of worker params information"},"login()":{"notice":"Login worker. Worker must be registered to do so, and must be logged in at start of epoch to be part of worker selection process."},"logout()":{"notice":"Logout worker. Worker must be logged in to do so."},"register(address,bytes,bytes)":{"notice":"Registers a new worker or change the signer parameters of an existing worker. This should be called by every worker (and the principal) node in order to receive tasks."},"returnFeesForTask(bytes32)":{"notice":"Return the task fee to the task creator when too many blocks have elapsed without task resolution."},"setWorkersParams(uint256,uint256,bytes)":{"notice":"Reparameterizing workers with a new seed This should be called for each epoch by the Principal node"},"verifyReport(bytes,bytes)":{"notice":"This verifies an IAS report with hard coded modulus and exponent of Intel\'s certificate."},"withdraw(uint256)":{"notice":"Withdraws ENG stake from contract back to worker. Worker must be registered to do so."}}}}')},function(e){e.exports=JSON.parse('{"contractName":"EnigmaToken","abi":[{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"INITIAL_SUPPLY","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"metadata":"{\\"compiler\\":{\\"version\\":\\"0.5.0+commit.1d4f565a\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"name\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"approve\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_from\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transferFrom\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"INITIAL_SUPPLY\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"decimals\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"addedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"increaseAllowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"owner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"symbol\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"subtractedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"decreaseAllowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transfer\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"_owner\\",\\"type\\":\\"address\\"},{\\"name\\":\\"_spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"allowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Transfer\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Approval\\",\\"type\\":\\"event\\"}],\\"devdoc\\":{\\"details\\":\\"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. \\",\\"methods\\":{\\"approve(address,uint256)\\":{\\"details\\":\\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\",\\"params\\":{\\"_spender\\":\\"The address which will spend the funds.\\",\\"_value\\":\\"The amount of tokens to be spent.\\"}},\\"balanceOf(address)\\":{\\"details\\":\\"Gets the balance of the specified address.\\",\\"params\\":{\\"owner\\":\\"The address to query the balance of.\\"},\\"return\\":\\"An uint256 representing the amount owned by the passed address.\\"},\\"constructor\\":{\\"details\\":\\"EnigmaToken Constructor Runs only on initial contract creation.\\"},\\"decimals()\\":{\\"return\\":\\"the number of decimals of the token.\\"},\\"decreaseAllowance(address,uint256)\\":{\\"details\\":\\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\\",\\"params\\":{\\"spender\\":\\"The address which will spend the funds.\\",\\"subtractedValue\\":\\"The amount of tokens to decrease the allowance by.\\"}},\\"increaseAllowance(address,uint256)\\":{\\"details\\":\\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\\",\\"params\\":{\\"addedValue\\":\\"The amount of tokens to increase the allowance by.\\",\\"spender\\":\\"The address which will spend the funds.\\"}},\\"name()\\":{\\"return\\":\\"the name of the token.\\"},\\"symbol()\\":{\\"return\\":\\"the symbol of the token.\\"},\\"totalSupply()\\":{\\"details\\":\\"Total number of tokens in existence\\"},\\"transfer(address,uint256)\\":{\\"details\\":\\"Transfer token for a specified address when not paused\\",\\"params\\":{\\"_to\\":\\"The address to transfer to.\\",\\"_value\\":\\"The amount to be transferred.\\"}},\\"transferFrom(address,address,uint256)\\":{\\"details\\":\\"Transfer tokens from one address to another when not paused\\",\\"params\\":{\\"_from\\":\\"address The address which you want to send tokens from\\",\\"_to\\":\\"address The address which you want to transfer to\\",\\"_value\\":\\"uint256 the amount of tokens to be transferred\\"}}},\\"title\\":\\"Enigma Token\\"},\\"userdoc\\":{\\"methods\\":{}}},\\"settings\\":{\\"compilationTarget\\":{\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/EnigmaToken.sol\\":\\"EnigmaToken\\"},\\"evmVersion\\":\\"byzantium\\",\\"libraries\\":{},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/EnigmaToken.sol\\":{\\"keccak256\\":\\"0x1d072d408420008c3d39b1006b9adbbe472f55fc314a8eb80d9861edfeb54c73\\",\\"urls\\":[\\"bzzr://9ec40fae3d143258454c5d7c25811f7969f1ef64abbf88ab96d753d6322906a4\\"]},\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\":{\\"keccak256\\":\\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\\",\\"urls\\":[\\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\":{\\"keccak256\\":\\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\\",\\"urls\\":[\\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\":{\\"keccak256\\":\\"0xe195405e9993d575173cdb5dd408db7459a026b9a98085c1a3b676f020f46584\\",\\"urls\\":[\\"bzzr://4463a0d4f49767f59c02f2a987b90d48e0d31b3ed3424f3e743496f102f96044\\"]},\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\":{\\"keccak256\\":\\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\\",\\"urls\\":[\\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\\"]}},\\"version\\":1}","bytecode":"0x608060405234801561001057600080fd5b50604080518082018252600681527f456e69676d6100000000000000000000000000000000000000000000000000006020808301918252835180850190945260038085527f454e47000000000000000000000000000000000000000000000000000000000091850191909152825192939260089261008e92916101aa565b5081516100a29060049060208501906101aa565b506005805460ff191660ff92909216919091179055506100d490503366354a6ba7a180006401000000006100d9810204565b610245565b600160a060020a03821615156100ee57600080fd5b600254610108908264010000000061071b61019182021704565b600255600160a060020a03821660009081526020819052604090205461013b908264010000000061071b61019182021704565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828201838110156101a357600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101eb57805160ff1916838001178555610218565b82800160010185558215610218579182015b828111156102185782518255916020019190600101906101fd565b50610224929150610228565b5090565b61024291905b80821115610224576000815560010161022e565b90565b61087c806102546000396000f3fe6080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806318160ddd1461019557806323b872dd146101bc5780632ff2e9dc146101ff578063313ce56714610214578063395093511461023f57806370a082311461027857806395d89b41146102ab578063a457c2d7146102c0578063a9059cbb146102f9578063dd62ed3e14610332575b600080fd5b3480156100ca57600080fd5b506100d361036d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015457600080fd5b506101816004803603604081101561016b57600080fd5b50600160a060020a038135169060200135610403565b604080519115158252519081900360200190f35b3480156101a157600080fd5b506101aa610416565b60408051918252519081900360200190f35b3480156101c857600080fd5b50610181600480360360608110156101df57600080fd5b50600160a060020a0381358116916020810135909116906040013561041c565b34801561020b57600080fd5b506101aa610431565b34801561022057600080fd5b5061022961043c565b6040805160ff9092168252519081900360200190f35b34801561024b57600080fd5b506101816004803603604081101561026257600080fd5b50600160a060020a038135169060200135610445565b34801561028457600080fd5b506101aa6004803603602081101561029b57600080fd5b5035600160a060020a03166104f5565b3480156102b757600080fd5b506100d3610510565b3480156102cc57600080fd5b50610181600480360360408110156102e357600080fd5b50600160a060020a038135169060200135610571565b34801561030557600080fd5b506101816004803603604081101561031c57600080fd5b50600160a060020a0381351690602001356105bc565b34801561033e57600080fd5b506101aa6004803603604081101561035557600080fd5b50600160a060020a03813581169160200135166105c8565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103f95780601f106103ce576101008083540402835291602001916103f9565b820191906000526020600020905b8154815290600101906020018083116103dc57829003601f168201915b5050505050905090565b600061040f83836105d4565b9392505050565b60025490565b6000610429848484610652565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b6000600160a060020a038316151561045c57600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610490908363ffffffff61071b16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103f95780601f106103ce576101008083540402835291602001916103f9565b6000600160a060020a038316151561058857600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610490908363ffffffff61072d16565b600061040f8383610742565b600061040f8383610758565b6000600160a060020a03831615156105eb57600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b600160a060020a0383166000908152600160209081526040808320338452909152812054610686908363ffffffff61072d16565b600160a060020a03851660009081526001602090815260408083203384529091529020556106b5848484610783565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60008282018381101561040f57600080fd5b60008282111561073c57600080fd5b50900390565b600061074f338484610783565b50600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a038216151561079857600080fd5b600160a060020a0383166000908152602081905260409020546107c1908263ffffffff61072d16565b600160a060020a0380851660009081526020819052604080822093909355908416815220546107f6908263ffffffff61071b16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fea165627a7a72305820484a135b6aa821a67cce1beeb5bf9292a5bb4bc26959707be169b6170ea172580029","deployedBytecode":"0x6080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806318160ddd1461019557806323b872dd146101bc5780632ff2e9dc146101ff578063313ce56714610214578063395093511461023f57806370a082311461027857806395d89b41146102ab578063a457c2d7146102c0578063a9059cbb146102f9578063dd62ed3e14610332575b600080fd5b3480156100ca57600080fd5b506100d361036d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015457600080fd5b506101816004803603604081101561016b57600080fd5b50600160a060020a038135169060200135610403565b604080519115158252519081900360200190f35b3480156101a157600080fd5b506101aa610416565b60408051918252519081900360200190f35b3480156101c857600080fd5b50610181600480360360608110156101df57600080fd5b50600160a060020a0381358116916020810135909116906040013561041c565b34801561020b57600080fd5b506101aa610431565b34801561022057600080fd5b5061022961043c565b6040805160ff9092168252519081900360200190f35b34801561024b57600080fd5b506101816004803603604081101561026257600080fd5b50600160a060020a038135169060200135610445565b34801561028457600080fd5b506101aa6004803603602081101561029b57600080fd5b5035600160a060020a03166104f5565b3480156102b757600080fd5b506100d3610510565b3480156102cc57600080fd5b50610181600480360360408110156102e357600080fd5b50600160a060020a038135169060200135610571565b34801561030557600080fd5b506101816004803603604081101561031c57600080fd5b50600160a060020a0381351690602001356105bc565b34801561033e57600080fd5b506101aa6004803603604081101561035557600080fd5b50600160a060020a03813581169160200135166105c8565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103f95780601f106103ce576101008083540402835291602001916103f9565b820191906000526020600020905b8154815290600101906020018083116103dc57829003601f168201915b5050505050905090565b600061040f83836105d4565b9392505050565b60025490565b6000610429848484610652565b949350505050565b66354a6ba7a1800081565b60055460ff1690565b6000600160a060020a038316151561045c57600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610490908363ffffffff61071b16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103f95780601f106103ce576101008083540402835291602001916103f9565b6000600160a060020a038316151561058857600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610490908363ffffffff61072d16565b600061040f8383610742565b600061040f8383610758565b6000600160a060020a03831615156105eb57600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b600160a060020a0383166000908152600160209081526040808320338452909152812054610686908363ffffffff61072d16565b600160a060020a03851660009081526001602090815260408083203384529091529020556106b5848484610783565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60008282018381101561040f57600080fd5b60008282111561073c57600080fd5b50900390565b600061074f338484610783565b50600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a038216151561079857600080fd5b600160a060020a0383166000908152602081905260409020546107c1908263ffffffff61072d16565b600160a060020a0380851660009081526020819052604080822093909355908416815220546107f6908263ffffffff61071b16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350505056fea165627a7a72305820484a135b6aa821a67cce1beeb5bf9292a5bb4bc26959707be169b6170ea172580029","sourceMap":"660:1642:2:-;;;913:105;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;405:163:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;493:12;;405:163;;;965:1:2;;493:12:28;;405:163;493:12;:::i;:::-;-1:-1:-1;515:16:28;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:28;:20;;-1:-1:-1;;541:20:28;;;;;;;;;;;;-1:-1:-1;978:33:2;;-1:-1:-1;984:10:2;753:17;978:5;;;;:33;:::i;:::-;660:1642;;6198:263:27;-1:-1:-1;;;;;6272:21:27;;;;6264:30;;;;;;6320:12;;:23;;6337:5;6320:16;;;;;;:23;:::i;:::-;6305:12;:38;-1:-1:-1;;;;;6374:18:27;;:9;:18;;;;;;;;;;;:29;;6397:5;6374:22;;;;;;:29;:::i;:::-;-1:-1:-1;;;;;6353:18:27;;:9;:18;;;;;;;;;;;:50;;;;6418:36;;;;;;;6353:18;;:9;;6418:36;;;;;;;;;;6198:263;;:::o;1431:145:26:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:26:o;660:1642:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;660:1642:2;;;-1:-1:-1;660:1642:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;","deployedSourceMap":"660:1642:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;628:81:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;628:81:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2026:128:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2026:128:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2026:128:2;;;;;;;;;;;;;;;;;;;;;;;;;;;936:89:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;936:89:27;;;;;;;;;;;;;;;;;;;;1620:150:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1620:150:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1620:150:2;;;;;;;;;;;;;;;;;;712:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;712:58:2;;;;930:81:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;930:81:28;;;;;;;;;;;;;;;;;;;;;;;4233:317:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4233:317:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4233:317:27;;;;;;;;;1234:104;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1234:104:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1234:104:27;-1:-1:-1;;;;;1234:104:27;;;771:85:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;771:85:28;;;;5058:327:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5058:327:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5058:327:27;;;;;;;;;1200:120:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1200:120:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1200:120:2;;;;;;;;;2160:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2160:139:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2160:139:2;;;;;;;;;;;628:81:28;697:5;690:12;;;;;;;;-1:-1:-1;;690:12:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;2026:128:2:-;2093:4;2116:31;2130:8;2140:6;2116:13;:31::i;:::-;2109:38;2026:128;-1:-1:-1;;;2026:128:2:o;936:89:27:-;1006:12;;936:89;:::o;1620:150:2:-;1702:4;1725:38;1744:5;1751:3;1756:6;1725:18;:38::i;:::-;1718:45;1620:150;-1:-1:-1;;;;1620:150:2:o;712:58::-;753:17;712:58;:::o;930:81:28:-;995:9;;;;930:81;:::o;4233:317:27:-;4313:4;-1:-1:-1;;;;;4337:21:27;;;;4329:30;;;;;;4411:10;4402:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4402:29:27;;;;;;;;;;:45;;4436:10;4402:45;:33;:45;:::i;:::-;4379:10;4370:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4370:29:27;;;;;;;;;;;;:77;;;4462:60;;;;;;4370:29;;4462:60;;;;;;;;;;;-1:-1:-1;4539:4:27;4233:317;;;;:::o;1234:104::-;-1:-1:-1;;;;;1315:16:27;1289:7;1315:16;;;;;;;;;;;;1234:104::o;771:85:28:-;842:7;835:14;;;;;;;;-1:-1:-1;;835:14:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;5058:327:27;5143:4;-1:-1:-1;;;;;5167:21:27;;;;5159:30;;;;;;5241:10;5232:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5232:29:27;;;;;;;;;;:50;;5266:15;5232:50;:33;:50;:::i;1200:120:2:-;1263:4;1286:27;1301:3;1306:6;1286:14;:27::i;2160:139::-;2234:7;2260:32;2276:6;2283:8;2260:15;:32::i;2735:238:27:-;2800:4;-1:-1:-1;;;;;2824:21:27;;;;2816:30;;;;;;2866:10;2857:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2857:29:27;;;;;;;;;;;;:37;;;2909:36;;;;;;;2857:29;;2866:10;2909:36;;;;;;;;;;;-1:-1:-1;2962:4:27;2735:238;;;;:::o;3436:294::-;-1:-1:-1;;;;;3560:14:27;;3515:4;3560:14;;;:8;:14;;;;;;;;3575:10;3560:26;;;;;;;;:37;;3591:5;3560:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3531:14:27;;;;;;:8;:14;;;;;;;;3546:10;3531:26;;;;;;;:66;3607:26;3540:4;3623:2;3627:5;3607:9;:26::i;:::-;-1:-1:-1;;;;;3648:54:27;;3675:14;;;;:8;:14;;;;;;;;3663:10;3675:26;;;;;;;;;;;3648:54;;;;;;;3663:10;;3648:54;;;;;;;;;;;;-1:-1:-1;3719:4:27;3436:294;;;;;:::o;1431:145:26:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;1205:145;1263:7;1290:6;;;;1282:15;;;;;;-1:-1:-1;1319:5:26;;;1205:145::o;1962:137:27:-;2023:4;2039:32;2049:10;2061:2;2065:5;2039:9;:32::i;:::-;-1:-1:-1;2088:4:27;1962:137;;;;:::o;1669:129::-;-1:-1:-1;;;;;1767:15:27;;;1741:7;1767:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1669:129::o;5599:256::-;-1:-1:-1;;;;;5686:16:27;;;;5678:25;;;;;;-1:-1:-1;;;;;5732:15:27;;:9;:15;;;;;;;;;;;:26;;5752:5;5732:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5714:15:27;;;:9;:15;;;;;;;;;;;:44;;;;5784:13;;;;;;;:24;;5802:5;5784:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5768:13:27;;;:9;:13;;;;;;;;;;;;:40;;;;5823:25;;;;;;;5768:13;;5823:25;;;;;;;;;;;;;5599:256;;;:::o","source":"pragma solidity ^0.5.0;\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\\";\\nimport \\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\\";\\n\\n/**\\n * @title Enigma Token\\n * @dev ERC20 Enigma Token (ENG)\\n *\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\n * units referred to as \'Grains\'.\\n *\\n * ENG are displayed using 8 decimal places of precision.\\n *\\n * 1 ENG is equivalent to:\\n *   100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n *\\n * 150 million ENG (total supply) is equivalent to:\\n *   15000000000000000 == 150000000 * 10**8 == 1e17\\n *\\n * All initial ENG Grains are assigned to the creator of\\n * this contract.\\n *\\n */\\ncontract EnigmaToken is ERC20, ERC20Detailed {\\n\\n    uint256 public constant INITIAL_SUPPLY = 150000000 * 10**8;  // 150 million ENG specified in Grains\\n\\n    /**\\n    * @dev EnigmaToken Constructor\\n    * Runs only on initial contract creation.\\n    */\\n    constructor() public ERC20Detailed(\\"Enigma\\", \\"ENG\\", 8) {\\n        _mint(msg.sender, INITIAL_SUPPLY);\\n    }\\n\\n    /**\\n    * @dev Transfer token for a specified address when not paused\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint256 _value) public returns (bool) {\\n        return super.transfer(_to, _value);\\n    }\\n\\n    /**\\n    * @dev Transfer tokens from one address to another when not paused\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint256 the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\\n        return super.transferFrom(_from, _to, _value);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint256 _value) public returns (bool) {\\n        return super.approve(_spender, _value);\\n    }\\n\\n    function allowance(address _owner, address _spender) public view returns (uint256) {\\n        return super.allowance(_owner,_spender);\\n    }\\n\\n}","sourcePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/EnigmaToken.sol","ast":{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1835]},"id":1836,"nodeType":"SourceUnit","nodes":[{"id":1739,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1740,"nodeType":"ImportDirective","scope":1836,"sourceUnit":13349,"src":"24:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1741,"nodeType":"ImportDirective","scope":1836,"sourceUnit":13407,"src":"88:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1742,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":13348,"src":"684:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$13348","typeString":"contract ERC20"}},"id":1743,"nodeType":"InheritanceSpecifier","src":"684:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1744,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":13406,"src":"691:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$13406","typeString":"contract ERC20Detailed"}},"id":1745,"nodeType":"InheritanceSpecifier","src":"691:13:2"}],"contractDependencies":[13348,13406,13475],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1835,"linearizedBaseContracts":[1835,13406,13348,13475],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1752,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1835,"src":"712:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"765:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"769:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"765:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"753:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1766,"nodeType":"Block","src":"968:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1761,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13490,"src":"984:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"984:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1763,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"996:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1760,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13263,"src":"978:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"978:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1765,"nodeType":"ExpressionStatement","src":"978:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1767,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"948:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"958:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"965:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1758,"modifierName":{"argumentTypes":null,"id":1754,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13406,"src":"934:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$13406_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"934:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[],"src":"924:2:2"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[],"src":"968:0:2"},"scope":1835,"src":"913:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1782,"nodeType":"Block","src":"1269:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1778,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"1301:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1779,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"1306:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1776,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"1286:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":12992,"src":"1286:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1286:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1775,"id":1781,"nodeType":"Return","src":"1279:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1783,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"name":"_to","nodeType":"VariableDeclaration","scope":1783,"src":"1218:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1771,"name":"_value","nodeType":"VariableDeclaration","scope":1783,"src":"1231:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"1231:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1217:29:2"},"returnParameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"name":"","nodeType":"VariableDeclaration","scope":1783,"src":"1263:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1773,"name":"bool","nodeType":"ElementaryTypeName","src":"1263:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1262:6:2"},"scope":1835,"src":"1200:120:2","stateMutability":"nonpayable","superFunction":12992,"visibility":"public"},{"body":{"id":1801,"nodeType":"Block","src":"1708:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1796,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"1744:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1797,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"1751:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1798,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"1756:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1794,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"1725:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":13077,"src":"1725:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1725:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1793,"id":1800,"nodeType":"Return","src":"1718:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1802,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"name":"_from","nodeType":"VariableDeclaration","scope":1802,"src":"1642:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1784,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1787,"name":"_to","nodeType":"VariableDeclaration","scope":1802,"src":"1657:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1786,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1789,"name":"_value","nodeType":"VariableDeclaration","scope":1802,"src":"1670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1641:44:2"},"returnParameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1792,"name":"","nodeType":"VariableDeclaration","scope":1802,"src":"1702:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1791,"name":"bool","nodeType":"ElementaryTypeName","src":"1702:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1701:6:2"},"scope":1835,"src":"1620:150:2","stateMutability":"nonpayable","superFunction":13077,"visibility":"public"},{"body":{"id":1817,"nodeType":"Block","src":"2099:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1813,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"2130:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1814,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"2140:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1811,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"2116:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":13028,"src":"2116:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2116:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1810,"id":1816,"nodeType":"Return","src":"2109:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1818,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"name":"_spender","nodeType":"VariableDeclaration","scope":1818,"src":"2043:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1803,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1806,"name":"_value","nodeType":"VariableDeclaration","scope":1818,"src":"2061:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2042:34:2"},"returnParameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"name":"","nodeType":"VariableDeclaration","scope":1818,"src":"2093:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1808,"name":"bool","nodeType":"ElementaryTypeName","src":"2093:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2092:6:2"},"scope":1835,"src":"2026:128:2","stateMutability":"nonpayable","superFunction":13028,"visibility":"public"},{"body":{"id":1833,"nodeType":"Block","src":"2243:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1829,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"2276:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1830,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"2283:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1827,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"2260:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":12973,"src":"2260:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2260:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1826,"id":1832,"nodeType":"Return","src":"2253:39:2"}]},"documentation":null,"id":1834,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"name":"_owner","nodeType":"VariableDeclaration","scope":1834,"src":"2179:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1819,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1822,"name":"_spender","nodeType":"VariableDeclaration","scope":1834,"src":"2195:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1821,"name":"address","nodeType":"ElementaryTypeName","src":"2195:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2178:34:2"},"returnParameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"name":"","nodeType":"VariableDeclaration","scope":1834,"src":"2234:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1824,"name":"uint256","nodeType":"ElementaryTypeName","src":"2234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2233:9:2"},"scope":1835,"src":"2160:139:2","stateMutability":"view","superFunction":12973,"visibility":"public"}],"scope":1836,"src":"660:1642:2"}],"src":"0:2302:2"},"legacyAST":{"absolutePath":"/Volumes/Data/Users/victoris/Desktop/Enigma/user-install/enigma-contract/contracts/EnigmaToken.sol","exportedSymbols":{"EnigmaToken":[1835]},"id":1836,"nodeType":"SourceUnit","nodes":[{"id":1739,"literals":["solidity","^","0.5",".0"],"nodeType":"PragmaDirective","src":"0:23:2"},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol","id":1740,"nodeType":"ImportDirective","scope":1836,"sourceUnit":13349,"src":"24:63:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","file":"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol","id":1741,"nodeType":"ImportDirective","scope":1836,"sourceUnit":13407,"src":"88:71:2","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":1742,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":13348,"src":"684:5:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$13348","typeString":"contract ERC20"}},"id":1743,"nodeType":"InheritanceSpecifier","src":"684:5:2"},{"arguments":null,"baseName":{"contractScope":null,"id":1744,"name":"ERC20Detailed","nodeType":"UserDefinedTypeName","referencedDeclaration":13406,"src":"691:13:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Detailed_$13406","typeString":"contract ERC20Detailed"}},"id":1745,"nodeType":"InheritanceSpecifier","src":"691:13:2"}],"contractDependencies":[13348,13406,13475],"contractKind":"contract","documentation":"@title Enigma Token\\n@dev ERC20 Enigma Token (ENG)\\n * ENG Tokens are divisible by 1e8 (100,000,000) base\\nunits referred to as \'Grains\'.\\n * ENG are displayed using 8 decimal places of precision.\\n * 1 ENG is equivalent to:\\n  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains\\n * 150 million ENG (total supply) is equivalent to:\\n  15000000000000000 == 150000000 * 10**8 == 1e17\\n * All initial ENG Grains are assigned to the creator of\\nthis contract.\\n ","fullyImplemented":true,"id":1835,"linearizedBaseContracts":[1835,13406,13348,13475],"name":"EnigmaToken","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1752,"name":"INITIAL_SUPPLY","nodeType":"VariableDeclaration","scope":1835,"src":"712:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"},"id":1751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"313530303030303030","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:9:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_150000000_by_1","typeString":"int_const 150000000"},"value":"150000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"765:2:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"38","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"769:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"765:5:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"753:17:2","typeDescriptions":{"typeIdentifier":"t_rational_15000000000000000_by_1","typeString":"int_const 15000000000000000"}},"visibility":"public"},{"body":{"id":1766,"nodeType":"Block","src":"968:50:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1761,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13490,"src":"984:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"984:10:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"argumentTypes":null,"id":1763,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"996:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1760,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13263,"src":"978:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"978:33:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1765,"nodeType":"ExpressionStatement","src":"978:33:2"}]},"documentation":"@dev EnigmaToken Constructor\\nRuns only on initial contract creation.","id":1767,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"argumentTypes":null,"hexValue":"456e69676d61","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"948:8:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ba83be9d4f169561f32dcb185273e3b59336406003211080ed463fe7723a7d3c","typeString":"literal_string \\"Enigma\\""},"value":"Enigma"},{"argumentTypes":null,"hexValue":"454e47","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"958:5:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d79280fda08cc03aea482f66454ee9e69c82cdd5050db969689686719415114f","typeString":"literal_string \\"ENG\\""},"value":"ENG"},{"argumentTypes":null,"hexValue":"38","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"965:1:2","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"id":1758,"modifierName":{"argumentTypes":null,"id":1754,"name":"ERC20Detailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13406,"src":"934:13:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Detailed_$13406_$","typeString":"type(contract ERC20Detailed)"}},"nodeType":"ModifierInvocation","src":"934:33:2"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[],"src":"924:2:2"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[],"src":"968:0:2"},"scope":1835,"src":"913:105:2","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1782,"nodeType":"Block","src":"1269:51:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1778,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"1301:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1779,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"1306:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1776,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"1286:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":12992,"src":"1286:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1286:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1775,"id":1781,"nodeType":"Return","src":"1279:34:2"}]},"documentation":"@dev Transfer token for a specified address when not paused\\n@param _to The address to transfer to.\\n@param _value The amount to be transferred.","id":1783,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"name":"_to","nodeType":"VariableDeclaration","scope":1783,"src":"1218:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1771,"name":"_value","nodeType":"VariableDeclaration","scope":1783,"src":"1231:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"1231:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1217:29:2"},"returnParameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"name":"","nodeType":"VariableDeclaration","scope":1783,"src":"1263:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1773,"name":"bool","nodeType":"ElementaryTypeName","src":"1263:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1262:6:2"},"scope":1835,"src":"1200:120:2","stateMutability":"nonpayable","superFunction":12992,"visibility":"public"},{"body":{"id":1801,"nodeType":"Block","src":"1708:62:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1796,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"1744:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1797,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"1751:3:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1798,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"1756:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1794,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"1725:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":13077,"src":"1725:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1725:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1793,"id":1800,"nodeType":"Return","src":"1718:45:2"}]},"documentation":"@dev Transfer tokens from one address to another when not paused\\n@param _from address The address which you want to send tokens from\\n@param _to address The address which you want to transfer to\\n@param _value uint256 the amount of tokens to be transferred","id":1802,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"name":"_from","nodeType":"VariableDeclaration","scope":1802,"src":"1642:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1784,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1787,"name":"_to","nodeType":"VariableDeclaration","scope":1802,"src":"1657:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1786,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1789,"name":"_value","nodeType":"VariableDeclaration","scope":1802,"src":"1670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"1641:44:2"},"returnParameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1792,"name":"","nodeType":"VariableDeclaration","scope":1802,"src":"1702:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1791,"name":"bool","nodeType":"ElementaryTypeName","src":"1702:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1701:6:2"},"scope":1835,"src":"1620:150:2","stateMutability":"nonpayable","superFunction":13077,"visibility":"public"},{"body":{"id":1817,"nodeType":"Block","src":"2099:55:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1813,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"2130:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1814,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"2140:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1811,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"2116:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":13028,"src":"2116:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2116:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1810,"id":1816,"nodeType":"Return","src":"2109:38:2"}]},"documentation":"@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.\\n@param _spender The address which will spend the funds.\\n@param _value The amount of tokens to be spent.","id":1818,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"name":"_spender","nodeType":"VariableDeclaration","scope":1818,"src":"2043:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1803,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1806,"name":"_value","nodeType":"VariableDeclaration","scope":1818,"src":"2061:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2042:34:2"},"returnParameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"name":"","nodeType":"VariableDeclaration","scope":1818,"src":"2093:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1808,"name":"bool","nodeType":"ElementaryTypeName","src":"2093:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2092:6:2"},"scope":1835,"src":"2026:128:2","stateMutability":"nonpayable","superFunction":13028,"visibility":"public"},{"body":{"id":1833,"nodeType":"Block","src":"2243:56:2","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1829,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"2276:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1830,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"2283:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1827,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13548,"src":"2260:5:2","typeDescriptions":{"typeIdentifier":"t_super$_EnigmaToken_$1835","typeString":"contract super EnigmaToken"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":12973,"src":"2260:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2260:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1826,"id":1832,"nodeType":"Return","src":"2253:39:2"}]},"documentation":null,"id":1834,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"name":"_owner","nodeType":"VariableDeclaration","scope":1834,"src":"2179:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1819,"name":"address","nodeType":"ElementaryTypeName","src":"2179:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1822,"name":"_spender","nodeType":"VariableDeclaration","scope":1834,"src":"2195:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1821,"name":"address","nodeType":"ElementaryTypeName","src":"2195:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"2178:34:2"},"returnParameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"name":"","nodeType":"VariableDeclaration","scope":1834,"src":"2234:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1824,"name":"uint256","nodeType":"ElementaryTypeName","src":"2234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2233:9:2"},"scope":1835,"src":"2160:139:2","stateMutability":"view","superFunction":12973,"visibility":"public"}],"scope":1836,"src":"660:1642:2"}],"src":"0:2302:2"},"compiler":{"name":"solc","version":"0.5.0+commit.1d4f565a.Emscripten.clang"},"networks":{"4447":{"events":{"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef":{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event","signature":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925":{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event","signature":"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"}},"links":{},"address":"0xc3c26d60b9028D9525589F81069f8c4E9AFEf0d1","transactionHash":"0x361431a3f09105edbd2e3a2c3d609a567fddb54c556c726e3b1e05cf0e42357a"},"5777":{"events":{"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef":{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event","signature":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925":{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event","signature":"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"}},"links":{},"address":"0xaAB4eCc53b9B6Eee785303EaF7691cF20120318C","transactionHash":"0x23e06b59f52b4058a038b692eaadfd40c288c4a8442f16819b3c07b7fc946b53"}},"schemaVersion":"3.0.15","updatedAt":"2019-10-18T15:27:46.929Z","devdoc":{"details":"ERC20 Enigma Token (ENG) * ENG Tokens are divisible by 1e8 (100,000,000) base units referred to as \'Grains\'. * ENG are displayed using 8 decimal places of precision. * 1 ENG is equivalent to:  100000000 == 1 * 10**8 == 1e8 == One Hundred Million Grains * 150 million ENG (total supply) is equivalent to:  15000000000000000 == 150000000 * 10**8 == 1e17 * All initial ENG Grains are assigned to the creator of this contract. ","methods":{"approve(address,uint256)":{"details":"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender when not paused.","params":{"_spender":"The address which will spend the funds.","_value":"The amount of tokens to be spent."}},"balanceOf(address)":{"details":"Gets the balance of the specified address.","params":{"owner":"The address to query the balance of."},"return":"An uint256 representing the amount owned by the passed address."},"constructor":{"details":"EnigmaToken Constructor Runs only on initial contract creation."},"decimals()":{"return":"the number of decimals of the token."},"decreaseAllowance(address,uint256)":{"details":"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.","params":{"spender":"The address which will spend the funds.","subtractedValue":"The amount of tokens to decrease the allowance by."}},"increaseAllowance(address,uint256)":{"details":"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.","params":{"addedValue":"The amount of tokens to increase the allowance by.","spender":"The address which will spend the funds."}},"name()":{"return":"the name of the token."},"symbol()":{"return":"the symbol of the token."},"totalSupply()":{"details":"Total number of tokens in existence"},"transfer(address,uint256)":{"details":"Transfer token for a specified address when not paused","params":{"_to":"The address to transfer to.","_value":"The amount to be transferred."}},"transferFrom(address,address,uint256)":{"details":"Transfer tokens from one address to another when not paused","params":{"_from":"address The address which you want to send tokens from","_to":"address The address which you want to transfer to","_value":"uint256 the amount of tokens to be transferred"}}},"title":"Enigma Token"},"userdoc":{"methods":{}}}')},function(e,t){e.exports=require("jayson/lib/client/browser")},function(e,t){e.exports=require("axios")},function(e,t){e.exports=require("retry")},function(e,t){e.exports=require("ethereumjs-abi")},function(e,t,n){e.exports=n(17)},function(e,t){e.exports=require("core-js/stable")},function(e,t){e.exports=require("regenerator-runtime/runtime")},function(e,t,n){"use strict";n.r(t);var r={};n.r(r),n.d(r,"ERROR",function(){return $}),n.d(r,"DEPOSIT_TRANSACTION_HASH",function(){return v}),n.d(r,"DEPOSIT_CONFIRMATION",function(){return E}),n.d(r,"DEPOSIT_RECEIPT",function(){return C}),n.d(r,"WITHDRAW_TRANSACTION_HASH",function(){return V}),n.d(r,"WITHDRAW_CONFIRMATION",function(){return x}),n.d(r,"WITHDRAW_RECEIPT",function(){return L}),n.d(r,"LOGIN_TRANSACTION_HASH",function(){return N}),n.d(r,"LOGIN_CONFIRMATION",function(){return P}),n.d(r,"LOGIN_RECEIPT",function(){return w}),n.d(r,"LOGOUT_TRANSACTION_HASH",function(){return R}),n.d(r,"LOGOUT_CONFIRMATION",function(){return A}),n.d(r,"LOGOUT_RECEIPT",function(){return W}),n.d(r,"DEPLOY_SC_ADDR_RESULT",function(){return q}),n.d(r,"DEPLOY_SC_ETH_TRANSACTION_HASH",function(){return M}),n.d(r,"DEPLOY_SC_ETH_CONFIRMATION",function(){return F}),n.d(r,"DEPLOY_SC_ETH_RECEIPT",function(){return H}),n.d(r,"DEPLOY_SC_ENG_RECEIPT",function(){return B}),n.d(r,"CREATE_TASK",function(){return U}),n.d(r,"CREATE_TASK_INPUT",function(){return G}),n.d(r,"CREATE_TASK_RECORD_TRANSACTION_HASH",function(){return O}),n.d(r,"CREATE_TASK_RECORD_CONFIRMATION",function(){return z}),n.d(r,"CREATE_TASK_RECORD_RECEIPT",function(){return K}),n.d(r,"CREATE_TASK_RECORD",function(){return j}),n.d(r,"SEND_TASK_INPUT_RESULT",function(){return Y}),n.d(r,"POLL_TASK_STATUS_RESULT",function(){return J}),n.d(r,"GET_TASK_RESULT_RESULT",function(){return Z}),n.d(r,"DEPLOY_SECRET_CONTRACT_RESULT",function(){return X}),n.d(r,"RETURN_FEES_FOR_TASK_RECEIPT",function(){return Q}),n.d(r,"RETURN_FEES_FOR_TASK",function(){return ee}),n.d(r,"POLL_TASK_ETH_RESULT",function(){return te}),n.d(r,"RPC_SEND_TASK_INPUT",function(){return ne}),n.d(r,"RPC_DEPLOY_SECRET_CONTRACT",function(){return re}),n.d(r,"RPC_GET_TASK_RESULT",function(){return ae}),n.d(r,"RPC_GET_TASK_STATUS",function(){return ie}),n.d(r,"GET_TASK_RESULT_SUCCESS",function(){return se}),n.d(r,"GET_TASK_RESULT_FAILED",function(){return oe}),n.d(r,"GET_TASK_RESULT_UNVERIFIED",function(){return de}),n.d(r,"GET_TASK_RESULT_INPROGRESS",function(){return pe}),n.d(r,"ETH_STATUS_UNDEFINED",function(){return le}),n.d(r,"ETH_STATUS_CREATED",function(){return ce}),n.d(r,"ETH_STATUS_VERIFIED",function(){return ye}),n.d(r,"ETH_STATUS_FAILED",function(){return ue}),n.d(r,"ETH_STATUS_FAILED_ETH",function(){return fe}),n.d(r,"ETH_STATUS_FAILED_RETURN",function(){return me});n(15),n(16);var a=n(2),i=n.n(a),s=n(3),o=n.n(s),d=n(0),p=n.n(d),l=n(7),c=n.n(l),y=n(4),u=n(5),f=n.n(u);p.a.options.usePureJavaScript=!0;var m=c.a.ec;function _(e,t){var n=!0,r=!1,a=void 0;try{for(var s,o=t[Symbol.iterator]();!(n=(s=o.next()).done);n=!0){var d=s.value;d=g(d),e+=i.a.BigInt(d.length/2).toString(16).padStart(16,"0")+d}}catch(e){r=!0,a=e}finally{try{n||null==o.return||o.return()}finally{if(r)throw a}}return e}function b(e,t){var n=!0,r=!1,a=void 0;try{for(var s,o=t[Symbol.iterator]();!(n=(s=o.next()).done);n=!0){var d=s.value;e=_(e+=i.a.BigInt(d.length).toString(16).padStart(16,"0"),d)}}catch(e){r=!0,a=e}finally{try{n||null==o.return||o.return()}finally{if(r)throw a}}return e}function g(e){return"0x"==e.substring(0,2)?e.substring(2):e}var T={test:function(){return"hello2"},generateScAddr:function(e,t){return o.a.soliditySha3({t:"bytes",v:e},{t:"uint",v:t})},hash:function(e){var t=_("",e);return o.a.soliditySha3({t:"bytes",v:t})},principalHash:function(e,t,n,r){var a="";return a=b(a=_(a,[e,t]),[n,r]),o.a.soliditySha3({t:"bytes",v:a})},commitReceiptsHash:function(e,t,n,r,a,i,s,d,p){var l="";return l=_(l,[e]),l=_(l=b(l,[t]),[n]),l=_(l=b(l,[r,a,i]),[s,d,p]),o.a.soliditySha3({t:"bytes",v:l})},getDerivedKey:function(e,t){var n=new m("secp256k1");128==e.length&&(e="04"+e);var r=n.keyFromPrivate(t,"hex"),a=n.keyFromPublic(e,"hex").getPublic().mul(r.getPrivate()),i=2|(a.getY().isOdd()?1:0),s=a.getX(),o=y.Buffer.from([i]),d=s.toArrayLike(y.Buffer,"be",32),l=p.a.md.sha256.create();return l.update(o.toString("binary")),l.update(d.toString("binary")),l.digest().toHex()},encryptMessage:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:p.a.random.getBytesSync(12),r=p.a.util.hexToBytes(e),a=p.a.cipher.createCipher("AES-GCM",r);return a.start({iv:n}),a.update(p.a.util.createBuffer(t)),a.finish(),a.output.putBuffer(a.mode.tag).putBytes(n).toHex()},decryptMessage:function(e,t){var n=p.a.util.hexToBytes(e),r=y.Buffer.from(t,"hex"),a=p.a.util.createBuffer(r.slice(-12)),i=p.a.util.createBuffer(r.slice(-28,-12)),s=p.a.cipher.createDecipher("AES-GCM",n);if(s.start({iv:a,tag:i}),s.update(p.a.util.createBuffer(r.slice(0,-28))),s.finish())return s.output.toHex();throw new Error("decipher did not finish")},toGrains:function(e){return e*Math.pow(10,8)}};T.remove0x=g,T.hexToAscii=function(e){if("number"!=typeof e&&"string"!=typeof e)return"";e=e.toString().replace(/\s+/gi,"");for(var t=[],n=0;n<e.length;n+=2){var r=parseInt(e.substr(n,2),16);isNaN(r)||0===r||t.push(String.fromCharCode(r))}return t.join("")},T.sleep=function(e){return new Promise(function(t){return setTimeout(t,e)})},T.gzip=function(e){return new Promise(function(t,n){f.a.gzip(e,function(e,r){e?n(e):t(r)})})},T.gunzip=function(e){return new Promise(function(t,n){f.a.gunzip(e,function(e,r){e?n(e):t(r)})})};var D=T,S=n(8),I=n(9),k=n(1),h=n.n(k),$="error",v="depositTransactionHash",E="depositConfirmation",C="depositReceipt",V="withdrawTransactionHash",x="withdrawConfirmation",L="withdrawReceipt",N="loginTransactionHash",P="loginConfirmation",w="loginReceipt",R="logoutTransactionHash",A="logoutConfirmation",W="logoutReceipt",q="deploySCAddrResult",M="deploySCEthTransactionHash",F="deploySCEthConfirmation",H="deploySCEthReceipt",B="deploySCEngReceipt",U="createTask",G="createTaskInput",O="createTaskRecordTransactionHash",z="createTaskRecordConfirmation",K="createTaskRecordReceipt",j="createTaskRecord",Y="sendTaskInputResult",J="pollTaskStatusResult",Z="getTaskResultResult",X="deploySecretContractResult",Q="returnFeesForTaskReceipt",ee="returnFeesForTask",te="pollTaskETHResult",ne="sendTaskInput",re="deploySecretContract",ae="getTaskResult",ie="getTaskStatus",se="SUCCESS",oe="FAILED",de="UNVERIFIED",pe="INPROGRESS",le=0,ce=1,ye=2,ue=3,fe=4,me=5;function _e(e,t,n,r,a,i,s){try{var o=e[i](s),d=o.value}catch(e){return void n(e)}o.done?t(d):Promise.resolve(d).then(r,a)}function be(e){return function(){var t=this,n=arguments;return new Promise(function(r,a){var i=e.apply(t,n);function s(e){_e(i,r,a,s,o,"next",e)}function o(e){_e(i,r,a,s,o,"throw",e)}s(void 0)})}}function ge(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var Te=function(){function e(t,n,r,a,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.enigmaContract=n,this.tokenContract=r,this.txDefaults=a,this.enigma=i}var t,n,r,a,i,s,o,d,p,l,c,y,u,f,m,_;return t=e,(n=[{key:"findBySigningAddress",value:(_=be(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorkerFromSigningAddress(t).call();case 2:return n=e.sent,e.abrupt("return",{account:n[0],status:parseInt(n[1][1]),report:n[1][2],balance:parseInt(n[1][3]),logs:n[1][4]});case 4:case"end":return e.stop()}},e,this)})),function(e){return _.apply(this,arguments)})},{key:"getWorkerStatus",value:(m=be(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorker(t).call();case 2:return n=e.sent,e.abrupt("return",parseInt(n.status));case 4:case"end":return e.stop()}},e,this)})),function(e){return m.apply(this,arguments)})},{key:"isDeployed",value:(f=be(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.getSecretContract(t).call();case 3:return e.t1=e.sent.status,e.t2=(0,e.t0)(e.t1),e.abrupt("return",1===e.t2);case 6:case"end":return e.stop()}},e,this)})),function(e){return f.apply(this,arguments)})},{key:"countSecretContracts",value:(u=be(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.countSecretContracts().call();case 3:return e.t1=e.sent,e.abrupt("return",(0,e.t0)(e.t1));case 5:case"end":return e.stop()}},e,this)})),function(){return u.apply(this,arguments)})},{key:"getSecretContractAddresses",value:(y=be(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContractAddresses(t,n).call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(e,t){return y.apply(this,arguments)})},{key:"getAllSecretContractAddresses",value:(c=be(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getAllSecretContractAddresses().call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(){return c.apply(this,arguments)})},{key:"getCodeHash",value:(l=be(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.abrupt("return",e.sent.codeHash);case 3:case"end":return e.stop()}},e,this)})),function(e){return l.apply(this,arguments)})},{key:"countStateDeltas",value:(p=be(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.abrupt("return",e.sent.stateDeltaHashes.length);case 3:case"end":return e.stop()}},e,this)})),function(e){return p.apply(this,arguments)})},{key:"getStateDeltaHash",value:(d=be(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.abrupt("return",e.sent.stateDeltaHashes[e.t0]);case 4:case"end":return e.stop()}},e,this)})),function(e,t){return d.apply(this,arguments)})},{key:"getStateDeltaHashes",value:(o=be(regeneratorRuntime.mark(function e(t,n,r){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.t1=r,e.abrupt("return",e.sent.stateDeltaHashes.slice(e.t0,e.t1));case 5:case"end":return e.stop()}},e,this)})),function(e,t,n){return o.apply(this,arguments)})},{key:"isValidDeltaHash",value:(s=be(regeneratorRuntime.mark(function e(t,n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getSecretContract(t).call();case 2:return e.t0=n,e.abrupt("return",e.sent.stateDeltaHashes.includes(e.t0));case 4:case"end":return e.stop()}},e,this)})),function(e,t){return s.apply(this,arguments)})},{key:"login",value:function(e){var t=this,n=new h.a;return be(regeneratorRuntime.mark(function r(){return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,t.enigmaContract.methods.login().send({from:e}).on("transactionHash",function(e){n.emit(N,e)}).on("confirmation",function(e,t){n.emit(P,e,t)}).on("receipt",function(e){n.emit(w,e)});case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit($,r.t0.message);case 8:case"end":return r.stop()}},r,null,[[0,5]])}))(),n}},{key:"logout",value:function(e){var t=this,n=new h.a;return be(regeneratorRuntime.mark(function r(){return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,t.enigmaContract.methods.logout().send({from:e}).on("transactionHash",function(e){n.emit(R,e)}).on("confirmation",function(e,t){n.emit(A,e,t)}).on("receipt",function(e){n.emit(W,e)});case 3:r.next=8;break;case 5:r.prev=5,r.t0=r.catch(0),n.emit($,r.t0.message);case 8:case"end":return r.stop()}},r,null,[[0,5]])}))(),n}},{key:"deposit",value:function(e,t){var n=this,r=new h.a;return be(regeneratorRuntime.mark(function a(){var i;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,n.tokenContract.methods.balanceOf(e).call();case 2:if(!(a.sent<t)){a.next=7;break}return"Not enough tokens in wallet",r.emit("error",{name:"NotEnoughTokens",message:"Not enough tokens in wallet"}),a.abrupt("return");case 7:return a.next=9,n.tokenContract.methods.approve(n.enigmaContract.options.address,t).send({from:e});case 9:return a.prev=9,a.next=12,n.enigmaContract.methods.deposit(e,t).send({from:e}).on("transactionHash",function(e){r.emit(v,e)}).on("confirmation",function(e,t){r.emit(E,e,t)});case 12:i=a.sent,r.emit(C,i),a.next=19;break;case 16:a.prev=16,a.t0=a.catch(9),r.emit($,a.t0.message);case 19:case"end":return a.stop()}},a,null,[[9,16]])}))(),r}},{key:"withdraw",value:function(e,t){var n=this,r=new h.a;return be(regeneratorRuntime.mark(function a(){return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,n.enigmaContract.methods.withdraw(t).send({from:e}).on("transactionHash",function(e){r.emit(V,e)}).on("confirmation",function(e,t){r.emit(x,e,t)}).on("receipt",function(e){r.emit(L,e)});case 3:a.next=8;break;case 5:a.prev=5,a.t0=a.catch(0),r.emit($,a.t0.message);case 8:case"end":return a.stop()}},a,null,[[0,5]])}))(),r}},{key:"getBalance",value:(i=be(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=parseInt,e.next=3,this.enigmaContract.methods.getWorker(t).call();case 3:return e.t1=e.sent.balance,e.abrupt("return",(0,e.t0)(e.t1));case 5:case"end":return e.stop()}},e,this)})),function(e){return i.apply(this,arguments)})},{key:"getWorkerSignerAddr",value:(a=be(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getWorker(t).call();case 2:return e.abrupt("return",e.sent.signer);case 3:case"end":return e.stop()}},e,this)})),function(e){return a.apply(this,arguments)})}])&&ge(t.prototype,n),r&&ge(t,r),e}();var De=function e(t,n,r,a,i,s,o,d,p,l,c,y,u,f,m,_){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.inputsHash=D.hash([n,r,_?m:t,o]),this.scAddr=t,this.encryptedFn=n,this.encryptedAbiEncodedArgs=r,this.gasLimit=a,this.gasPx=i,this.msgId=s,this.userPubKey=o,this.firstBlockNumber=d,this.workerAddress=p,this.workerEncryptionKey=l,this.sender=c,this.userTaskSig=y,this.nonce=u,this.preCode=f,this.preCodeHash=m,this.isContractDeploymentTask=_,this.transactionHash="",this.taskId="",this.receipt="",this.ethStatus=0,this.proof="",this.creationBlockNumber=-1,this.encryptedAbiEncodedOutputs="",this.delta="",this.usedGas="",this.ethereumPayload="",this.ethereumAddress="",this.workerTaskSig="",this.engStatus="null",this.decryptedOutput=""},Se=n(10),Ie=n.n(Se),ke=n(11),he=n.n(ke),$e=n(12),ve=n.n($e),Ee=n(13),Ce=n(6),Ve=n.n(Ce);function xe(e){return(xe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Le(e,t,n,r,a,i,s){try{var o=e[i](s),d=o.value}catch(e){return void n(e)}o.done?t(d):Promise.resolve(d).then(r,a)}function Ne(e){return function(){var t=this,n=arguments;return new Promise(function(r,a){var i=e.apply(t,n);function s(e){Le(i,r,a,s,o,"next",e)}function o(e){Le(i,r,a,s,o,"throw",e)}s(void 0)})}}function Pe(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var we=function(){function e(t,n,r,a){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.web3=t,this.txDefaults=i,this.config={},this.config.retry={},this.config.retry.retries=s.retry&&null!=s.retry.retries?s.retry.retries:5,this.config.retry.factor=s.retry&&null!=s.retry.factor?s.retry.factor:2,this.config.retry.minTimeout=s.retry&&null!=s.retry.minTimeout?s.retry.minTimeout:2e3,this.config.retry.maxTimeout=s.retry&&null!=s.retry.maxTimeout?s.retry.maxTimeout:"Infinity",this.config.retry.randomize=!s.retry||(null==s.retry.randomize||s.retry.randomize);this.client=Ie()(function(e,t){he.a.post(a,JSON.parse(e),{headers:{"Content-Type":"application/json",credentials:"include"}}).then(function(e){if($ in e.data)t(e.data.error,null);else{var n=JSON.stringify(e.data.result);t(null,n)}}).catch(function(e){t({code:-32e3,message:e.message},null)})},{}),this.workerParamsCache={},this.selectedWorkerGroupCache={},this.taskKeyLocalStorage={},this.createContracts(n,r)}var t,n,r,a,s,d,l,c,y,u,f,m;return t=e,n=[{key:"admin",value:function(){this.admin=new Te(this.web3,this.enigmaContract,this.tokenContract,this.txDefaults,this)}},{key:"createContracts",value:function(e,t){this.enigmaContract=new this.web3.eth.Contract(S.abi,e,this.txDefaults),this.tokenContract=new this.web3.eth.Contract(I.abi,t,this.txDefaults)}},{key:"createTask",value:function(e,t,n,r,a,i,s){var o=this,d=new h.a;return Ne(regeneratorRuntime.mark(function p(){var l,c,y,u,f,m,_,b,g,T,S,I,k,h,v,E,C,V,x,L,N,P,w,R,A,W,q,M;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:return p.t0=parseInt,p.next=3,o.enigmaContract.methods.getUserTaskDeployments(a).call();case 3:if(p.t1=p.sent,l=(0,p.t0)(p.t1),c=s?D.generateScAddr(a,l):i,!s){p.next=17;break}if(!Buffer.isBuffer(i)){p.next=14;break}return y=i,p.next=11,D.gzip(y);case 11:u=p.sent,p.next=15;break;case 14:throw Error("PreCode expected to be a Buffer, instead got "+xe(i));case 15:p.next=19;break;case 17:y="",u="";case 19:for(f=s?o.web3.utils.soliditySha3({t:"bytes",value:y.toString("hex")}):"",m=void 0===t||0===t.length?[[],[]]:t[0].map(function(e,n){return t.map(function(e){return e[n]})}),_=D.remove0x(o.web3.eth.abi.encodeParameters(m[1],m[0])),b=[],g=0;g<_.length;g+=2)b.push(parseInt(_.substr(g,2),16));return p.next=26,o.web3.eth.getBlockNumber();case 26:return T=p.sent,p.next=29,o.getWorkerParams(T);case 29:return S=p.sent,I=S.firstBlockNumber,p.next=33,o.selectWorkerGroup(c,S,1)[0];case 33:return k=(k=p.sent).toLowerCase().slice(-40),h=o.obtainTaskKeyPair(),v=h.publicKey,E=h.privateKey,p.prev=36,p.next=39,new Promise(function(e,t){o.client.request("getWorkerEncryptionKey",{workerAddress:k,userPubKey:v},function(n,r){n?t(n):e(r)})});case 39:if(C=p.sent,V=C.result,x=C.id,L=V.workerEncryptionKey,N=V.workerSig,P="0x0000000000000013456e69676d612055736572204d6573736167650000000000000040"+L,w=(w=Ve.a.recover("0x"+N,o.web3.utils.soliditySha3({t:"bytes",value:P}))).toLowerCase().slice(-40),k===w){p.next=50;break}console.error("Worker address",k,"!= recovered address",w),d.emit($,{name:"InvalidWorker",message:"Invalid worker encryption key + signature combo ".concat(k," != ").concat(w)}),p.next=58;break;case 50:return R=D.getDerivedKey(L,E),A=D.encryptMessage(R,e),W=D.encryptMessage(R,Buffer.from(b)),q=o.web3.utils.soliditySha3({t:"bytes",v:A},{t:"bytes",v:W}),p.next=56,o.web3.eth.sign(q,a);case 56:M=p.sent,d.emit(U,new De(c,A,W,n,r,x,v,I,k,L,a,M,l,u.toString("base64"),f,s));case 58:p.next=63;break;case 60:p.prev=60,p.t2=p.catch(36),d.emit($,p.t2);case 63:case"end":return p.stop()}},p,null,[[36,60]])}))(),d}},{key:"createTaskRecord",value:function(e){var t=this,n=new h.a;return Ne(regeneratorRuntime.mark(function r(){var a;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,t.tokenContract.methods.balanceOf(e.sender).call();case 2:if(!(r.sent<e.gasLimit*e.gasPx)){r.next=6;break}return n.emit($,{name:"NotEnoughTokens",message:"Not enough tokens to pay the fee"}),r.abrupt("return");case 6:return r.next=8,t.tokenContract.methods.approve(t.enigmaContract.options.address,e.gasLimit*e.gasPx).send({from:e.sender});case 8:if(r.prev=8,!e.isContractDeploymentTask){r.next=15;break}return r.next=12,t.enigmaContract.methods.createDeploymentTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber,e.nonce).send({from:e.sender}).on("transactionHash",function(t){e.transactionHash=t,n.emit(O,t)}).on("confirmation",function(e,t){n.emit(z,e,t)});case 12:r.t0=r.sent,r.next=18;break;case 15:return r.next=17,t.enigmaContract.methods.createTaskRecord(e.inputsHash,e.gasLimit,e.gasPx,e.firstBlockNumber).send({from:e.sender}).on("transactionHash",function(t){e.transactionHash=t,n.emit(O,t)}).on("confirmation",function(e,t){n.emit(z,e,t)});case 17:r.t0=r.sent;case 18:a=r.t0,e.taskId=a.events.TaskRecordCreated.returnValues.taskId,e.receipt=a,e.ethStatus=1,e.creationBlockNumber=a.blockNumber,n.emit(K,a),n.emit(j,e),r.next=30;break;case 27:r.prev=27,r.t1=r.catch(8),n.emit($,r.t1.message);case 30:case"end":return r.stop()}},r,null,[[8,27]])}))(),n}},{key:"getTaskRecordStatus",value:(m=Ne(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t.taskId).call();case 2:return n=e.sent,t.ethStatus=parseInt(n.status),t.proof=n.proof,e.abrupt("return",t);case 6:case"end":return e.stop()}},e,this)})),function(e){return m.apply(this,arguments)})},{key:"getTaskRecordFromTaskId",value:(f=Ne(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t).call();case 2:return n=e.sent,e.abrupt("return",{sender:n.sender,inputsHash:n.inputsHash,outputHash:n.outputHash,gasLimit:parseInt(n.gasLimit),gasPx:parseInt(n.gasPx),blockNumber:parseInt(n.blockNumber),status:parseInt(n.status),proof:n.proof});case 4:case"end":return e.stop()}},e,this)})),function(e){return f.apply(this,arguments)})},{key:"getTaskOutputHash",value:(u=Ne(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getTaskRecord(t.taskId).call();case 2:return e.abrupt("return",e.sent.outputHash);case 3:case"end":return e.stop()}},e,this)})),function(e){return u.apply(this,arguments)})},{key:"getReport",value:(y=Ne(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.enigmaContract.methods.getReport(t).call();case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e,this)})),function(e){return y.apply(this,arguments)})},{key:"getWorkerParams",value:(c=Ne(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!(0===Object.keys(this.workerParamsCache).length||t-this.workerParamsCache.firstBlockNumber>=this.epochSize)){e.next=8;break}return e.next=3,this.enigmaContract.methods.getEpochSize().call();case 3:return this.epochSize=e.sent,e.next=6,this.enigmaContract.methods.getWorkerParams(t).call();case 6:n=e.sent,this.workerParamsCache={firstBlockNumber:parseInt(n[0]),seed:i.a.BigInt(n[1]),workers:n[2],stakes:n[3].map(function(e){return i.a.BigInt(e)})};case 8:return e.abrupt("return",this.workerParamsCache);case 9:case"end":return e.stop()}},e,this)})),function(e){return c.apply(this,arguments)})},{key:"selectWorkerGroup",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5,r=t.stakes.reduce(function(e,t){return i.a.add(e,t)},i.a.BigInt(0)),a=0,s=[];do{for(var d=Ee.rawEncode(["uint256","bytes32","uint256"],[t.seed.toString(10),e,a]),p=o.a.keccak256(d),l=i.a.remainder(i.a.BigInt(p),r),c=t.workers[t.workers.length-1],y=0;y<t.workers.length;y++)if((l=i.a.subtract(l,t.stakes[y]))<=0){c=t.workers[y];break}s.includes(c)||s.push(c),a++}while(s.length<n);return s}},{key:"sendTaskInput",value:function(t){var n=this,r=new h.a;return Ne(regeneratorRuntime.mark(function a(){var i,s;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return i=ne,s=Y,t.isContractDeploymentTask&&(i=re,s=X),a.prev=3,a.next=6,new Promise(function(r,a){n.client.request(i,e.serializeTask(t),function(e,t){e?a(e):r(t)})});case 6:r.emit(s,t),a.next=12;break;case 9:a.prev=9,a.t0=a.catch(3),r.emit($,a.t0);case 12:case"end":return a.stop()}},a,null,[[3,9]])}))(),r}},{key:"getTaskResult",value:function(e){var t=this,n=new h.a,r=ve.a.operation(this.config.retry);return r.attempt(function(){var a=Ne(regeneratorRuntime.mark(function a(i){var s;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,new Promise(function(n,r){t.client.request(ae,{taskId:D.remove0x(e.taskId)},function(e,t){e?r(e):n(t)})});case 3:if(!(s=a.sent).result){a.next=20;break}a.t0=s.result.status,a.next=a.t0===se?8:a.t0===oe?12:a.t0===de?15:a.t0===pe?15:17;break;case 8:e.delta=s.result.delta,e.ethereumPayload=s.result.ethereumPayload,e.ethereumAddress=s.result.ethereumAddress,e.preCodeHash=s.result.preCodeHash;case 12:e.encryptedAbiEncodedOutputs=s.result.output,e.usedGas=s.result.usedGas,e.workerTaskSig=s.result.signature;case 15:return e.engStatus=s.result.status,a.abrupt("break",18);case 17:throw new Error("Invalid task result status").message;case 18:a.next=26;break;case 20:if(!r.retry(!0)){a.next=25;break}return console.log("Warning: Got an empty TaskResult on attempt "+i+" of "+(t.config.retry.retries+1)+". Retrying..."),a.abrupt("return");case 25:e.engStatus=null;case 26:n.emit(Z,e),a.next=32;break;case 29:a.prev=29,a.t1=a.catch(0),n.emit($,a.t1);case 32:case"end":return a.stop()}},a,null,[[0,29]])}));return function(e){return a.apply(this,arguments)}}()),n}},{key:"returnFeesForTask",value:function(e){var t=this,n=new h.a;return Ne(regeneratorRuntime.mark(function r(){var a,i;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,t.enigmaContract.methods.getTaskTimeoutSize().call();case 2:return a=r.sent,r.next=5,t.web3.eth.getBlockNumber();case 5:if(!(r.sent-e.creationBlockNumber<=a)){r.next=9;break}return n.emit($,{name:"InvalidTaskReturn",message:"Not enough time has elapsed to return task funds"}),r.abrupt("return");case 9:return r.prev=9,r.next=12,t.enigmaContract.methods.returnFeesForTask(e.taskId).send({from:e.sender});case 12:i=r.sent,e.ethStatus=me,n.emit(Q,i),n.emit(ee,e),r.next=21;break;case 18:r.prev=18,r.t0=r.catch(9),n.emit($,r.t0.message);case 21:case"end":return r.stop()}},r,null,[[9,18]])}))(),n}},{key:"decryptTaskResult",value:(l=Ne(regeneratorRuntime.mark(function e(t){var n,r,a;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("task.encryptedAbiEncodedOutputs is "+t.encryptedAbiEncodedOutputs),t.encryptedAbiEncodedOutputs?(n=this.obtainTaskKeyPair(),r=n.privateKey,a=D.getDerivedKey(t.workerEncryptionKey,r),t.decryptedOutput=D.decryptMessage(a,t.encryptedAbiEncodedOutputs)):(console.log("Warning: task.encryptedAbiEncodedOutputs is empty, there is nothing to decrypt."),t.decryptedOutput=null),e.abrupt("return",t);case 3:case"end":return e.stop()}},e,this)})),function(e){return l.apply(this,arguments)})},{key:"verifyTaskOutput",value:(d=Ne(regeneratorRuntime.mark(function e(t){var n,r;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getTaskOutputHash(t);case 2:return n=e.sent,r=this.web3.utils.soliditySha3({t:"bytes",value:t.encryptedAbiEncodedOutputs.toString("hex")}),e.abrupt("return",n===r);case 5:case"end":return e.stop()}},e,this)})),function(e){return d.apply(this,arguments)})},{key:"verifyTaskStatus",value:(s=Ne(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.getTaskRecordStatus(t);case 2:n=e.sent.ethStatus,e.t0=t.engStatus,e.next=e.t0===se?6:e.t0===oe?8:e.t0===de?10:e.t0===pe?10:12;break;case 6:return e.abrupt("return",n===ye);case 8:return e.abrupt("return",n===ue);case 10:return e.abrupt("return",n===ce);case 12:return e.abrupt("return",n===le);case 13:case"end":return e.stop()}},e,this)})),function(e){return s.apply(this,arguments)})},{key:"pollTaskStatusGen",value:regeneratorRuntime.mark(function e(t,n){var r=this;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=3,new Promise(function(e,a){r.client.request(ie,{taskId:D.remove0x(t.taskId),workerAddress:t.workerAddress,withResult:n},function(r,i){r?a(r):(t.engStatus=i.result.status,n&&(t.encryptedAbiEncodedOutputs=i.result.output),e(t))})});case 3:e.next=0;break;case 5:case"end":return e.stop()}},e)})},{key:"innerPollTaskStatus",value:function(e,t,n){var r=this;t.next().value.then(function(a){n.emit(J,a),"SUCCESS"!==a.engStatus&&"FAILED"!==a.engStatus&&r.innerPollTaskStatus(e,t,n)}).catch(function(e){n.emit($,e)})}},{key:"pollTaskStatus",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=new h.a,r=this.pollTaskStatusGen(e,t);return this.innerPollTaskStatus(e,r,n),n}},{key:"pollTaskETH",value:(a=Ne(regeneratorRuntime.mark(function e(t){var n,r=arguments;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n=r.length>1&&void 0!==r[1]?r[1]:1e3;case 1:if(t.ethStatus!==ce){e.next=9;break}return e.next=4,this.getTaskRecordStatus(t);case 4:return t=e.sent,e.next=7,D.sleep(n);case 7:e.next=1;break;case 9:return e.abrupt("return",t);case 10:case"end":return e.stop()}},e,this)})),function(e){return a.apply(this,arguments)})},{key:"obtainTaskKeyPair",value:function(){var e,t="undefined"!=typeof window,n=t?window.localStorage.getItem("encodedPrivateKey"):this.taskKeyLocalStorage.encodedPrivateKey;if(null==n)throw Error("Need to set task key pair first");return e=t?atob(n):Buffer.from(n,"base64").toString("binary"),{publicKey:Ve.a.publicKeyByPrivateKey(e),privateKey:e}}},{key:"setTaskKeyPair",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t="undefined"!=typeof window;if(""===e)for(var n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",r=0;r<9;r++)e+=n.charAt(Math.floor(Math.random()*n.length));var a=p.a.random.createInstance();a.seedFileSync=function(t){return p.a.util.fillString(e,t)};var i=p.a.util.bytesToHex(a.getBytes(32));return t?window.localStorage.setItem("encodedPrivateKey",btoa(i)):this.taskKeyLocalStorage.encodedPrivateKey=Buffer.from(i,"binary").toString("base64"),e}},{key:"deploySecretContract",value:function(e,t,n,r,a,i){var s=this,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,d=new h.a;return Ne(regeneratorRuntime.mark(function p(){var l;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:l=0;case 1:return p.prev=2,p.delegateYield(regeneratorRuntime.mark(function o(){var p;return regeneratorRuntime.wrap(function(o){for(;;)switch(o.prev=o.next){case 0:return o.next=2,new Promise(function(o,d){s.createTask(e,t,n,r,a,i,!0).on(U,function(e){return o(e)}).on($,function(e){return d(e)})});case 2:return p=o.sent,d.emit(U,p),o.next=6,new Promise(function(e,t){s.createTaskRecord(p).on(j,function(t){return e(t)}).on($,function(e){return t(e)})});case 6:return p=o.sent,d.emit(j,p),o.next=10,new Promise(function(e,t){s.sendTaskInput(p).on(X,function(t){return e(t)}).on($,function(e){return t(e)})});case 10:return d.emit(X,p),o.abrupt("return","break");case 12:case"end":return o.stop()}},o)})(),"t0",4);case 4:if("break"!==p.t0){p.next=7;break}return p.abrupt("break",16);case 7:p.next=14;break;case 9:if(p.prev=9,p.t1=p.catch(2),!(l++>=o||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==p.t1)){p.next=14;break}return d.emit($,p.t1),p.abrupt("break",16);case 14:p.next=1;break;case 16:case"end":return p.stop()}},p,null,[[2,9]])}))(),d}},{key:"computeTask",value:function(e,t,n,r,a,i){var s=this,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,d=new h.a;return Ne(regeneratorRuntime.mark(function p(){var l;return regeneratorRuntime.wrap(function(p){for(;;)switch(p.prev=p.next){case 0:l=0;case 1:return p.prev=2,p.delegateYield(regeneratorRuntime.mark(function o(){var p;return regeneratorRuntime.wrap(function(o){for(;;)switch(o.prev=o.next){case 0:return o.next=2,new Promise(function(o,d){s.createTask(e,t,n,r,a,i,!1).on(U,function(e){return o(e)}).on($,function(e){return d(e)})});case 2:return p=o.sent,d.emit(U,p),o.next=6,new Promise(function(e,t){s.createTaskRecord(p).on(j,function(t){return e(t)}).on($,function(e){return t(e)})});case 6:return p=o.sent,d.emit(j,p),o.next=10,new Promise(function(e,t){s.sendTaskInput(p).on(Y,function(t){return e(t)}).on($,function(e){return t(e)})});case 10:return d.emit(Y,p),o.abrupt("return","break");case 12:case"end":return o.stop()}},o)})(),"t0",4);case 4:if("break"!==p.t0){p.next=7;break}return p.abrupt("break",16);case 7:p.next=14;break;case 9:if(p.prev=9,p.t1=p.catch(2),!(l++>=o||"Returned error: VM Exception while processing transaction: revert Wrong epoch for this task"!==p.t1)){p.next=14;break}return d.emit($,p.t1),p.abrupt("break",16);case 14:p.next=1;break;case 16:case"end":return p.stop()}},p,null,[[2,9]])}))(),d}}],r=[{key:"serializeTask",value:function(e){return e.isContractDeploymentTask?{preCode:e.preCode,encryptedArgs:D.remove0x(e.encryptedAbiEncodedArgs),encryptedFn:D.remove0x(e.encryptedFn),userDHKey:D.remove0x(e.userPubKey),contractAddress:D.remove0x(e.scAddr),workerAddress:e.workerAddress}:{taskId:D.remove0x(e.taskId),workerAddress:e.workerAddress,encryptedFn:D.remove0x(e.encryptedFn),encryptedArgs:D.remove0x(e.encryptedAbiEncodedArgs),contractAddress:D.remove0x(e.scAddr),userDHKey:D.remove0x(e.userPubKey)}}},{key:"version",value:function(){return"0.0.1"}}],n&&Pe(t.prototype,n),r&&Pe(t,r),e}();n.d(t,"Enigma",function(){return we}),n.d(t,"utils",function(){return D}),n.d(t,"eeConstants",function(){return r})}])});
//# sourceMappingURL=enigma-js.node.min.js.map